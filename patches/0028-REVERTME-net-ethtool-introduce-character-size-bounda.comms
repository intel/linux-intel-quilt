From a77b5a979259c758b86b45db8b1c9f32a396f2e4 Mon Sep 17 00:00:00 2001
From: Ong Boon Leong <boon.leong.ong@intel.com>
Date: Tue, 3 Jul 2018 02:06:32 +0800
Subject: [PATCH 28/58] REVERTME: net: ethtool: introduce character size
 boundary for ETHTOOL_TUNABLE_STRING

The tunable parameter belongs to 'ETHTOOL_TUNABLE_STRING' tunable_type_id
should be bounded. This is the max value that tuna.len is checked against.

Change-Id: I3f83c1a8f8549f69f4e48578a35cde92ff9d4ceb
Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
---
 include/uapi/linux/ethtool.h | 2 ++
 net/core/ethtool.c           | 4 ++++
 2 files changed, 6 insertions(+)

diff --git a/include/uapi/linux/ethtool.h b/include/uapi/linux/ethtool.h
index 7aa41b1..58e2118 100644
--- a/include/uapi/linux/ethtool.h
+++ b/include/uapi/linux/ethtool.h
@@ -234,6 +234,8 @@ enum tunable_id {
 	__ETHTOOL_TUNABLE_COUNT,
 };
 
+#define ETHTOOL_TUNABLE_STRING_MAX	20
+
 enum tunable_type_id {
 	ETHTOOL_TUNABLE_UNSPEC,
 	ETHTOOL_TUNABLE_U8,
diff --git a/net/core/ethtool.c b/net/core/ethtool.c
index e737821..d30b0a9 100644
--- a/net/core/ethtool.c
+++ b/net/core/ethtool.c
@@ -2370,6 +2370,8 @@ static int ethtool_set_tunable(struct net_device *dev, void __user *useraddr)
 	ret = ethtool_tunable_valid(&tuna);
 	if (ret)
 		return ret;
+	if (tuna.len > ETHTOOL_TUNABLE_STRING_MAX)
+		return -EINVAL;
 	useraddr += sizeof(tuna);
 	data = memdup_user(useraddr, tuna.len);
 	if (IS_ERR(data))
@@ -2546,6 +2548,8 @@ static int set_phy_tunable(struct net_device *dev, void __user *useraddr)
 	ret = ethtool_phy_tunable_valid(&tuna);
 	if (ret)
 		return ret;
+	if (tuna.len > ETHTOOL_TUNABLE_STRING_MAX)
+		return -EINVAL;
 	useraddr += sizeof(tuna);
 	data = memdup_user(useraddr, tuna.len);
 	if (IS_ERR(data))
-- 
2.7.4

