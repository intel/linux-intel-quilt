From 5f8e2ed41c9eb0d5723e3a4e9e8a09913cca584e Mon Sep 17 00:00:00 2001
From: Kweh Hock Leong <hock.leong.kweh@intel.com>
Date: Mon, 25 Feb 2019 23:17:30 +0800
Subject: [PATCH 081/103] REVERTME: net: stmmac: workaround to DMA transfer
 mode bit

This temporary fix to workaround HW register bit unable to auto
change when ownership is change.

Signed-off-by: Kweh Hock Leong <hock.leong.kweh@intel.com>
Signed-off-by: Song, Yoong Siang <yoong.siang.song@intel.com>
---
 .../net/ethernet/stmicro/stmmac/stmmac_pci.c  | 20 +++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c
index a8c898b4e23c..357ccc95e139 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c
@@ -327,11 +327,30 @@ static struct stmmac_pci_info ehl_rgmii1g_pci_info = {
 	.setup = ehl_rgmii_data,
 };
 
+#define EHL_PSE_ETH_DMA_MISC_OFFSET	0x10000
+#define EHL_PSE_ETH_DMA_MISC_DTM_DRAM	3
+#define EHL_PSE_ETH_DMA_TOTAL_CH	16
+static void ehl_pse_work_around(struct pci_dev *pdev)
+{
+	void __iomem *tempaddr = pcim_iomap_table(pdev)[0];
+	int i;
+	u32 val;
+
+	for (i = 0; i < EHL_PSE_ETH_DMA_TOTAL_CH; i++) {
+		val = readl(tempaddr + EHL_PSE_ETH_DMA_MISC_OFFSET
+			    + i * sizeof(u32));
+		val |= EHL_PSE_ETH_DMA_MISC_DTM_DRAM;
+		writel(val, tempaddr + EHL_PSE_ETH_DMA_MISC_OFFSET
+		       + i * sizeof(u32));
+	}
+}
+
 static int ehl_pse0_common_data(struct pci_dev *pdev,
 				struct plat_stmmacenet_data *plat)
 {
 	plat->bus_id = 2;
 	plat->phy_addr = 1;
+	ehl_pse_work_around(pdev);
 	return ehl_common_data(pdev, plat);
 }
 
@@ -362,6 +381,7 @@ static int ehl_pse1_common_data(struct pci_dev *pdev,
 {
 	plat->bus_id = 3;
 	plat->phy_addr = 1;
+	ehl_pse_work_around(pdev);
 	return ehl_common_data(pdev, plat);
 }
 
-- 
2.17.1

