From dfb2f0ef0431b4ed3a5c6887d72e60073b179b11 Mon Sep 17 00:00:00 2001
From: Pawel Furtak <pawel.furtak@intel.com>
Date: Thu, 21 Mar 2019 15:14:47 +0100
Subject: [PATCH 3/4] ASoC: Intel: Skl: Virt: Increase reply timeout for PCM
 trigger

In various cases PCM trigger ops may take a lot of time to complete
on BE side. Setting fixed value for timeout may be more reliable but can
lead to deadlock. Instead, increase timeout to value that should be
sufficient for most cases.

Change-Id: I6d94885411fa9cd051552bc0bf809f1d25b24b6b
Tracked-On: OAM-77677
Signed-off-by: Pawel Furtak <pawel.furtak@intel.com>

Tested-by: gkblditp <gkblditp@intel.com>
Reviewed-by: Wojciech Jablonski <wojciech.jablonski@intel.com>
Tested-by: Wojciech Jablonski <wojciech.jablonski@intel.com>
---
 .../soc/intel/skylake/virtio/skl-virtio-fe.c  | 62 ++++++++++++++++---
 .../soc/intel/skylake/virtio/skl-virtio-fe.h  |  2 +
 2 files changed, 54 insertions(+), 10 deletions(-)

diff --git a/sound/soc/intel/skylake/virtio/skl-virtio-fe.c b/sound/soc/intel/skylake/virtio/skl-virtio-fe.c
index c9475a0852e1..c41292b8fe2a 100644
--- a/sound/soc/intel/skylake/virtio/skl-virtio-fe.c
+++ b/sound/soc/intel/skylake/virtio/skl-virtio-fe.c
@@ -139,9 +139,34 @@ const struct snd_pcm *vfe_skl_find_pcm_by_name(struct skl *skl, char *pcm_name)
 	return NULL;
 }
 
-static int vfe_send_msg(struct snd_skl_vfe *vfe,
+static int vfe_wait_for_msg_response(struct snd_skl_vfe *vfe,
+	struct vfe_ipc_msg *msg,
+	wait_queue_head_t *waitq,
+	bool *completed,
+	int timeout)
+{
+	int ret = 0;
+
+	if (!timeout) {
+		wait_event(*waitq, *completed);
+		return 0;
+	}
+
+	ret =  wait_event_timeout(*waitq, *completed,
+				msecs_to_jiffies(timeout));
+
+	if (ret == 0) {
+		atomic_set(&msg->status, VFE_MSG_TIMED_OUT);
+		dev_err(&vfe->vdev->dev, "Response from backend timed out\n");
+		return -ETIMEDOUT;
+	}
+
+	return 0;
+}
+
+int vfe_send_msg_with_timeout(struct snd_skl_vfe *vfe,
 	struct vfe_msg_header *msg_header, void *tx_data, int tx_size,
-	void *rx_data, int rx_size)
+	void *rx_data, int rx_size, int timeout)
 {
 	wait_queue_head_t waitq;
 	struct scatterlist sgs[3];
@@ -199,13 +224,10 @@ static int vfe_send_msg(struct snd_skl_vfe *vfe,
 
 	// If response is expected, wait for it
 	if (rx_data) {
-		ret = wait_event_timeout(waitq, completed,
-				msecs_to_jiffies(VFE_MSG_MSEC_TIMEOUT));
-		if (ret == 0) {
-			atomic_set(&msg->status, VFE_MSG_TIMED_OUT);
-			dev_err(&vfe->vdev->dev, "Response from backend timed out\n");
-			return -ETIMEDOUT;
-		}
+		ret = vfe_wait_for_msg_response(vfe, msg, &waitq,
+			&completed, timeout);
+		if (ret < 0)
+			return ret;
 	}
 
 	return 0;
@@ -218,6 +240,22 @@ static int vfe_send_msg(struct snd_skl_vfe *vfe,
 	return -ENOMEM;
 }
 
+int vfe_send_blocking_msg(struct snd_skl_vfe *vfe,
+	struct vfe_msg_header *msg_header, void *tx_data, int tx_size,
+	void *rx_data, int rx_size)
+{
+	return vfe_send_msg_with_timeout(vfe, msg_header, tx_data,
+		tx_size, rx_data, rx_size, VFE_MSG_NO_TIMEOUT);
+}
+
+int vfe_send_msg(struct snd_skl_vfe *vfe,
+	struct vfe_msg_header *msg_header, void *tx_data, int tx_size,
+	void *rx_data, int rx_size)
+{
+	return vfe_send_msg_with_timeout(vfe, msg_header, tx_data,
+		tx_size, rx_data, rx_size, VFE_MSG_MSEC_TIMEOUT);
+}
+
 static int vfe_send_kctl_msg(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol, struct vfe_kctl_result *result)
 {
@@ -611,6 +649,7 @@ int vfe_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
 	struct snd_skl_vfe *vfe = get_virtio_audio_fe();
 	struct vfe_msg_header msg_header;
+	struct vfe_pcm_result vbe_result;
 	int ret;
 
 	ret = skl_platform_pcm_trigger(substream, cmd);
@@ -623,7 +662,10 @@ int vfe_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 
 	vfe_fill_pcm_msg_header(&msg_header, VFE_MSG_PCM_TRIGGER, substream);
 
-	return vfe_send_msg(vfe, &msg_header, &cmd, sizeof(cmd), NULL, 0);
+	ret = vfe_send_msg_with_timeout(vfe, &msg_header, &cmd, sizeof(cmd),
+		&vbe_result, sizeof(vbe_result), VFE_MSG_TRIGGER_TIMEOUT);
+
+	return ret;
 }
 
 int vfe_pcm_prepare(struct snd_pcm_substream *substream)
diff --git a/sound/soc/intel/skylake/virtio/skl-virtio-fe.h b/sound/soc/intel/skylake/virtio/skl-virtio-fe.h
index fcc2dc29c3f7..7f62b6cb2474 100644
--- a/sound/soc/intel/skylake/virtio/skl-virtio-fe.h
+++ b/sound/soc/intel/skylake/virtio/skl-virtio-fe.h
@@ -13,6 +13,8 @@
 #include "skl-virtio-common.h"
 
 #define VFE_MSG_MSEC_TIMEOUT 100
+#define VFE_MSG_TRIGGER_TIMEOUT 500
+#define VFE_MSG_NO_TIMEOUT 0
 #define VFE_TPLG_LOAD_TIMEOUT 1000
 #define VFE_MSG_BUFF_NUM 3
 
-- 
2.17.1

