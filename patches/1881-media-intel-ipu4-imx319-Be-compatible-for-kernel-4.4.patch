From e6901f5fb919791604ef7a44e7a6400fdad0ade9 Mon Sep 17 00:00:00 2001
From: Tianshu Qiu <tian.shu.qiu@intel.com>
Date: Fri, 4 May 2018 15:11:28 +0800
Subject: [PATCH 1881/2328] media: intel-ipu4: imx319: Be compatible for kernel
 4.4 and 4.14

Message for Open Source:
Wrap code with kernel version checking to make driver be compatible
with both kernel 4.4 and 4.14.

Message for Internal:
[Issue/Feature] imx319 driver needs kernel version adapation as it is
used for both KBL(kernel 4.4) and CNL/ICL(kernel 4.14)
[Root Cause/Changes] Wrap code to make driver compatible for both
kernel 4.4 and 4.14. v4l2_async_register_subdev_sensor_common()
is a special case. It has been upstreamed but does not exist in
kernel 4.4 and 4.14. Google kernel has back ported this patch
so it has this function. As this driver is only used in
google kernel, no macro wraping is applied for this function.

Change-Id: I37480cf4e97d2ff89d3be86f2b9b17f81de87702
Signed-off-by: Tianshu Qiu <tian.shu.qiu@intel.com>
Signed-off-by: Meng Wei <wei.meng@intel.com>
---
 drivers/media/i2c/imx319.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/drivers/media/i2c/imx319.c b/drivers/media/i2c/imx319.c
index 909e927..4ccd4a3 100644
--- a/drivers/media/i2c/imx319.c
+++ b/drivers/media/i2c/imx319.c
@@ -2416,17 +2416,25 @@ static int imx319_probe(struct i2c_client *client,
 	imx319->sd.internal_ops = &imx319_internal_ops;
 	imx319->sd.flags |= V4L2_SUBDEV_FL_HAS_DEVNODE;
 	imx319->sd.entity.ops = &imx319_subdev_entity_ops;
+#if LINUX_VERSION_CODE > KERNEL_VERSION(4, 4, 0)
 	imx319->sd.entity.function = MEDIA_ENT_F_CAM_SENSOR;
+#else
+	imx319->sd.entity.type = MEDIA_ENT_T_V4L2_SUBDEV_SENSOR;
+#endif
 
 	/* Initialize source pad */
 	imx319->pad.flags = MEDIA_PAD_FL_SOURCE;
+#if LINUX_VERSION_CODE > KERNEL_VERSION(4, 4, 0)
 	ret = media_entity_pads_init(&imx319->sd.entity, 1, &imx319->pad);
+#else
+	ret = media_entity_init(&imx319->sd.entity, 1, &imx319->pad, 0);
+#endif
 	if (ret) {
 		dev_err(&client->dev, "%s failed:%d\n", __func__, ret);
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev(&imx319->sd);
+	ret = v4l2_async_register_subdev_sensor_common(&imx319->sd);
 	if (ret < 0)
 		goto error_media_entity;
 
-- 
2.7.4

