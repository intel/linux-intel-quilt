From cc1b2454978a4da970e2e0a6ec66885dda41fd67 Mon Sep 17 00:00:00 2001
From: Raghuveer KadarlaX <raghuveerx.kadarla@intel.com>
Date: Mon, 10 Jan 2022 09:21:44 +0530
Subject: [PATCH 099/109] misc: xpcie: fix v5.15 build issues

fix issues with,
- dma configuration
- device BAR nunmber
- device_list query

Signed-off-by: Raghuveer KadarlaX <raghuveerx.kadarla@intel.com>
---
 drivers/misc/xlink-pcie/local_host/dma.c  | 23 +----------------------
 drivers/misc/xlink-pcie/local_host/epf.c  |  8 +++++++-
 drivers/misc/xlink-pcie/remote_host/pci.c |  5 +++--
 3 files changed, 11 insertions(+), 25 deletions(-)

diff --git a/drivers/misc/xlink-pcie/local_host/dma.c b/drivers/misc/xlink-pcie/local_host/dma.c
index 8921b2b3707d..58b4605fb965 100644
--- a/drivers/misc/xlink-pcie/local_host/dma.c
+++ b/drivers/misc/xlink-pcie/local_host/dma.c
@@ -254,29 +254,8 @@ static void intel_xpcie_ep_dma_enable(void __iomem *dma_base,
 static int intel_xpcie_ep_dma_doorbell(struct xpcie_epf *xpcie_epf, int chan,
 				       void __iomem *doorbell)
 {
-	int i = DMA_PCIE_PM_L1_TIMEOUT, rc = 0;
-	u32 val, pm_val;
-
-	val = ioread32(xpcie_epf->apb_base + PCIE_REGS_PCIE_APP_CNTRL);
-	iowrite32(val | APP_XFER_PENDING,
-		  xpcie_epf->apb_base + PCIE_REGS_PCIE_APP_CNTRL);
-	pm_val = ioread32(xpcie_epf->apb_base + PCIE_REGS_PCIE_SII_PM_STATE_1);
-	while (pm_val & PM_LINKST_IN_L1) {
-		if (i-- < 0) {
-			rc = -ETIME;
-			break;
-		}
-		udelay(5);
-		pm_val = ioread32(xpcie_epf->apb_base +
-				  PCIE_REGS_PCIE_SII_PM_STATE_1);
-	}
-
 	iowrite32((u32)chan, doorbell);
-
-	iowrite32(val & ~APP_XFER_PENDING,
-		  xpcie_epf->apb_base + PCIE_REGS_PCIE_APP_CNTRL);
-
-	return rc;
+	return 0;
 }
 
 static int intel_xpcie_ep_dma_err_status(void __iomem *err_status, int chan)
diff --git a/drivers/misc/xlink-pcie/local_host/epf.c b/drivers/misc/xlink-pcie/local_host/epf.c
index 4aaf6518215f..f68b9fc7f61c 100644
--- a/drivers/misc/xlink-pcie/local_host/epf.c
+++ b/drivers/misc/xlink-pcie/local_host/epf.c
@@ -117,7 +117,6 @@ static irqreturn_t intel_xpcie_host_interrupt(int irq, void *args)
 
 	xpcie_epf = container_of(xpcie, struct xpcie_epf, xpcie);
 	epf = xpcie_epf->epf;
-
 	if (epf->header->deviceid == PCI_DEVICE_ID_INTEL_KEEMBAY) {
 		val = ioread32(xpcie_epf->apb_base + PCIE_REGS_PCIE_INTR_FLAGS);
 		if (!(val & LBC_CII_EVENT_FLAG))
@@ -205,6 +204,7 @@ static int intel_xpcie_setup_bar(struct pci_epf *epf, enum pci_barno barno,
 	if (!min_size)
 		return 0;
 
+	bar->barno = barno;
 	bar->flags |= PCI_BASE_ADDRESS_MEM_TYPE_64;
 	if (!bar->size)
 		bar->size = min_size;
@@ -294,6 +294,12 @@ static int intel_xpcie_epf_get_thb_pf_data(struct platform_device *pdev,
 
 	dma_dev = epc->dev.parent;
 
+	res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "dma");
+	xpcie_epf->dma_base =
+		devm_ioremap(dma_dev, res->start, resource_size(res));
+	if (IS_ERR(xpcie_epf->dma_base))
+		return PTR_ERR(xpcie_epf->dma_base);
+
 	res = platform_get_resource_byname(pdev,
 					   IORESOURCE_MEM,
 					   "doorbell");
diff --git a/drivers/misc/xlink-pcie/remote_host/pci.c b/drivers/misc/xlink-pcie/remote_host/pci.c
index 696e21e98246..f0086ee15e65 100644
--- a/drivers/misc/xlink-pcie/remote_host/pci.c
+++ b/drivers/misc/xlink-pcie/remote_host/pci.c
@@ -38,7 +38,7 @@ struct xpcie_dev *intel_xpcie_create_device(u32 sw_device_id,
 		 pdev->bus->number,
 		 PCI_SLOT(pdev->devfn),
 		 PCI_FUNC(pdev->devfn));
-
+	memcpy(xdev->xpcie.name, xdev->name, XPCIE_MAX_NAME_LEN);
 	mutex_init(&xdev->lock);
 
 	return xdev;
@@ -146,7 +146,8 @@ static irqreturn_t intel_xpcie_core_interrupt(int irq, void *args)
 
 	event = intel_xpcie_get_doorbell(&xdev->xpcie, FROM_DEVICE, DEV_EVENT);
 	if (event == DEV_SHUTDOWN || event == 0xFF) {
-		pr_info("%s: shutdown_event (event=0x%x)\n", __func__, event);
+		dev_err(&xdev->pci->dev,
+			"%s: shutdown_event (event=0x%x)\n", __func__, event);
 		schedule_delayed_work(&xdev->shutdown_event, 0);
 		return IRQ_HANDLED;
 	}
-- 
2.25.1

