From 4deaccdd695ffe1df2518e0719fe3ec1ff1c681d Mon Sep 17 00:00:00 2001
From: Jacob Pan <jacob.jun.pan@linux.intel.com>
Date: Tue, 9 Jul 2024 07:38:57 -0700
Subject: [PATCH 41/49] x86/nmi: Define NMI-source vectors

When NMI-source reporting is supported, each logical processor maintains
a NMI-source bitmap and software can program different NMI sources to use
different vectors.

<NMI_SOURCE_VEC_IPI_REBOOT probably not needed >

<Is there a better header file for NMI source information>

<Update names of the vectors to include the word vector>

Define NMI-source vectors for different usages.

Signed-off-by: Jacob Pan <jacob.jun.pan@linux.intel.com>
---
 arch/x86/include/asm/irq_vectors.h | 50 ++++++++++++++++++++++++++++++
 1 file changed, 50 insertions(+)

diff --git a/arch/x86/include/asm/irq_vectors.h b/arch/x86/include/asm/irq_vectors.h
index 47051871b436..ab97cdd2123e 100644
--- a/arch/x86/include/asm/irq_vectors.h
+++ b/arch/x86/include/asm/irq_vectors.h
@@ -114,6 +114,56 @@
 #define NR_EXTERNAL_VECTORS		(FIRST_SYSTEM_VECTOR - FIRST_EXTERNAL_VECTOR)
 #define NR_SYSTEM_VECTORS		(NR_VECTORS - FIRST_SYSTEM_VECTOR)
 
+/*
+ * When NMI-source reporting is supported, each logical processor maintains
+ * an NMI-source bitmap and software can program different NMI originators
+ * to use different vectors.
+ *
+ *   1) If a logical processor receives an NMI with a vector, it sets the
+ *      bit corresponding to the vector as offset in the NMI-source bitmap.
+ *
+ *   2) If a logical processor receives an NMI without a vector, it sets
+ *      bit 0 of the NMI-source bitmap.
+ *
+ *   3) NMIs are coalesced in the NMI-source bitmap until the following NMI
+ *      delivery.
+ *
+ *   4) When a logical processor delivers an NMI, it saves the NMI-source
+ *      bitmap on the stack as event data and clears it.
+ *
+ * The valid range of NMI-source vectors is 0~15, because the NMI-source
+ * bitmap is defined as a 16-bit bitmap as of now, and 0 is used for all
+ * unknown sources.  If an NMI is received with a vector out of the valid
+ * range, bit 0 of the NMI-source bitmap is set.
+ *
+ * When bit 0 is set, software should invoke all registered NMI handlers as
+ * if NMI-source reporting is not enabled.
+ *
+ * Vector 2 is set in local APIC LINT1 (= external NMI) for:
+ *
+ *   1) Platform NMIs routed through local APICs will be delivered with
+ *      bit 2 set in the NMI-source bitmap.
+ *
+ *   2) Some third-party chipset might send NMI messages with a hardcoded
+ *      vector of 2, whose delivery sets bit 2 of the NMI-source bitmap.
+ *
+ *   3) When bit 2 of the NMI-source bitmap is cleared, NMI handling code
+ *      does NOT need to poll NMI handlers regsitered for vector 2.
+ *
+ * The NMI-source vectors are sorted by descending priority except 0 and 2;
+ * vector 0 is the lowest priority NMIs, and vector 2 is the next lowest.
+ */
+#define NMI_SOURCE_VEC_UNKNOWN		0
+#define NMI_SOURCE_VEC_IPI_REBOOT	1	/* Crash reboot */
+#define NMI_SOURCE_VEC_EXT_NMI		2	/* Match IDT NMI vector 2 */
+#define NMI_SOURCE_VEC_IPI_SMP_STOP	3	/* Panic stop CPU */
+#define NMI_SOURCE_VEC_IPI_BT		4	/* CPU backtrace */
+#define NMI_SOURCE_VEC_PMI		5	/* PerfMon counters */
+#define NMI_SOURCE_VEC_IPI_KGDB		6	/* KGDB */
+#define NMI_SOURCE_VEC_IPI_MCE		7	/* MCE injection */
+#define NMI_SOURCE_VEC_IPI_TEST		8	/* For remote and local IPIs */
+#define NR_NMI_SOURCE_VECTORS		9
+
 /*
  * Size the maximum number of interrupts.
  *
-- 
2.34.1

