From 17600a7161b14cf64df66ffcde31b8a9943811ee Mon Sep 17 00:00:00 2001
From: Pan Xiuli <xiuli.pan@linux.intel.com>
Date: Mon, 23 Jul 2018 16:40:09 +0800
Subject: [PATCH 1839/2345] ASoC: SOF: topology : align dai type and index in
 topology parse

DAI type and index will be used to dai_get function in FW, make both
sof_ipc_dai_config and sof_ipc_comp_dai use the same index and type.

Signed-off-by: Pan Xiuli <xiuli.pan@linux.intel.com>
---
 sound/soc/sof/topology.c | 19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

diff --git a/sound/soc/sof/topology.c b/sound/soc/sof/topology.c
index 288eba6..d0c4bd9 100644
--- a/sound/soc/sof/topology.c
+++ b/sound/soc/sof/topology.c
@@ -333,13 +333,15 @@ static const struct sof_topology_token dai_tokens[] = {
 	{SOF_TKN_DAI_TYPE, SND_SOC_TPLG_TUPLE_TYPE_STRING, get_token_dai_type,
 		offsetof(struct sof_ipc_comp_dai, type), 0},
 	{SOF_TKN_DAI_INDEX, SND_SOC_TPLG_TUPLE_TYPE_WORD, get_token_u32,
-		offsetof(struct sof_ipc_comp_dai, index), 0},
+		offsetof(struct sof_ipc_comp_dai, dai_index), 0},
 };
 
 /* BE DAI link */
 static const struct sof_topology_token dai_link_tokens[] = {
 	{SOF_TKN_DAI_TYPE, SND_SOC_TPLG_TUPLE_TYPE_STRING, get_token_dai_type,
 		offsetof(struct sof_ipc_dai_config, type), 0},
+	{SOF_TKN_DAI_INDEX, SND_SOC_TPLG_TUPLE_TYPE_WORD, get_token_u32,
+		offsetof(struct sof_ipc_dai_config, dai_index), 0},
 };
 
 /* scheduling */
@@ -850,7 +852,7 @@ static int sof_widget_load_dai(struct snd_soc_component *scomp, int index,
 	}
 
 	dev_dbg(sdev->dev, "dai %s: type %d index %d\n",
-		swidget->widget->name, comp_dai.type, comp_dai.index);
+		swidget->widget->name, comp_dai.type, comp_dai.dai_index);
 	sof_dbg_comp_config(scomp, &comp_dai.config);
 
 	ret = sof_ipc_tx_message(sdev->ipc, comp_dai.comp.hdr.cmd,
@@ -1506,7 +1508,7 @@ static int sof_link_ssp_load(struct snd_soc_component *scomp, int index,
 	config->ssp.tx_slots = le32_to_cpu(hw_config->tx_slots);
 
 	dev_dbg(sdev->dev, "tplg: config SSP%d fmt 0x%x mclk %d bclk %d fclk %d width (%d)%d slots %d mclk id %d\n",
-		config->id, config->format,
+		config->dai_index, config->format,
 		config->ssp.mclk_rate, config->ssp.bclk_rate,
 		config->ssp.fsync_rate, config->ssp.sample_valid_bits,
 		config->ssp.tdm_slot_width, config->ssp.tdm_slots,
@@ -1519,7 +1521,7 @@ static int sof_link_ssp_load(struct snd_soc_component *scomp, int index,
 
 	if (ret < 0)
 		dev_err(sdev->dev, "error: failed to set DAI config for SSP%d\n",
-			config->id);
+			config->dai_index);
 
 	return ret;
 }
@@ -1588,7 +1590,7 @@ static int sof_link_dmic_load(struct snd_soc_component *scomp, int index,
 
 	/* debug messages */
 	dev_dbg(sdev->dev, "tplg: config DMIC%d driver version %d\n",
-		ipc_config->id, ipc_config->dmic.driver_ipc_version);
+		ipc_config->dai_index, ipc_config->dmic.driver_ipc_version);
 	dev_dbg(sdev->dev, "pdmclk_min %d pdm_clkmax %d duty_min %hd\n",
 		ipc_config->dmic.pdmclk_min, ipc_config->dmic.pdmclk_max,
 		ipc_config->dmic.duty_min);
@@ -1623,7 +1625,7 @@ static int sof_link_dmic_load(struct snd_soc_component *scomp, int index,
 
 	if (ret < 0)
 		dev_err(sdev->dev, "error: failed to set DAI config for DMIC%d\n",
-			config->id);
+			config->dai_index);
 
 	kfree(sdev->private);
 	kfree(ipc_config);
@@ -1658,7 +1660,7 @@ static int sof_link_hda_load(struct snd_soc_component *scomp, int index,
 	}
 
 	dev_dbg(sdev->dev, "tplg: config HDA%d fmt 0x%x\n",
-		config->id, config->format);
+		config->dai_index, config->format);
 
 	/* send message to DSP */
 	ret = sof_ipc_tx_message(sdev->ipc,
@@ -1667,7 +1669,7 @@ static int sof_link_hda_load(struct snd_soc_component *scomp, int index,
 
 	if (ret < 0)
 		dev_err(sdev->dev, "error: failed to set DAI config for HDA%d\n",
-			config->id);
+			config->dai_index);
 
 	return ret;
 }
@@ -1720,7 +1722,6 @@ static int sof_link_load(struct snd_soc_component *scomp, int index,
 	hw_config = &cfg->hw_config[0];
 
 	config.hdr.cmd = SOF_IPC_GLB_DAI_MSG | SOF_IPC_DAI_CONFIG;
-	config.id = le32_to_cpu(hw_config->id);
 	config.format = le32_to_cpu(hw_config->fmt);
 
 	/* now load DAI specific data and send IPC - type comes from token */
-- 
2.7.4

