From 5bfe191c91f214d74820d308a2b54633527354a7 Mon Sep 17 00:00:00 2001
From: Colin Xu <colin.xu@intel.com>
Date: Thu, 16 Apr 2020 13:40:03 +0800
Subject: [PATCH 09/24] drm/i915/gvt: Expand direct display port assignment
 mask to 64bit

i915 driver defines a larger I915_MAX_PORTS which can't be hold in 32bit
integer as the direct display port availability. So expand to 64bit.

Signed-off-by: Colin Xu <colin.xu@intel.com>
(cherry picked from commit 35a704e89518f20c1b7a11bea530a62a9b030e43)
Signed-off-by: Colin Xu <colin.xu@intel.com>
---
 drivers/gpu/drm/i915/gvt/display.c | 11 ++++++++---
 drivers/gpu/drm/i915/gvt/gvt.h     |  9 +++++----
 drivers/gpu/drm/i915/i915_sysfs.c  |  8 ++++----
 3 files changed, 17 insertions(+), 11 deletions(-)

diff --git a/drivers/gpu/drm/i915/gvt/display.c b/drivers/gpu/drm/i915/gvt/display.c
index ebeb334f1741..9128a8e98418 100644
--- a/drivers/gpu/drm/i915/gvt/display.c
+++ b/drivers/gpu/drm/i915/gvt/display.c
@@ -702,7 +702,7 @@ static void intel_gvt_connector_change_work(struct work_struct *w)
 
 	if (!idr_is_empty(&gvt->vgpu_idr)) {
 		mutex_unlock(&gvt->lock);
-		gvt_dbg_dpy("Available port mask %08x and selected mask 0x%016llx "
+		gvt_dbg_dpy("Available port mask %016llx and selected mask 0x%016llx "
 			    "unchanged due to hotplug after vGPU creation\n",
 			    gvt->avail_disp_port_mask, gvt->sel_disp_port_mask);
 		return;
@@ -719,7 +719,7 @@ static void intel_gvt_connector_change_work(struct work_struct *w)
 
 		port_ext = intel_gvt_external_disp_id_from_port(port);
 		// Available port is set in corresponding port position.
-		gvt->avail_disp_port_mask |= (port_ext << port * 4);
+		gvt->avail_disp_port_mask |= intel_gvt_port_to_mask_bit(port_ext, port);
 		// Available port is assigned to vGPU in sequence.
 		gvt->sel_disp_port_mask |= ((1 << port) << id * 8);
 		++id;
@@ -1099,6 +1099,11 @@ enum port intel_gvt_port_from_external_disp_id(u8 port_id)
 	return port;
 }
 
+u64 intel_gvt_port_to_mask_bit(u8 port_sel, enum port port)
+{
+	return ((u64)port_sel << port * 4);
+}
+
 enum pipe intel_gvt_pipe_from_port(struct drm_i915_private *dev_priv,
 				   enum port port)
 {
@@ -2300,7 +2305,7 @@ void intel_gvt_store_vgpu_display_mask(struct drm_i915_private *dev_priv,
 				if (mask_vgpu & (1 << port)) {
 					port_sel = intel_gvt_external_disp_id_from_port(port);
 					if (port_sel == 0 ||
-					    !(gvt->avail_disp_port_mask & (port_sel << port * 4))) {
+					    !(gvt->avail_disp_port_mask & intel_gvt_port_to_mask_bit(port_sel, port))) {
 						gvt_err("Selected PORT_%c for vGPU-%d isn't available\n",
 							port_name(port), id + 1);
 						valid_mask = false;
diff --git a/drivers/gpu/drm/i915/gvt/gvt.h b/drivers/gpu/drm/i915/gvt/gvt.h
index d22918403518..9ed23da11e95 100644
--- a/drivers/gpu/drm/i915/gvt/gvt.h
+++ b/drivers/gpu/drm/i915/gvt/gvt.h
@@ -392,7 +392,7 @@ struct intel_gvt {
 	struct work_struct switch_display_work;
 
 	/*
-	 * Available display port mask for PORT_A to PORT_A+7 (low to high).
+	 * Available display port mask for PORT_A to I915_MAX_PORTS (low to high).
 	 * Each hex digit represents the availability of corresponding port.
 	 * 0: Port isn't available.
 	 * x: Port x is available.
@@ -403,12 +403,12 @@ struct intel_gvt {
 	 *      PORT_C: Available.
 	 *      PORT_D: Available.
 	 */
-	u32 avail_disp_port_mask;
+	u64 avail_disp_port_mask;
 
 	/*
 	 * Bit mask of selected ports for vGPU-1 to vGPU-8 (low to high).
 	 * Each byte represents the bit mask of assigned ports for vGPU id.
-	 * From LSB to MSB (PORT_A to PORT_A+7):
+	 * From LSB to MSB (PORT_A to I915_MAX_PORTS):
 	 *   0: This port isn't assigned to that vGPU.
 	 *   1: This port is assigned to that vGPU.
 	 * Be noticed that bit position base is same as enum type PORT_x, and
@@ -421,7 +421,7 @@ struct intel_gvt {
 	u64 sel_disp_port_mask;
 
 	/*
-	 * Display owner for PORT_A to PORT_A+7 (low to high).
+	 * Display owner for PORT_A to I915_MAX_PORTS (low to high).
 	 * Each hex digit represents the owner vGPU id of corresponding port.
 	 * 0: display N/A or owned by host.
 	 * x: display owned by vGPU x.
@@ -797,6 +797,7 @@ void intel_gvt_debugfs_clean(struct intel_gvt *gvt);
 
 u8 intel_gvt_external_disp_id_from_port(enum port port);
 enum port intel_gvt_port_from_external_disp_id(u8 port_id);
+u64 intel_gvt_port_to_mask_bit(u8 port_sel, enum port port);
 enum pipe intel_gvt_pipe_from_port(
 	struct drm_i915_private *dev_priv, enum port port);
 enum port intel_gvt_port_from_pipe(
diff --git a/drivers/gpu/drm/i915/i915_sysfs.c b/drivers/gpu/drm/i915/i915_sysfs.c
index 163e43e70af3..4f4839f9b960 100644
--- a/drivers/gpu/drm/i915/i915_sysfs.c
+++ b/drivers/gpu/drm/i915/i915_sysfs.c
@@ -621,7 +621,7 @@ static ssize_t gvt_disp_ports_status_show(
 	if (!buf_size)
 		return count_total;
 
-	count = snprintf(buf, buf_size, "Available display ports: 0x%08x\n",
+	count = snprintf(buf, buf_size, "Available display ports: 0x%016llx\n",
 			 gvt->avail_disp_port_mask);
 	buf_size -= count;
 	count_total += count;
@@ -631,7 +631,7 @@ static ssize_t gvt_disp_ports_status_show(
 
 	for (port = PORT_A; port < I915_MAX_PORTS; port++) {
 		port_sel = intel_gvt_external_disp_id_from_port(port);
-		if (gvt->avail_disp_port_mask & (port_sel << port * 4)) {
+		if (gvt->avail_disp_port_mask & intel_gvt_port_to_mask_bit(port_sel, port)) {
 			count = snprintf(buf, buf_size, "  ( PORT_%c(%d) )\n",
 					 port_name(port), port_sel);
 			buf_size -= count;
@@ -660,7 +660,7 @@ static ssize_t gvt_disp_ports_status_show(
 		return count_total;
 
 	count = snprintf(buf, buf_size,
-			 "    Bit mask is decoded from LSB to MSB (PORT_A to PORT_A+7):\n");
+			 "    Bit mask is decoded from LSB to MSB (PORT_A to I915_MAX_PORTS):\n");
 	buf_size -= count;
 	count_total += count;
 	buf += count;
@@ -745,7 +745,7 @@ static ssize_t gvt_disp_ports_status_show(
 
 	for (port = PORT_A; port < I915_MAX_PORTS; port++) {
 		port_sel = intel_gvt_external_disp_id_from_port(port);
-		if (gvt->avail_disp_port_mask & (port_sel << port * 4)) {
+		if (gvt->avail_disp_port_mask & intel_gvt_port_to_mask_bit(port_sel, port)) {
 			count = snprintf(buf, buf_size, "  ( PORT_%c(%d) ",
 					 port_name(port), port_sel);
 			buf_size -= count;
-- 
2.17.1

