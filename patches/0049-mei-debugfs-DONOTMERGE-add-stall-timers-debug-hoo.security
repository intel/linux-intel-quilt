From 6262ad388f68932a29c06f8288e893af94a1f235 Mon Sep 17 00:00:00 2001
From: Tomas Winkler <tomas.winkler@intel.com>
Date: Mon, 19 Sep 2016 09:24:44 -0400
Subject: [PATCH 49/70] mei: debugfs: [DONOTMERGE] add stall timers debug hooks

Change-Id: Ic55b33e4b402f5c10f16d057a825a079c1a043ec
Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
---
 drivers/misc/mei/debugfs.c | 27 +++++++++++++++++++++++++++
 drivers/misc/mei/hbm.c     | 16 ++++++++++++++++
 drivers/misc/mei/mei_dev.h |  3 +++
 3 files changed, 46 insertions(+)

diff --git a/drivers/misc/mei/debugfs.c b/drivers/misc/mei/debugfs.c
index 0cb717bc02b6..b73605336f6d 100644
--- a/drivers/misc/mei/debugfs.c
+++ b/drivers/misc/mei/debugfs.c
@@ -139,6 +139,18 @@ static const struct file_operations mei_dbgfs_allow_fa_fops = {
 	.llseek = generic_file_llseek,
 };
 
+static ssize_t mei_dbgfs_read_reset(struct file *fp, char __user *ubuf,
+				    size_t cnt, loff_t *ppos)
+{
+	char buf[250];
+	int pos = 0;
+
+	pos += scnprintf(buf, 100, "%s\n%s\n%s\n",
+			"reset", "stall-init", "stall-cl");
+
+	return simple_read_from_buffer(ubuf, cnt, ppos, buf, pos);
+}
+
 static ssize_t mei_dbgfs_write_reset(struct file *file,
 				     const char __user *ubuf,
 				     size_t count, loff_t *ppos)
@@ -153,13 +165,28 @@ static ssize_t mei_dbgfs_write_reset(struct file *file,
 	if (sysfs_streq("reset", buf)) {
 		dev_info(dev->dev, "debug reset\n");
 		schedule_work(&dev->reset_work);
+		goto out;
 	}
 
+	if (sysfs_streq("stall-init", buf)) {
+		dev_info(dev->dev, "init: stall\n");
+		dev->stall_timer_init = 1;
+		goto out;
+	}
+
+	if (sysfs_streq("stall-cl", buf)) {
+		dev_info(dev->dev, "cl: stall\n");
+		dev->stall_timer_cl = 1;
+		goto out;
+	}
+
+out:
 	return count;
 }
 
 static const struct file_operations mei_dbgfs_fops_reset = {
 	.open = simple_open,
+	.read = mei_dbgfs_read_reset,
 	.write = mei_dbgfs_write_reset,
 	.llseek = generic_file_llseek,
 };
diff --git a/drivers/misc/mei/hbm.c b/drivers/misc/mei/hbm.c
index c7c2f6b10ff9..67d6beab012c 100644
--- a/drivers/misc/mei/hbm.c
+++ b/drivers/misc/mei/hbm.c
@@ -923,6 +923,10 @@ static void mei_hbm_cl_res(struct mei_device *dev,
 		return;
 	}
 
+	if (dev->stall_timer_cl) {
+		dev->stall_timer_cl = 0;
+		return;
+	}
 	cl->timer_count = 0;
 	wake_up(&cl->wait);
 }
@@ -1153,6 +1157,10 @@ int mei_hbm_dispatch(struct mei_device *dev, struct mei_msg_hdr *hdr)
 	case HOST_START_RES_CMD:
 		dev_dbg(dev->dev, "hbm: start: response message received.\n");
 
+		if (dev->stall_timer_init) {
+			dev->stall_timer_init = 0;
+			return 0;
+		}
 		dev->init_clients_timer = 0;
 
 		version_res = (struct hbm_host_version_response *)mei_msg;
@@ -1317,6 +1325,10 @@ int mei_hbm_dispatch(struct mei_device *dev, struct mei_msg_hdr *hdr)
 	case HOST_CLIENT_PROPERTIES_RES_CMD:
 		dev_dbg(dev->dev, "hbm: properties response: message received.\n");
 
+		if (dev->stall_timer_init) {
+			dev->stall_timer_init = 0;
+			return 0;
+		}
 		dev->init_clients_timer = 0;
 
 		if (dev->dev_state != MEI_DEV_INIT_CLIENTS ||
@@ -1349,6 +1361,10 @@ int mei_hbm_dispatch(struct mei_device *dev, struct mei_msg_hdr *hdr)
 	case HOST_ENUM_RES_CMD:
 		dev_dbg(dev->dev, "hbm: enumeration response: message received\n");
 
+		if (dev->stall_timer_init) {
+			dev->stall_timer_init = 0;
+			return 0;
+		}
 		dev->init_clients_timer = 0;
 
 		enum_res = (struct hbm_host_enum_response *) mei_msg;
diff --git a/drivers/misc/mei/mei_dev.h b/drivers/misc/mei/mei_dev.h
index a830e3b5b817..c42fcfc3a662 100644
--- a/drivers/misc/mei/mei_dev.h
+++ b/drivers/misc/mei/mei_dev.h
@@ -547,6 +547,9 @@ struct mei_device {
 	struct dentry *dbgfs_dir;
 #endif /* CONFIG_DEBUG_FS */
 
+	unsigned int stall_timer_cl:1;
+	unsigned int stall_timer_init:1;
+
 	const struct mei_hw_ops *ops;
 	char hw[0] __aligned(sizeof(void *));
 };
-- 
2.17.1

