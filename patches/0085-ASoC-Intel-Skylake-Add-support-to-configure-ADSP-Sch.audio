From 5c6874c78bf53139bcbd6410f5343d2411a4bda6 Mon Sep 17 00:00:00 2001
From: "Shaik, Kareem M" <kareem.m.shaik@intel.com>
Date: Thu, 26 Oct 2017 02:56:25 +0530
Subject: [PATCH 085/163] ASoC: Intel: Skylake: Add support to configure ADSP
 Scheduler

ADSP scheduler can be configured to run either from
1. Internal Timer
2. DMA completion interrupts from SSP/DMIC
This patch adds support to send this information to the ADSP
during every D0/D3 cycle as a Large Config Set IPC.
In addition to providing the source, there is a provision
to alter the LL task period to values less than 1ms.

Change-Id: Id856ef66a0930c6dceab804f8081c7449527476b
Signed-off-by: Kareem Shaik <kareem.m.shaik@intel.com>
Reviewed-on:
Reviewed-by: audio_build
Reviewed-by: Kesapragada, Pardha Saradhi <pardha.saradhi.kesapragada@intel.com>
Reviewed-by: Prusty, Subhransu S <subhransu.s.prusty@intel.com>
Tested-by: Sm, Bhadur A <bhadur.a.sm@intel.com>
---
 include/uapi/sound/snd_sst_tokens.h    | 29 ++++++++++++++++-
 sound/soc/intel/skylake/skl-messages.c |  9 ++----
 sound/soc/intel/skylake/skl-pcm.c      | 10 ++----
 sound/soc/intel/skylake/skl-sst-ipc.c  |  6 ++--
 sound/soc/intel/skylake/skl-sst-ipc.h  |  2 +-
 sound/soc/intel/skylake/skl-topology.c | 44 ++++++++++++++++++++++++++
 sound/soc/intel/skylake/skl-topology.h |  1 +
 sound/soc/intel/skylake/skl.h          | 11 +++++++
 8 files changed, 93 insertions(+), 19 deletions(-)

diff --git a/include/uapi/sound/snd_sst_tokens.h b/include/uapi/sound/snd_sst_tokens.h
index 5072c3140d02..7d97aa9355df 100644
--- a/include/uapi/sound/snd_sst_tokens.h
+++ b/include/uapi/sound/snd_sst_tokens.h
@@ -253,6 +253,25 @@
  *
  * %SKL_TKN_U32_DMA_MIN_SIZE:   Minimum DMA buffer size
  *
+ * %SKL_TKN_U32_SCH_TYPE:       Types of FW configs: SCHEDULER_CONFIG
+ *
+ * %SKL_TKN_U32_SCH_SIZE:       Scheduler config size
+ *
+ * %SKL_TKN_U32_SCH_SYS_TICK_MUL:
+ *                              System tick multiplier
+ *
+ * %SKL_TKN_U32_SCH_SYS_TICK_DIV:
+ *                              System tick divider
+ *
+ * %SKL_TKN_U32_SCH_SYS_TICK_LL_SRC:
+ *                              Low Latency interrupt source
+ *
+ * %SKL_TKN_U32_SCH_SYS_TICK_CFG_LEN:
+ *                              Config length
+ *
+ * %SKL_TKN_U32_SCH_SYS_TICK_CFG:
+ *                              Config contain capture on which SSP to
+ *                              active the FW
  *
  * module_id and loadable flags dont have tokens as these values will be
  * read from the DSP FW manifest
@@ -353,7 +372,15 @@ enum SKL_TKNS {
 	SKL_TKN_U32_DMA_SIZE,
 	SKL_TKN_U32_DMA_MAX_SIZE,
 	SKL_TKN_U32_DMA_MIN_SIZE,
-	SKL_TKN_MAX = SKL_TKN_U32_DMA_MIN_SIZE,
+
+	SKL_TKN_U32_SCH_TYPE,
+	SKL_TKN_U32_SCH_SIZE,
+	SKL_TKN_U32_SCH_SYS_TICK_MUL,
+	SKL_TKN_U32_SCH_SYS_TICK_DIV,
+	SKL_TKN_U32_SCH_SYS_TICK_LL_SRC,
+	SKL_TKN_U32_SCH_SYS_TICK_CFG_LEN,
+	SKL_TKN_U32_SCH_SYS_TICK_CFG,
+	SKL_TKN_MAX = SKL_TKN_U32_SCH_SYS_TICK_CFG,
 };
 
 /*
diff --git a/sound/soc/intel/skylake/skl-messages.c b/sound/soc/intel/skylake/skl-messages.c
index a47719222c58..ee8580cce21c 100644
--- a/sound/soc/intel/skylake/skl-messages.c
+++ b/sound/soc/intel/skylake/skl-messages.c
@@ -399,13 +399,10 @@ int skl_resume_dsp(struct skl_dev *skl)
 					skl->cfg.astate_cfg);
 	}
 
-	/* Set DMA buffer configuration */
-	if (skl->cfg.dmacfg.size)
-		skl_ipc_set_dma_cfg(&skl->ipc, BXT_INSTANCE_ID,
-			BXT_BASE_FW_MODULE_ID, (u32 *)(&skl->cfg.dmacfg));
+	/* Set the FW config info from topology */
+	skl_tplg_fw_cfg_set(skl);
 
-	/* Set DMA clock controls */
-	return skl_dsp_set_dma_clk_controls(skl);
+	return ret;
 }
 
 enum skl_bitdepth skl_get_bit_depth(int params)
diff --git a/sound/soc/intel/skylake/skl-pcm.c b/sound/soc/intel/skylake/skl-pcm.c
index 42e745b270aa..babd018f118f 100644
--- a/sound/soc/intel/skylake/skl-pcm.c
+++ b/sound/soc/intel/skylake/skl-pcm.c
@@ -1524,14 +1524,8 @@ static int skl_platform_soc_probe(struct snd_soc_component *component)
 		if (ret < 0)
 			return ret;
 
-		/* Set DMA buffer configuration */
-		if (skl->cfg.dmacfg.size)
-			skl_ipc_set_dma_cfg(&skl->ipc,
-				BXT_INSTANCE_ID, BXT_BASE_FW_MODULE_ID,
-						(u32 *)(&skl->cfg.dmacfg));
-
-		/* Set DMA clock controls */
-		skl_dsp_set_dma_clk_controls(skl);
+		/* Set the FW config info from topology */
+		skl_tplg_fw_cfg_set(skl);
 
 		skl_populate_modules(skl);
 		skl->update_d0i3c = skl_update_d0i3c;
diff --git a/sound/soc/intel/skylake/skl-sst-ipc.c b/sound/soc/intel/skylake/skl-sst-ipc.c
index cc5c3752d39d..fe1c918465aa 100644
--- a/sound/soc/intel/skylake/skl-sst-ipc.c
+++ b/sound/soc/intel/skylake/skl-sst-ipc.c
@@ -1114,7 +1114,7 @@ int skl_ipc_get_large_config(struct sst_generic_ipc *ipc,
 }
 EXPORT_SYMBOL_GPL(skl_ipc_get_large_config);
 
-void skl_ipc_set_dma_cfg(struct sst_generic_ipc *ipc, u8 instance_id,
+void skl_ipc_set_fw_cfg(struct sst_generic_ipc *ipc, u8 instance_id,
 			u16 module_id, u32 *data)
 {
 	struct skl_ipc_large_config_msg msg = {0};
@@ -1129,9 +1129,9 @@ void skl_ipc_set_dma_cfg(struct sst_generic_ipc *ipc, u8 instance_id,
 
 	ret = skl_ipc_set_large_config(ipc, &msg, data);
 	if (ret < 0)
-		dev_err(ipc->dev, "ipc: set dma config failed, err %d\n", ret);
+		dev_err(ipc->dev, "ipc: set fw config failed, err %d\n", ret);
 }
-EXPORT_SYMBOL_GPL(skl_ipc_set_dma_cfg);
+EXPORT_SYMBOL_GPL(skl_ipc_set_fw_cfg);
 
 int skl_sst_ipc_load_library(struct sst_generic_ipc *ipc,
 				u8 dma_id, u8 table_id, bool wait)
diff --git a/sound/soc/intel/skylake/skl-sst-ipc.h b/sound/soc/intel/skylake/skl-sst-ipc.h
index 54dda3d47daa..e4fa01330156 100644
--- a/sound/soc/intel/skylake/skl-sst-ipc.h
+++ b/sound/soc/intel/skylake/skl-sst-ipc.h
@@ -504,7 +504,7 @@ int skl_ipc_process_notification(struct sst_generic_ipc *ipc,
 		struct skl_ipc_header header);
 void skl_ipc_tx_data_copy(struct ipc_message *msg, char *tx_data,
 		size_t tx_size);
-void skl_ipc_set_dma_cfg(struct sst_generic_ipc *ipc, u8 instance_id,
+void skl_ipc_set_fw_cfg(struct sst_generic_ipc *ipc, u8 instance_id,
 			u16 module_id, u32 *data);
 
 int skl_ipc_fw_cfg_get(struct sst_generic_ipc *ipc, struct skl_fw_cfg *cfg);
diff --git a/sound/soc/intel/skylake/skl-topology.c b/sound/soc/intel/skylake/skl-topology.c
index b5a98e674b1a..c274bccd5b3d 100644
--- a/sound/soc/intel/skylake/skl-topology.c
+++ b/sound/soc/intel/skylake/skl-topology.c
@@ -4163,6 +4163,34 @@ static int skl_tplg_get_int_tkn(struct device *dev,
 							tkn_elem->value;
 		break;
 
+	case SKL_TKN_U32_SCH_TYPE:
+		skl->cfg.sch_cfg.type = tkn_elem->value;
+		break;
+
+	case SKL_TKN_U32_SCH_SIZE:
+		skl->cfg.sch_cfg.length = tkn_elem->value;
+		break;
+
+	case SKL_TKN_U32_SCH_SYS_TICK_MUL:
+		skl->cfg.sch_cfg.sys_tick_mul = tkn_elem->value;
+		break;
+
+	case SKL_TKN_U32_SCH_SYS_TICK_DIV:
+		skl->cfg.sch_cfg.sys_tick_div = tkn_elem->value;
+		break;
+
+	case SKL_TKN_U32_SCH_SYS_TICK_LL_SRC:
+		skl->cfg.sch_cfg.sys_tick_ll_src = tkn_elem->value;
+		break;
+
+	case SKL_TKN_U32_SCH_SYS_TICK_CFG_LEN:
+		skl->cfg.sch_cfg.sys_tick_cfg_len = tkn_elem->value;
+		break;
+
+	case SKL_TKN_U32_SCH_SYS_TICK_CFG:
+		skl->cfg.sch_cfg.sys_tick_cfg = tkn_elem->value;
+		break;
+
 	case SKL_TKN_U8_IN_PIN_TYPE:
 	case SKL_TKN_U8_OUT_PIN_TYPE:
 	case SKL_TKN_U8_IN_QUEUE_COUNT:
@@ -4507,6 +4535,22 @@ static int skl_tplg_create_pipe_widget_list(struct snd_soc_component *component)
 	return 0;
 }
 
+void skl_tplg_fw_cfg_set(struct skl_dev *skl)
+{
+	/* Set DMA buffer configuration */
+	if (skl->cfg.dmacfg.size)
+		skl_ipc_set_fw_cfg(&skl->ipc, SKL_INSTANCE_ID,
+			SKL_BASE_FW_MODULE_ID, (u32 *)(&skl->cfg.dmacfg));
+
+	/* set scheduler config if available */
+	if (skl->cfg.sch_cfg.length)
+		skl_ipc_set_fw_cfg(&skl->ipc, SKL_INSTANCE_ID,
+			SKL_BASE_FW_MODULE_ID, (u32 *)(&skl->cfg.sch_cfg));
+
+	/* Set DMA clock controls */
+	skl_dsp_set_dma_clk_controls(skl);
+}
+
 static void skl_tplg_set_pipe_type(struct skl_dev *skl, struct skl_pipe *pipe)
 {
 	struct skl_pipe_module *w_module;
diff --git a/sound/soc/intel/skylake/skl-topology.h b/sound/soc/intel/skylake/skl-topology.h
index a5334728b110..874024eab8ea 100644
--- a/sound/soc/intel/skylake/skl-topology.h
+++ b/sound/soc/intel/skylake/skl-topology.h
@@ -415,5 +415,6 @@ int skl_create_notify_kctl_list(struct skl_dev *skl, struct snd_card *card);
 void skl_delete_notify_kctl_list(struct skl_dev *skl);
 struct snd_kcontrol *skl_get_notify_kcontrol(struct skl_dev *skl,
 				struct snd_card *card, u32 notify_id);
+void skl_tplg_fw_cfg_set(struct skl_dev *skl);
 
 #endif
diff --git a/sound/soc/intel/skylake/skl.h b/sound/soc/intel/skylake/skl.h
index 4db43680ceab..770f59002606 100644
--- a/sound/soc/intel/skylake/skl.h
+++ b/sound/soc/intel/skylake/skl.h
@@ -68,6 +68,16 @@ struct skl_dma_buff_cfg {
 	struct skl_dma_config dma_cfg[SKL_MAX_DMA_CFG];
 } __packed;
 
+struct skl_sch_config {
+	u32 type;
+	u32 length;
+	u32 sys_tick_mul;
+	u32 sys_tick_div;
+	u32 sys_tick_ll_src;
+	u32 sys_tick_cfg_len;
+	u32 sys_tick_cfg;
+};
+
 struct skl_dmctrl_hdr {
 	u32 vbus_id;
 	u32 freq;
@@ -88,6 +98,7 @@ struct skl_dmactrl_config {
 
 struct skl_fw_config {
 	struct skl_dma_buff_cfg dmacfg;
+	struct skl_sch_config sch_cfg;
 	struct skl_dmactrl_config dmactrl_cfg;
 	struct skl_astate_config *astate_cfg;
 };
-- 
2.17.1

