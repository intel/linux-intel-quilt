From fcdeb58cd94e36d2a7818894062d3835b6c7de85 Mon Sep 17 00:00:00 2001
From: wu xia <xia.wu@intel.com>
Date: Mon, 14 Sep 2015 00:52:02 +0300
Subject: [PATCH 1411/2345] media: v4l: Add new vectorised pixel formats

These formats are like the standard formats
except that the pixel order is different.
For RAW formats, the images in memory contain
32 pixels of the top left colour in the bayer
matrix, followed by the same amount of the
colour in top right, bottom left and finally
bottom right.

The pixels are aligned to byte boundaries, i.e.
bpps over 8 consume 16 bits memory per pixel.

Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
Signed-off-by: Tao Jing <jing.tao@intel.com>
Signed-off-by: wu xia <xia.wu@intel.com>
---
 include/uapi/linux/videodev2.h | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/include/uapi/linux/videodev2.h b/include/uapi/linux/videodev2.h
index eb8e13e..ae4b2cc 100644
--- a/include/uapi/linux/videodev2.h
+++ b/include/uapi/linux/videodev2.h
@@ -614,6 +614,27 @@ struct v4l2_pix_format {
 #define V4L2_PIX_FMT_SGRBG16 v4l2_fourcc('G', 'R', '1', '6') /* 16  GRGR.. BGBG.. */
 #define V4L2_PIX_FMT_SRGGB16 v4l2_fourcc('R', 'G', '1', '6') /* 16  RGRG.. GBGB.. */
 
+/* Raw bayer vector formats. */
+#define V4L2_PIX_FMT_SBGGR8V32         v4l2_fourcc('b', 'V', '0', 'A')
+#define V4L2_PIX_FMT_SGBRG8V32         v4l2_fourcc('b', 'V', '0', 'B')
+#define V4L2_PIX_FMT_SGRBG8V32         v4l2_fourcc('b', 'V', '0', 'C')
+#define V4L2_PIX_FMT_SRGGB8V32         v4l2_fourcc('b', 'V', '0', 'D')
+#define V4L2_PIX_FMT_SBGGR10V32                v4l2_fourcc('b', 'V', '0', 'E')
+#define V4L2_PIX_FMT_SGBRG10V32                v4l2_fourcc('b', 'V', '0', 'F')
+#define V4L2_PIX_FMT_SGRBG10V32                v4l2_fourcc('b', 'V', '0', 'G')
+#define V4L2_PIX_FMT_SRGGB10V32                v4l2_fourcc('b', 'V', '0', 'H')
+#define V4L2_PIX_FMT_SBGGR12V32                v4l2_fourcc('b', 'V', '0', 'I')
+#define V4L2_PIX_FMT_SGBRG12V32                v4l2_fourcc('b', 'V', '0', 'J')
+#define V4L2_PIX_FMT_SGRBG12V32                v4l2_fourcc('b', 'V', '0', 'K')
+#define V4L2_PIX_FMT_SRGGB12V32                v4l2_fourcc('b', 'V', '0', 'L')
+#define V4L2_PIX_FMT_SBGGR16V32                v4l2_fourcc('b', 'V', '0', 'M')
+#define V4L2_PIX_FMT_SGBRG16V32                v4l2_fourcc('b', 'V', '0', 'N')
+#define V4L2_PIX_FMT_SGRBG16V32                v4l2_fourcc('b', 'V', '0', 'O')
+#define V4L2_PIX_FMT_SRGGB16V32                v4l2_fourcc('b', 'V', '0', 'P')
+
+/* YUV vector formats. */
+#define V4L2_PIX_FMT_UYVY_V32          v4l2_fourcc('y', 'V', '3', '2')
+
 /* HSV formats */
 #define V4L2_PIX_FMT_HSV24 v4l2_fourcc('H', 'S', 'V', '3')
 #define V4L2_PIX_FMT_HSV32 v4l2_fourcc('H', 'S', 'V', '4')
-- 
2.7.4

