From 378c15d2ac2181950b3880ba7905f1b6c3bf1c1c Mon Sep 17 00:00:00 2001
From: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
Date: Fri, 17 Jul 2020 03:45:24 +0800
Subject: [PATCH 44/45] dt-bindings: spi: Add Microwire DT Property for Intel
 Keem Bay SOC

Document DT bindings to support Microwire format.

Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
---
 .../bindings/spi/snps,dw-apb-ssi.txt          | 137 ++++++++++++++++++
 1 file changed, 137 insertions(+)

diff --git a/Documentation/devicetree/bindings/spi/snps,dw-apb-ssi.txt b/Documentation/devicetree/bindings/spi/snps,dw-apb-ssi.txt
index 92408029bc39..f08858c43658 100644
--- a/Documentation/devicetree/bindings/spi/snps,dw-apb-ssi.txt
+++ b/Documentation/devicetree/bindings/spi/snps,dw-apb-ssi.txt
@@ -39,3 +39,140 @@ Example:
 			   <&gpio0 14 0>;
 	};
 
+Optional properties for Microwire Intel Keembay SOC:
+
+- dw,ssi-type : Frame format Selection for serial protocol transfers
+  <0>: Motorola
+  <1>: Texas Instrument
+  <2>: Microwire
+
+- dw,ssi-mdd : Microwire Control. Defines the direction of the data word when the Microwire
+  serial protocol is used. When this bit is set to 0, the data word is received by Keembay Master
+  from the external slave device. When this bit is set to 1, the data word is received by
+  Slave device from Keembay Master.
+
+- dw,ssi-cfs : Control frame size to select the length of the control word
+  for Microwire. Control words length can be set between (1 -16) bits.
+  Define <16> to set 16-bit control word.
+
+- dw,ssi-mwmod : Defines whether transfer is sequential or non-sequential
+  for Microwire.
+  <0>: Non-Sequential Microwire Transfer
+  <1>: Sequential Microwire Transfer
+
+- dw,ssi-cword : Specify the value of control words for Microwire.
+  Values can be set between (0-65535) which is up to 16 bit of data.
+  Used when dw-ssi-mdd equal to 0.
+
+- cont-non-sequential : Variable to write more control words into tx fifo
+  for Microwire. Define when to perform continuous non sequential operations.
+
+SSI as transmit data example:
+
+Non Sequential Microwire Transmit:
+
+	spi@201c0000 {
+			compatible = "snps,dw-ahb-ssi";
+			reg = <0x00000000 0x201c0000 0x00000000 0x00000110>;
+			interrupts = <0x00000000 0x0000004a 0x00000004>;
+			#address-cells = <0x00000001>;
+			#size-cells = <0x00000000>;
+			status = "okay";
+			clocks = <0x00000006 0x00000043>;
+			spidev@0 {
+			};
+			n25q128a {
+			};
+			dw,ssi-mdd = <0x00000001>;
+			dw,ssi-cfs = <0x00000007>;
+			dw,ssi-type = <0x00000002>;
+			dw,ssi-mwmod = <0x00000000>;
+	};
+
+Continuous Non Sequential Microwire Transmit:
+
+	spi@201c0000 {
+			compatible = "snps,dw-ahb-ssi";
+			reg = <0x00000000 0x201c0000 0x00000000 0x00000110>;
+			interrupts = <0x00000000 0x0000004a 0x00000004>;
+			#address-cells = <0x00000001>;
+			#size-cells = <0x00000000>;
+			status = "okay";
+			clocks = <0x00000006 0x00000043>;
+			spidev@0 {
+			};
+			n25q128a {
+			};
+			dw,ssi-mdd = <0x00000001>;
+			dw,ssi-cfs = <0x00000007>;
+			dw,ssi-type = <0x00000002>;
+			dw,ssi-mwmod = <0x00000000>;
+			cont-non-sequential;
+	};
+
+SSI as receives data :
+
+Non Sequential Microwire Receives example:
+
+	spi@201c0000 {
+			compatible = "snps,dw-ahb-ssi";
+			reg = <0x00000000 0x201c0000 0x00000000 0x00000110>;
+			interrupts = <0x00000000 0x0000004a 0x00000004>;
+			#address-cells = <0x00000001>;
+			#size-cells = <0x00000000>;
+			status = "okay";
+			clocks = <0x00000006 0x00000043>;
+			spidev@0 {
+			};
+			n25q128a {
+			};
+			dw,ssi-mdd = <0x00000000>;
+			dw,ssi-cfs = <0x00000007>;
+			dw,ssi-type = <0x00000002>;
+			dw,ssi-mwmod = <0x00000000>;
+			dw,ssi-cword = <0x000000aa>;
+	};
+
+Continuous Non Sequential Microwire Receives example:
+
+	spi@201c0000 {
+			compatible = "snps,dw-ahb-ssi";
+			reg = <0x00000000 0x201c0000 0x00000000 0x00000110>;
+			interrupts = <0x00000000 0x0000004a 0x00000004>;
+			#address-cells = <0x00000001>;
+			#size-cells = <0x00000000>;
+			status = "okay";
+			clocks = <0x00000006 0x00000043>;
+			spidev@0 {
+			};
+			n25q128a {
+			};
+			dw,ssi-mdd = <0x00000000>;
+			dw,ssi-cfs = <0x00000007>;
+			dw,ssi-type = <0x00000002>;
+			dw,ssi-mwmod = <0x00000000>;
+			dw,ssi-cword = <0x000000aa>;
+			cont-non-sequential;
+	};
+
+Sequential Microwire Receive example:
+
+	spi@201c0000 {
+			compatible = "snps,dw-ahb-ssi";
+			reg = <0x00000000 0x201c0000 0x00000000 0x00000110>;
+			interrupts = <0x00000000 0x0000004a 0x00000004>;
+			#address-cells = <0x00000001>;
+			#size-cells = <0x00000000>;
+			status = "okay";
+			clocks = <0x00000006 0x00000043>;
+			spidev@0 {
+			};
+			n25q128a {
+			};
+			dw,ssi-mdd = <0x00000000>;
+			dw,ssi-cfs = <0x00000007>;
+			dw,ssi-type = <0x00000002>;
+			dw,ssi-mwmod = <0x00000001>;
+			dw,ssi-cword = <0x000000aa>;
+	};
+
-- 
2.17.1

