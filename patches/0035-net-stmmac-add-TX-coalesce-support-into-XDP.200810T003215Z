From e129bab7d015fc8316a26a87649dee0368911985 Mon Sep 17 00:00:00 2001
From: Ong Boon Leong <boon.leong.ong@intel.com>
Date: Mon, 1 Jun 2020 15:28:32 +0800
Subject: [PATCH 35/78] net: stmmac: add TX coalesce support into XDP TX submit

Not all XDP TX frame should be set TX IOC, so we add TX coalesce mechanism
here. Also, we add TX timer-based cleaning mechanism for XDP TX frames.

Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
---
 .../net/ethernet/stmicro/stmmac/stmmac_xsk.c  | 35 ++++++++++++++++---
 1 file changed, 31 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_xsk.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_xsk.c
index 5ffb34e74707..72451fbe454e 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_xsk.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_xsk.c
@@ -746,8 +746,10 @@ static bool stmmac_xmit_zc(struct stmmac_tx_queue *xdp_q, unsigned int budget)
 	struct stmmac_priv *priv = xdp_q->priv_data;
 	struct dma_desc *tx_desc = NULL;
 	bool work_done = true;
+	unsigned int tx_packets;
 	struct xdp_desc desc;
 	dma_addr_t dma;
+	bool set_ic;
 	int entry = xdp_q->cur_tx;
 	int first_entry = xdp_q->cur_tx;
 
@@ -789,8 +791,28 @@ static bool stmmac_xmit_zc(struct stmmac_tx_queue *xdp_q, unsigned int budget)
 						       "failed\n");
 		}
 
-		if (unlikely(priv->hwts_all))
+		tx_packets =  (entry + 1) - first_entry;
+		xdp_q->tx_count_frames += tx_packets;
+
+		if (unlikely(priv->hwts_all)) {
 			stmmac_enable_tx_timestamp(priv, tx_desc);
+			set_ic = true;
+		} else if (!priv->tx_coal_frames) {
+			set_ic = false;
+		} else if (tx_packets > priv->tx_coal_frames) {
+			set_ic = true;
+		} else if ((xdp_q->tx_count_frames % priv->tx_coal_frames) <
+			   tx_packets) {
+			set_ic = true;
+		} else {
+			set_ic = false;
+		}
+
+		if (set_ic) {
+			xdp_q->tx_count_frames = 0;
+			stmmac_set_tx_ic(priv, tx_desc);
+			priv->xstats.tx_set_ic_bit++;
+		}
 
 		stmmac_prepare_tx_desc(priv, tx_desc, /* Tx descriptor */
 				       1, /* is first descriptor */
@@ -801,15 +823,16 @@ static bool stmmac_xmit_zc(struct stmmac_tx_queue *xdp_q, unsigned int budget)
 				       1, /* is last segment */
 				       desc.len); /* Total packet length */
 
-		wmb();
-
 		entry = STMMAC_GET_ENTRY(entry, priv->dma_tx_size);
-		xdp_q->cur_tx = entry;
 	}
 
 	if (first_entry != entry) {
+		/* Ensure data is written before updating tail-pointer */
+		wmb();
+		xdp_q->cur_tx = entry;
 		stmmac_xdp_queue_update_tail(xdp_q);
 		xsk_umem_consume_tx_done(xdp_q->xsk_umem);
+		stmmac_tx_timer_arm(priv, xdp_q->queue_index);
 	}
 
 	return !!budget && work_done;
@@ -925,6 +948,10 @@ int stmmac_xdp_tx_clean(struct stmmac_priv *priv, int budget, u32 queue)
 	if (xsk_frames)
 		xsk_umem_complete_tx(umem, xsk_frames);
 
+	/* We still have pending packets, let's call for a new scheduling */
+	if (xdp_q->dirty_tx != xdp_q->cur_tx)
+		stmmac_tx_timer_arm(priv, xdp_q->queue_index);
+
 	priv->dev->stats.tx_bytes += total_bytes;
 
 out_xmit:
-- 
2.17.1

