From 7aab3407d773bce12be02d7b74eee40e66d3e8ab Mon Sep 17 00:00:00 2001
From: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
Date: Fri, 10 May 2019 23:04:28 +0800
Subject: [PATCH 13/15] EDAC, igen6: Add registration APIs for In-Band ECC
 error notification

There are some external modules which want to be notified about the
In-Band ECC error for specific error handling. Because the In-Band ECC
error event is captured by the igen6_edac driver via NMI, so add the
registration APIs for the In-Band ECC error event that those modules
can be notified for further error handling.

Signed-off-by: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
---
 drivers/edac/igen6_edac.c | 23 +++++++++++++++++++++++
 drivers/edac/igen6_edac.h | 22 ++++++++++++++++++++++
 2 files changed, 45 insertions(+)
 create mode 100644 drivers/edac/igen6_edac.h

diff --git a/drivers/edac/igen6_edac.c b/drivers/edac/igen6_edac.c
index 4afae224de8d..b3ab6db59be5 100644
--- a/drivers/edac/igen6_edac.c
+++ b/drivers/edac/igen6_edac.c
@@ -30,6 +30,7 @@
 
 #include "edac_mc.h"
 #include "edac_module.h"
+#include "igen6_edac.h"
 
 #define IGEN6_REVISION	"v1.1.4"
 
@@ -193,6 +194,20 @@ static const struct pci_device_id igen6_pci_tbl[] = {
 };
 MODULE_DEVICE_TABLE(pci, igen6_pci_tbl);
 
+static BLOCKING_NOTIFIER_HEAD(ibecc_err_handler_chain);
+
+int ibecc_err_register_notifer(struct notifier_block *nb)
+{
+	return blocking_notifier_chain_register(&ibecc_err_handler_chain, nb);
+}
+EXPORT_SYMBOL_GPL(ibecc_err_register_notifer);
+
+int ibecc_err_unregister_notifer(struct notifier_block *nb)
+{
+	return blocking_notifier_chain_unregister(&ibecc_err_handler_chain, nb);
+}
+EXPORT_SYMBOL_GPL(ibecc_err_unregister_notifer);
+
 static enum dev_type get_width(int dimm_l, u32 mad_dimm)
 {
 	u32 w = dimm_l ? IGEN6_DIMM_CH_DLW(mad_dimm) :
@@ -323,6 +338,7 @@ static void igen6_output_error(struct decoded_addr *res, u64 ecclog)
 	enum hw_event_mc_err_type type = ecclog & IGEN6_ECCERRLOG_UE ?
 					 HW_EVENT_ERR_UNCORRECTED :
 					 HW_EVENT_ERR_CORRECTED;
+	struct ibecc_err_info e;
 
 	edac_mc_handle_error(type, igen6_pvt->mci, 1,
 			     res->sys_addr >> PAGE_SHIFT,
@@ -330,6 +346,13 @@ static void igen6_output_error(struct decoded_addr *res, u64 ecclog)
 			     IGEN6_ECCERRLOG_SYND(ecclog),
 			     res->chan, res->sub_chan,
 			     -1, "", "");
+
+	/* Notify other handlers for further IBECC error handling */
+	memset(&e, 0, sizeof(e));
+	e.type	   = type;
+	e.sys_addr = res->sys_addr;
+	e.ecc_log  = ecclog;
+	blocking_notifier_call_chain(&ibecc_err_handler_chain, 0, &e);
 }
 
 static struct gen_pool *ecclog_gen_pool_create(void)
diff --git a/drivers/edac/igen6_edac.h b/drivers/edac/igen6_edac.h
new file mode 100644
index 000000000000..9175b0ef433c
--- /dev/null
+++ b/drivers/edac/igen6_edac.h
@@ -0,0 +1,22 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * Registration for IBECC error notification
+ * Copyright (C) 2019 Intel Corporation
+ */
+
+#ifndef _IGEN6_EDAC_H
+#define _IGEN6_EDAC_H
+
+#include <linux/edac.h>
+#include <linux/notifier.h>
+
+struct ibecc_err_info {
+	enum hw_event_mc_err_type type;
+	u64 sys_addr;
+	u64 ecc_log;
+};
+
+int ibecc_err_register_notifer(struct notifier_block *nb);
+int ibecc_err_unregister_notifer(struct notifier_block *nb);
+
+#endif /* _IGEN6_EDAC_H */
-- 
2.22.0.545.g9c9b961d7e

