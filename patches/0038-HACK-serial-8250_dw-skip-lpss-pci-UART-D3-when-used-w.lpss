From 1ecd2a6dfe35f9f9ee59efe642f52e2d22ebef01 Mon Sep 17 00:00:00 2001
From: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date: Mon, 29 Jul 2019 17:11:39 +0300
Subject: [PATCH 38/40] HACK: serial: 8250_dw: skip lpss pci UART D3 when used
 with no_console_suspend

For Platforms with lpss pci UARTs, the parent device should
be prevented from going into D3 for the no_console_suspend
flag to work as expected.

This is tested with Intel SPT platforms with lpss pci UART devices.

Signed-off-by: Archana Patni <archana.patni@intel.com>
Signed-off-by: Subramony Sesha <subramony.sesha@intel.com>

Interim. This solution is not ideal. We should not be
concerned of the parent in this driver, and we really should
not do any PCI operations here.

Ideally the issue can be fixed in the parent driver
(drivers/mfd/intel-lpss-pci.c).

Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
---
 drivers/tty/serial/8250/8250_dw.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/drivers/tty/serial/8250/8250_dw.c b/drivers/tty/serial/8250/8250_dw.c
index ea835dd6b506..ad43f3cb2a07 100644
--- a/drivers/tty/serial/8250/8250_dw.c
+++ b/drivers/tty/serial/8250/8250_dw.c
@@ -21,9 +21,11 @@
 #include <linux/platform_device.h>
 #include <linux/slab.h>
 #include <linux/acpi.h>
+#include <linux/pci.h>
 #include <linux/clk.h>
 #include <linux/reset.h>
 #include <linux/pm_runtime.h>
+#include <linux/console.h>
 
 #include <asm/byteorder.h>
 
@@ -574,6 +576,20 @@ static int dw8250_suspend(struct device *dev)
 {
 	struct dw8250_data *data = dev_get_drvdata(dev);
 
+	/*
+	 * FIXME: For Platforms with LPSS PCI UARTs, the parent device should
+	 * be prevented from going into D3 for the no_console_suspend flag to
+	 * work as expected.
+	 */
+	if (platform_get_resource_byname(to_platform_device(dev),
+					 IORESOURCE_MEM, "lpss_dev")) {
+		struct uart_8250_port *up = serial8250_get_port(data->data.line);
+		struct pci_dev *pdev = to_pci_dev(dev->parent);
+
+		if (pdev && !console_suspend_enabled && uart_console(&up->port))
+			pdev->dev_flags |= PCI_DEV_FLAGS_NO_D3;
+	}
+
 	serial8250_suspend_port(data->data.line);
 
 	return 0;
-- 
2.17.1

