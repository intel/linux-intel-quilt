From 9c8d82c0a34945ac3e28eb2b73c612983f3fb009 Mon Sep 17 00:00:00 2001
From: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date: Mon, 4 May 2020 14:38:12 +0300
Subject: [PATCH 32/58] pwm: pwm-dwc: Add struct dwc_pwm_ctx for register
 save/restore
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Review comment from Uwe Kleine-KÃ¶nig <u.kleine-koenig@pengutronix.de>:
	"I think this code would benefit from saved_registers having a
	better type."

Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
---
 drivers/pwm/pwm-dwc.c | 26 +++++++++++++++-----------
 1 file changed, 15 insertions(+), 11 deletions(-)

diff --git a/drivers/pwm/pwm-dwc.c b/drivers/pwm/pwm-dwc.c
index 2d26c0fcc38b..cbe20ea0d648 100644
--- a/drivers/pwm/pwm-dwc.c
+++ b/drivers/pwm/pwm-dwc.c
@@ -45,6 +45,12 @@ struct dwc_pwm_driver_data {
 	int npwm;
 };
 
+struct dwc_pwm_ctx {
+	u32 cnt;
+	u32 cnt2;
+	u32 ctrl;
+};
+
 struct dwc_pwm {
 	struct pwm_chip chip;
 	struct device *dev;
@@ -53,7 +59,7 @@ struct dwc_pwm {
 
 	void __iomem *base;
 
-	u32 saved_registers[24];
+	struct dwc_pwm_ctx ctx[DWC_TIMERS_TOTAL];
 };
 #define to_dwc_pwm(p)	(container_of((p), struct dwc_pwm, chip))
 
@@ -251,15 +257,14 @@ static int dwc_pwm_suspend(struct device *dev)
 {
 	struct pci_dev *pdev = container_of(dev, struct pci_dev, dev);
 	struct dwc_pwm *dwc = pci_get_drvdata(pdev);
-	int i, index_base;
+	int i;
 
 	for (i = 0; i < DWC_TIMERS_TOTAL; i++) {
-		index_base = i * 3;
-		dwc->saved_registers[index_base] =
+		dwc->ctx[i].cnt =
 			dwc_pwm_readl(dwc->base, DWC_TIM_LD_CNT(i));
-		dwc->saved_registers[index_base+1] =
+		dwc->ctx[i].cnt2 =
 			dwc_pwm_readl(dwc->base, DWC_TIM_LD_CNT2(i));
-		dwc->saved_registers[index_base+2] =
+		dwc->ctx[i].ctrl =
 			dwc_pwm_readl(dwc->base, DWC_TIM_CTRL(i));
 	}
 
@@ -270,15 +275,14 @@ static int dwc_pwm_resume(struct device *dev)
 {
 	struct pci_dev *pdev = container_of(dev, struct pci_dev, dev);
 	struct dwc_pwm *dwc = pci_get_drvdata(pdev);
-	int i, index_base;
+	int i;
 
 	for (i = 0; i < DWC_TIMERS_TOTAL; i++) {
-		index_base = i * 3;
-		dwc_pwm_writel(dwc->saved_registers[index_base],
+		dwc_pwm_writel(dwc->ctx[i].cnt,
 			       dwc->base, DWC_TIM_LD_CNT(i));
-		dwc_pwm_writel(dwc->saved_registers[index_base+1],
+		dwc_pwm_writel(dwc->ctx[i].cnt2,
 			       dwc->base, DWC_TIM_LD_CNT2(i));
-		dwc_pwm_writel(dwc->saved_registers[index_base+2],
+		dwc_pwm_writel(dwc->ctx[i].ctrl,
 			       dwc->base, DWC_TIM_CTRL(i));
 	}
 
-- 
2.27.0

