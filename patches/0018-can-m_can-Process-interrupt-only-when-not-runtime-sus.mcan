From 37a34c2a7edde7f4a9c7352f703104b723887484 Mon Sep 17 00:00:00 2001
From: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date: Mon, 14 Sep 2020 16:19:20 +0300
Subject: [PATCH 18/29] can: m_can: Process interrupt only when not runtime
 suspended

Avoid processing bogus interrupt statuses when the HW is runtime
suspended and the M_CAN_IR register read may get all bits 1's. Handler
can be called if the interrupt request is shared with other peripherals
or at the end of free_irq().

Therefore check the runtime suspended status before processing.

Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
---
 drivers/net/can/m_can/m_can.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/drivers/net/can/m_can/m_can.c b/drivers/net/can/m_can/m_can.c
index 2c4d74113443..6fcd19a19833 100644
--- a/drivers/net/can/m_can/m_can.c
+++ b/drivers/net/can/m_can/m_can.c
@@ -956,6 +956,8 @@ static irqreturn_t m_can_isr(int irq, void *dev_id)
 	struct net_device_stats *stats = &dev->stats;
 	u32 ir;
 
+	if (pm_runtime_suspended(cdev->dev)
+		return IRQ_NONE;
 	ir = m_can_read(cdev, M_CAN_IR);
 	if (!ir)
 		return IRQ_NONE;
-- 
2.27.0

