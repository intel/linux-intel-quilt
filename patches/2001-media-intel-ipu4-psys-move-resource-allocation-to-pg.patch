From 2194773d8ddc0ea48205ea9101afbcefdf856cac Mon Sep 17 00:00:00 2001
From: Wang Zaikuo <zaikuo.wang@intel.com>
Date: Fri, 22 Jun 2018 16:24:53 +0800
Subject: [PATCH 2001/2367] media: intel-ipu4: psys: move resource allocation
 to pg structure

Message for Open Source:
The allocated resources are associated with process group,
so it makes sense to put resource to ipu_psys_pg structure.

Message for Internal:
[Issue/Feature] Same as above

Change-Id: Ifda582fdb5d136a82a29d6d9d74dcfcd741a3f04
Tracked-On: #JKRLCSN-280
Signed-off-by: Wang Zaikuo <zaikuo.wang@intel.com>
Signed-off-by: Meng Wei <wei.meng@intel.com>
---
 drivers/media/pci/intel/ipu-psys.h                    |  3 +--
 drivers/media/pci/intel/ipu4/ipu-platform-resources.h |  1 -
 drivers/media/pci/intel/ipu4/ipu4-psys.c              | 12 +++++-------
 drivers/media/pci/intel/ipu4/ipu4-resources.c         |  7 -------
 4 files changed, 6 insertions(+), 17 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-psys.h b/drivers/media/pci/intel/ipu-psys.h
index 6378cf4..27dda49 100644
--- a/drivers/media/pci/intel/ipu-psys.h
+++ b/drivers/media/pci/intel/ipu-psys.h
@@ -137,7 +137,7 @@ struct ipu_psys_pg {
 	size_t pg_size;
 	dma_addr_t pg_dma_addr;
 	struct list_head list;
-	struct ipu_psys_resource_alloc *resource_alloc;
+	struct ipu_psys_resource_alloc resource_alloc;
 };
 
 enum ipu_psys_cmd_state {
@@ -177,7 +177,6 @@ struct ipu_psys_kcmd {
 	struct ipu_buttress_constraint constraint;
 	struct ipu_psys_buffer_set *kbuf_set;
 
-	struct ipu_psys_resource_alloc resource_alloc;
 	struct ipu_psys_event ev;
 	struct timer_list watchdog;
 };
diff --git a/drivers/media/pci/intel/ipu4/ipu-platform-resources.h b/drivers/media/pci/intel/ipu4/ipu-platform-resources.h
index 3087f85..52dbd1e 100644
--- a/drivers/media/pci/intel/ipu4/ipu-platform-resources.h
+++ b/drivers/media/pci/intel/ipu4/ipu-platform-resources.h
@@ -206,7 +206,6 @@ struct ipu_fw_psys_process {
 struct ipu_psys_resource_alloc;
 struct ipu_fw_psys_process_group;
 struct ipu_psys_resource_pool;
-void ipu_psys_resource_alloc_init(struct ipu_psys_resource_alloc *alloc);
 int ipu_psys_allocate_resources(const struct device *dev,
 				struct ipu_fw_psys_process_group *pg,
 				void *pg_manifest,
diff --git a/drivers/media/pci/intel/ipu4/ipu4-psys.c b/drivers/media/pci/intel/ipu4/ipu4-psys.c
index 35f86e0..a90ce0a 100644
--- a/drivers/media/pci/intel/ipu4/ipu4-psys.c
+++ b/drivers/media/pci/intel/ipu4/ipu4-psys.c
@@ -337,7 +337,7 @@ static void ipu_psys_kcmd_run(struct ipu_psys *psys)
 	int ret;
 
 	ret = ipu_psys_move_resources(&psys->adev->dev,
-				      &kcmd->resource_alloc,
+				      &kcmd->kpg->resource_alloc,
 				      &psys->resource_pool_started,
 				      &psys->resource_pool_running);
 	if (!ret) {
@@ -385,7 +385,7 @@ void ipu_psys_kcmd_complete(struct ipu_psys *psys,
 		}
 		/* Fall through on purpose */
 	case KCMD_STATE_RUN_PREPARED:
-		ipu_psys_free_resources(&kcmd->resource_alloc,
+		ipu_psys_free_resources(&kcmd->kpg->resource_alloc,
 					&psys->resource_pool_running);
 		if (psys->started_kcmds)
 			ipu_psys_kcmd_run(psys);
@@ -397,7 +397,7 @@ void ipu_psys_kcmd_complete(struct ipu_psys *psys,
 		list_del(&kcmd->started_list);
 		/* Fall through on purpose */
 	case KCMD_STATE_START_PREPARED:
-		ipu_psys_free_resources(&kcmd->resource_alloc,
+		ipu_psys_free_resources(&kcmd->kpg->resource_alloc,
 					&psys->resource_pool_started);
 		break;
 	default:
@@ -845,7 +845,7 @@ int ipu_psys_kcmd_queue(struct ipu_psys *psys, struct ipu_psys_kcmd *kcmd)
 		ret = ipu_psys_allocate_resources(&psys->adev->dev,
 						  kcmd->kpg->pg,
 						  kcmd->pg_manifest,
-						  &kcmd->resource_alloc,
+						  &kcmd->kpg->resource_alloc,
 						  &psys->resource_pool_running);
 		if (!ret) {
 			if (kcmd->state == KCMD_STATE_NEW)
@@ -867,7 +867,7 @@ int ipu_psys_kcmd_queue(struct ipu_psys *psys, struct ipu_psys_kcmd *kcmd)
 	ret = ipu_psys_allocate_resources(&psys->adev->dev,
 					  kcmd->kpg->pg,
 					  kcmd->pg_manifest,
-					  &kcmd->resource_alloc,
+					  &kcmd->kpg->resource_alloc,
 					  &psys->resource_pool_started);
 	if (!ret) {
 		kcmd->state = KCMD_STATE_START_PREPARED;
@@ -899,8 +899,6 @@ int ipu_psys_kcmd_new(struct ipu_psys_command *cmd, struct ipu_psys_fh *fh)
 	if (!kcmd)
 		return -EINVAL;
 
-	ipu_psys_resource_alloc_init(&kcmd->resource_alloc);
-
 #if LINUX_VERSION_CODE <= KERNEL_VERSION(4, 14, 2)
 	init_timer(&kcmd->watchdog);
 	kcmd->watchdog.data = (unsigned long)kcmd;
diff --git a/drivers/media/pci/intel/ipu4/ipu4-resources.c b/drivers/media/pci/intel/ipu4/ipu4-resources.c
index ce12cc4..6510450 100644
--- a/drivers/media/pci/intel/ipu4/ipu4-resources.c
+++ b/drivers/media/pci/intel/ipu4/ipu4-resources.c
@@ -137,13 +137,6 @@ void ipu_psys_resource_pool_cleanup(struct ipu_psys_resource_pool
 		ipu_resource_cleanup(&pool->dfms[i]);
 }
 
-void ipu_psys_resource_alloc_init(struct ipu_psys_resource_alloc
-				  *alloc)
-{
-	alloc->cells = 0;
-	alloc->resources = 0;
-}
-
 static int ipu_psys_allocate_one_resource(const struct device *dev,
 				struct ipu_fw_psys_process *process,
 				struct ipu_resource *resource,
-- 
2.7.4

