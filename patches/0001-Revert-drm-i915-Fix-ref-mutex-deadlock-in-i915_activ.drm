From 746387387c2c04e5053515c01eef396eecc3ece5 Mon Sep 17 00:00:00 2001
From: "Dutta, Ranjan" <ranjan.dutta@intel.com>
Date: Tue, 14 Apr 2020 22:13:50 +0800
Subject: [PATCH] Revert "drm/i915: Fix ref->mutex deadlock in
 i915_active_wait()"

This reverts commit 04ad505eed58f442b8d55004df10456ab2f0ec08.
---
 drivers/gpu/drm/i915/i915_active.c | 29 ++++++++++-------------------
 drivers/gpu/drm/i915/i915_active.h |  4 ++--
 2 files changed, 12 insertions(+), 21 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_active.c b/drivers/gpu/drm/i915/i915_active.c
index 51dc875..48e16ad 100644
--- a/drivers/gpu/drm/i915/i915_active.c
+++ b/drivers/gpu/drm/i915/i915_active.c
@@ -121,7 +121,7 @@ static inline void debug_active_assert(struct i915_active *ref) { }
 #endif
 
 static void
-__active_retire(struct i915_active *ref, bool lock)
+__active_retire(struct i915_active *ref)
 {
 	struct active_node *it, *n;
 	struct rb_root root;
@@ -138,8 +138,7 @@ __active_retire(struct i915_active *ref, bool lock)
 		retire = true;
 	}
 
-	if (likely(lock))
-		mutex_unlock(&ref->mutex);
+	mutex_unlock(&ref->mutex);
 	if (!retire)
 		return;
 
@@ -154,28 +153,21 @@ __active_retire(struct i915_active *ref, bool lock)
 }
 
 static void
-active_retire(struct i915_active *ref, bool lock)
+active_retire(struct i915_active *ref)
 {
 	GEM_BUG_ON(!atomic_read(&ref->count));
 	if (atomic_add_unless(&ref->count, -1, 1))
 		return;
 
 	/* One active may be flushed from inside the acquire of another */
-	if (likely(lock))
-		mutex_lock_nested(&ref->mutex, SINGLE_DEPTH_NESTING);
-	__active_retire(ref, lock);
+	mutex_lock_nested(&ref->mutex, SINGLE_DEPTH_NESTING);
+	__active_retire(ref);
 }
 
 static void
 node_retire(struct i915_active_request *base, struct i915_request *rq)
 {
-	active_retire(node_from_active(base)->ref, true);
-}
-
-static void
-node_retire_nolock(struct i915_active_request *base, struct i915_request *rq)
-{
-	active_retire(node_from_active(base)->ref, false);
+	active_retire(node_from_active(base)->ref);
 }
 
 static struct i915_active_request *
@@ -372,7 +364,7 @@ int i915_active_acquire(struct i915_active *ref)
 void i915_active_release(struct i915_active *ref)
 {
 	debug_active_assert(ref);
-	active_retire(ref, true);
+	active_retire(ref);
 }
 
 static void __active_ungrab(struct i915_active *ref)
@@ -399,7 +391,7 @@ void i915_active_ungrab(struct i915_active *ref)
 {
 	GEM_BUG_ON(!test_bit(I915_ACTIVE_GRAB_BIT, &ref->flags));
 
-	active_retire(ref, true);
+	active_retire(ref);
 	__active_ungrab(ref);
 }
 
@@ -429,13 +421,12 @@ int i915_active_wait(struct i915_active *ref)
 			break;
 		}
 
-		err = i915_active_request_retire(&it->base, BKL(ref),
-						 node_retire_nolock);
+		err = i915_active_request_retire(&it->base, BKL(ref));
 		if (err)
 			break;
 	}
 
-	__active_retire(ref, true);
+	__active_retire(ref);
 	if (err)
 		return err;
 
diff --git a/drivers/gpu/drm/i915/i915_active.h b/drivers/gpu/drm/i915/i915_active.h
index 0ad7ef6..f95058f 100644
--- a/drivers/gpu/drm/i915/i915_active.h
+++ b/drivers/gpu/drm/i915/i915_active.h
@@ -309,7 +309,7 @@ i915_active_request_isset(const struct i915_active_request *active)
  */
 static inline int __must_check
 i915_active_request_retire(struct i915_active_request *active,
-			   struct mutex *mutex, i915_active_retire_fn retire)
+			   struct mutex *mutex)
 {
 	struct i915_request *request;
 	long ret;
@@ -327,7 +327,7 @@ i915_active_request_retire(struct i915_active_request *active,
 	list_del_init(&active->link);
 	RCU_INIT_POINTER(active->request, NULL);
 
-	retire(active, request);
+	active->retire(active, request);
 
 	return 0;
 }
-- 
2.7.4

