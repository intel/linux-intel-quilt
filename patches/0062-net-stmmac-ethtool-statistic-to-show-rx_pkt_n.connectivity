From 4d28d4ff41de4629e634914cdbf78b9e8d3673b9 Mon Sep 17 00:00:00 2001
From: Weifeng Voon <weifeng.voon@intel.com>
Date: Wed, 18 Jul 2018 07:31:42 +0800
Subject: [PATCH 062/108] net: stmmac: ethtool statistic to show rx_pkt_n for
 each rx ch

Adding new statistics for packets received per queue/channel. Up to 8
queue/channels are supported. These counters are incremented by stmmac_rx.

Signed-off-by: Weifeng Voon <weifeng.voon@intel.com>
Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/common.h  |  8 +++++
 .../ethernet/stmicro/stmmac/stmmac_ethtool.c  |  8 +++++
 .../net/ethernet/stmicro/stmmac/stmmac_main.c | 29 +++++++++++++++++++
 3 files changed, 45 insertions(+)

diff --git a/drivers/net/ethernet/stmicro/stmmac/common.h b/drivers/net/ethernet/stmicro/stmmac/common.h
index f8fd91cd5806..e6469e9e5dfa 100644
--- a/drivers/net/ethernet/stmicro/stmmac/common.h
+++ b/drivers/net/ethernet/stmicro/stmmac/common.h
@@ -92,6 +92,14 @@ struct stmmac_extra_stats {
 	unsigned long threshold;
 	unsigned long tx_pkt_n;
 	unsigned long rx_pkt_n;
+	unsigned long q0_rx_pkt_n;
+	unsigned long q1_rx_pkt_n;
+	unsigned long q2_rx_pkt_n;
+	unsigned long q3_rx_pkt_n;
+	unsigned long q4_rx_pkt_n;
+	unsigned long q5_rx_pkt_n;
+	unsigned long q6_rx_pkt_n;
+	unsigned long q7_rx_pkt_n;
 	unsigned long normal_irq_n;
 	unsigned long rx_normal_irq_n;
 	unsigned long napi_poll;
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c
index 058877a9fcd2..8a580746ab92 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c
@@ -83,6 +83,14 @@ static const struct stmmac_stats stmmac_gstrings_stats[] = {
 	STMMAC_STAT(threshold),
 	STMMAC_STAT(tx_pkt_n),
 	STMMAC_STAT(rx_pkt_n),
+	STMMAC_STAT(q0_rx_pkt_n),
+	STMMAC_STAT(q1_rx_pkt_n),
+	STMMAC_STAT(q2_rx_pkt_n),
+	STMMAC_STAT(q3_rx_pkt_n),
+	STMMAC_STAT(q4_rx_pkt_n),
+	STMMAC_STAT(q5_rx_pkt_n),
+	STMMAC_STAT(q6_rx_pkt_n),
+	STMMAC_STAT(q7_rx_pkt_n),
 	STMMAC_STAT(normal_irq_n),
 	STMMAC_STAT(rx_normal_irq_n),
 	STMMAC_STAT(napi_poll),
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index f529473e10ac..2538f3ab33b4 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -4113,6 +4113,35 @@ static int stmmac_rx(struct stmmac_priv *priv, int limit, u32 queue)
 
 	priv->xstats.rx_pkt_n += count;
 
+	switch (queue) {
+	case 0x0:
+		priv->xstats.q0_rx_pkt_n += count;
+		break;
+	case 0x1:
+		priv->xstats.q1_rx_pkt_n += count;
+		break;
+	case 0x2:
+		priv->xstats.q2_rx_pkt_n += count;
+		break;
+	case 0x3:
+		priv->xstats.q3_rx_pkt_n += count;
+		break;
+	case 0x4:
+		priv->xstats.q4_rx_pkt_n += count;
+		break;
+	case 0x5:
+		priv->xstats.q5_rx_pkt_n += count;
+		break;
+	case 0x6:
+		priv->xstats.q6_rx_pkt_n += count;
+		break;
+	case 0x7:
+		priv->xstats.q7_rx_pkt_n += count;
+		break;
+	default:
+		break;
+	}
+
 	return count;
 }
 
-- 
2.17.1

