From 286261137461014800ecabb62142230a133aa937 Mon Sep 17 00:00:00 2001
From: Ong Boon Leong <boon.leong.ong@intel.com>
Date: Wed, 11 Sep 2019 17:30:20 +0800
Subject: [PATCH 40/40] REVERTME: net: stmmac: unmask all PCI msi for Ethernet
 controller

Unmask all PCI MSI for EHL A0.

Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
Signed-off-by: Voon Weifeng <weifeng.voon@intel.com>
Signed-off-by: Wong Vee Khee <vee.khee.wong@intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c | 9 ++++++---
 drivers/net/ethernet/stmicro/stmmac/stmmac_main.c | 9 +++++++++
 include/linux/stmmac.h                            | 1 +
 3 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c b/drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c
index f47c30fb0957..dc403312ec67 100644
--- a/drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c
+++ b/drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c
@@ -478,7 +478,8 @@ static struct stmmac_pci_info ehl_rgmii1g_info = {
 #define EHL_PSE_ETH_DMA_MISC_DTM_DRAM	3
 #define EHL_PSE_ETH_DMA_TOTAL_CH	16
 
-static void ehl_pse_work_around(struct pci_dev *pdev)
+static void ehl_pse_work_around(struct pci_dev *pdev,
+				struct plat_stmmacenet_data *plat)
 {
 	void __iomem *tempaddr = pcim_iomap_table(pdev)[0];
 	int i;
@@ -491,12 +492,14 @@ static void ehl_pse_work_around(struct pci_dev *pdev)
 		writel(val, tempaddr + EHL_PSE_ETH_DMA_MISC_OFFSET
 		       + i * sizeof(u32));
 	}
+
+	plat->ehl_ao_wa = 1;
 }
 
 static int ehl_pse0_common_data(struct pci_dev *pdev,
 				struct plat_stmmacenet_data *plat)
 {
-	ehl_pse_work_around(pdev);
+	ehl_pse_work_around(pdev, plat);
 	return ehl_common_data(pdev, plat);
 }
 
@@ -527,7 +530,7 @@ static struct stmmac_pci_info ehl_pse0_sgmii1g_info = {
 static int ehl_pse1_common_data(struct pci_dev *pdev,
 				struct plat_stmmacenet_data *plat)
 {
-	ehl_pse_work_around(pdev);
+	ehl_pse_work_around(pdev, plat);
 	return ehl_common_data(pdev, plat);
 }
 
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index ac8736458423..f91e4cae8e15 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -3139,6 +3139,15 @@ static int stmmac_open(struct net_device *dev)
 	stmmac_enable_all_queues(priv);
 	netif_tx_start_all_queues(priv->dev);
 
+	/* EHL A0: Work-around */
+	if (priv->plat->ehl_ao_wa) {
+		struct pci_dev *pdev =
+			container_of(priv->device, struct pci_dev, dev);
+		u32 value = 0xffc00000;
+
+		pci_write_config_dword(pdev, 0xE0, value);
+	}
+
 	return 0;
 
 phy_conv_error:
diff --git a/include/linux/stmmac.h b/include/linux/stmmac.h
index 7525defb8dc9..d9d7cc57df13 100644
--- a/include/linux/stmmac.h
+++ b/include/linux/stmmac.h
@@ -217,6 +217,7 @@ struct plat_stmmacenet_data {
 	int msi_sfty_ue_vec;
 	int msi_rx_base_vec;
 	int msi_tx_base_vec;
+	bool ehl_ao_wa;
 	bool has_art;
 	bool speed_2500_en;
 	int int_snapshot_num;
-- 
2.27.0

