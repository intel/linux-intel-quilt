From 27c3daffe4f1aaadd0a3e82e9d99aa355d29c561 Mon Sep 17 00:00:00 2001
From: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date: Wed, 29 Nov 2023 17:14:38 +0200
Subject: [PATCH 15/22] i3c: mipi-i3c-hci-pci: Add IDA-based device ID
 allocation

Obviously platform_device_alloc("mipi-i3c-hci", 0); won't work when
there are more than one device instance. Use IDA-based allocation for
managing device IDs.

Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
---
 drivers/i3c/master/mipi-i3c-hci/mipi-i3c-hci-pci.c | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/drivers/i3c/master/mipi-i3c-hci/mipi-i3c-hci-pci.c b/drivers/i3c/master/mipi-i3c-hci/mipi-i3c-hci-pci.c
index 260adb033bec..f592c0fada3b 100644
--- a/drivers/i3c/master/mipi-i3c-hci/mipi-i3c-hci-pci.c
+++ b/drivers/i3c/master/mipi-i3c-hci/mipi-i3c-hci-pci.c
@@ -7,6 +7,7 @@
  * Author: Jarkko Nikula <jarkko.nikula@linux.intel.com>
  */
 #include <linux/acpi.h>
+#include <linux/idr.h>
 #include <linux/kernel.h>
 #include <linux/module.h>
 #include <linux/pci.h>
@@ -22,6 +23,8 @@ struct mipi_i3c_hci_pci_info {
 #define INTEL_PRIV_RESETS_RESET		BIT(0)
 #define INTEL_PRIV_RESETS_RESET_DONE	BIT(1)
 
+static DEFINE_IDA(mipi_i3c_hci_pci_ida);
+
 static int mipi_i3c_hci_pci_intel_init(struct pci_dev *pci)
 {
 	unsigned long timeout;
@@ -57,7 +60,7 @@ static int mipi_i3c_hci_pci_probe(struct pci_dev *pci,
 	struct mipi_i3c_hci_pci_info *info;
 	struct platform_device *pdev;
 	struct resource res[2];
-	int ret;
+	int dev_id, ret;
 
 	ret = pcim_enable_device(pci);
 	if (ret)
@@ -75,7 +78,11 @@ static int mipi_i3c_hci_pci_probe(struct pci_dev *pci,
 	res[1].start = pci->irq;
 	res[1].end = pci->irq;
 
-	pdev = platform_device_alloc("mipi-i3c-hci", 0);
+	dev_id = ida_alloc(&mipi_i3c_hci_pci_ida, GFP_KERNEL);
+	if (dev_id < 0)
+		return dev_id;
+
+	pdev = platform_device_alloc("mipi-i3c-hci", dev_id);
 	if (!pdev)
 		return -ENOMEM;
 
@@ -103,14 +110,17 @@ static int mipi_i3c_hci_pci_probe(struct pci_dev *pci,
 
 err:
 	platform_device_put(pdev);
+	ida_free(&mipi_i3c_hci_pci_ida, dev_id);
 	return ret;
 }
 
 static void mipi_i3c_hci_pci_remove(struct pci_dev *pci)
 {
 	struct platform_device *pdev = pci_get_drvdata(pci);
+	int dev_id = pdev->id;
 
 	platform_device_unregister(pdev);
+	ida_free(&mipi_i3c_hci_pci_ida, dev_id);
 }
 
 static const struct pci_device_id mipi_i3c_hci_pci_devices[] = {
-- 
2.25.1

