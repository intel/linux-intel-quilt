From 496a1a7979c17ba7a432147fcc836177a2c5b262 Mon Sep 17 00:00:00 2001
From: Piotr Maziarz <piotrx.maziarz@linux.intel.com>
Date: Wed, 1 Jul 2020 19:14:57 +0200
Subject: [PATCH 1200/1214] ASoC: Intel: Skylake: bxt: Init core states only on
 first boot

usage_count for core 0 could be set to 2 on setting D0, that lead to
never putting it back to 0 that caused staying in D0 forever.

Also use bxt_sst_init_fw instead of skl_sst_init_fw while reloading.

Change-Id: I2d8f54c9328e381aec74b9844a3bf30349970dc8
Tracked-On: PKT-3663
Signed-off-by: Piotr Maziarz <piotrx.maziarz@linux.intel.com>
---
 sound/soc/intel/skylake/bxt-sst.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/sound/soc/intel/skylake/bxt-sst.c b/sound/soc/intel/skylake/bxt-sst.c
index 0016286..30a271e 100644
--- a/sound/soc/intel/skylake/bxt-sst.c
+++ b/sound/soc/intel/skylake/bxt-sst.c
@@ -517,7 +517,7 @@ static int bxt_set_dsp_D0(struct sst_dsp *ctx, unsigned int core_id)
 				sst_dsp_shim_read(ctx, BXT_ADSP_ERROR_CODE),
 				sst_dsp_shim_read(ctx, BXT_ADSP_FW_STATUS));
 
-			ret = skl_sst_init_fw(ctx->dev, skl);
+			ret = bxt_sst_init_fw(ctx->dev, skl);
 			dev_warn(ctx->dev, "Reload fw status: %d\n", ret);
 			if (ret < 0) {
 				dev_err(ctx->dev, "Failed to set core0 to D0 state\n");
@@ -695,8 +695,8 @@ int bxt_sst_init_fw(struct device *dev, struct skl_sst *ctx)
 		dev_err(dev, "Load base fw failed: %x\n", ret);
 		return ret;
 	}
-
-	skl_dsp_init_core_state(sst);
+	if (ctx->is_first_boot)
+		skl_dsp_init_core_state(sst);
 
 	ret = sst->fw_ops.load_library(sst, ctx->lib_info, ctx->lib_count);
 	if (ret < 0) {
-- 
2.7.4

