From 7015115d32ef32783e5943078fbca76f279acc46 Mon Sep 17 00:00:00 2001
From: "he, bo" <bo.he@intel.com>
Date: Tue, 2 May 2017 11:43:49 +0800
Subject: [PATCH 1145/2367] extcon: USB: Use static DRD mode for host/device
 mode switch

Currently, dynamic DRD mode is used for handling the host/device mode
switch. But this method creates issues when switching the mode after S3
or after coldboot. This issue can be avoided if we use static DRD mode
for the host/device mode switch. This patch implements this support.

In addition, the ABL initial the DRD as dynamic, for keep ABL
compatiable for both Yocto and Android, we initial the DRD mode in kernel
and keep no change in ABL.

Change-Id: Ib67884e57a7545a367c98371a417ca5c2099c541
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-54479
Signed-off-by: he, bo <bo.he@intel.com>
Signed-off-by: Anuar, Nuhairi <nuhairi.anuar@intel.com>
Signed-off-by: Kuppuswamy, Sathyanarayanan <sathyanarayanan.kuppuswamy@intel.com>
Reviewed-on: https://android.intel.com:443/585725
---
 drivers/extcon/extcon-intel-usb.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/extcon/extcon-intel-usb.c b/drivers/extcon/extcon-intel-usb.c
index 9290eb7..26b043d 100644
--- a/drivers/extcon/extcon-intel-usb.c
+++ b/drivers/extcon/extcon-intel-usb.c
@@ -49,10 +49,10 @@ static int intel_usb_mux_notifier(struct notifier_block *nb,
 	u32 val;
 
 	if (mux->edev.state)
-		val = CFG0_SW_IDPIN_EN | CFG0_SW_DRD_STATIC_HOST;
+		val = CFG0_SW_IDPIN_EN | CFG0_SW_DRD_STATIC_HOST | CFG0_SW_SWITCH_EN;
 	else
 		val = CFG0_SW_IDPIN_EN | CFG0_SW_IDPIN | CFG0_SW_VBUS_VALID |
-		      CFG0_SW_DRD_STATIC_DEV;
+		      CFG0_SW_DRD_STATIC_DEV | CFG0_SW_SWITCH_EN ;
 
 	writel(val, mux->regs);
 	return NOTIFY_OK;
@@ -63,6 +63,7 @@ struct intel_usb_mux *intel_usb_mux_register(struct device *dev,
 {
 	struct intel_usb_mux *mux;
 	int ret;
+	u32 val;
 
 	mux = kzalloc(sizeof(*mux), GFP_KERNEL);
 	if (!mux)
@@ -74,6 +75,10 @@ struct intel_usb_mux *intel_usb_mux_register(struct device *dev,
 		return ERR_PTR(-ENOMEM);
 	}
 
+	val = CFG0_SW_IDPIN_EN | CFG0_SW_IDPIN | CFG0_SW_VBUS_VALID |
+			CFG0_SW_DRD_STATIC_DEV | CFG0_SW_SWITCH_EN;
+	writel(val, mux->regs);
+
 	mux->edev.dev.parent = dev;
 	mux->edev.supported_cable = intel_mux_cable;
 
-- 
2.7.4

