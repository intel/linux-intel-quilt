From ebaf667aa9e033e3a97cad934df7edaf48a7e819 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Amadeusz=20S=C5=82awi=C5=84ski?=
 <amadeuszx.slawinski@linux.intel.com>
Date: Fri, 2 Aug 2019 13:45:38 +0200
Subject: [PATCH 170/193] ASoC: Intel: Skylake: Fix typo in variable name
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Having "supend_active" doesn't make it easier to look at suspend code,
especially if you want to quickly find places in code with "suspend"
string.

Change-Id: I982d7fa2a532caa1649a91db8a7bad8acede3f08
Signed-off-by: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
Reviewed-on:
Tested-by: gkblditp <gkblditp@intel.com>
Reviewed-by: Rojewski, Cezary <cezary.rojewski@intel.com>
---
 sound/soc/intel/skylake/skl-messages.c | 2 +-
 sound/soc/intel/skylake/skl-pcm.c      | 6 +++---
 sound/soc/intel/skylake/skl.c          | 4 ++--
 sound/soc/intel/skylake/skl.h          | 2 +-
 4 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-messages.c b/sound/soc/intel/skylake/skl-messages.c
index f5cdd1ce0eb1..d640462e5da3 100644
--- a/sound/soc/intel/skylake/skl-messages.c
+++ b/sound/soc/intel/skylake/skl-messages.c
@@ -215,7 +215,7 @@ int skl_suspend_late_dsp(struct skl_dev *skl)
 	dwork = &skl->d0i3.work;
 
 	if (dwork->work.func) {
-		if (skl->supend_active)
+		if (skl->suspend_active)
 			flush_delayed_work(dwork);
 		else
 			cancel_delayed_work_sync(dwork);
diff --git a/sound/soc/intel/skylake/skl-pcm.c b/sound/soc/intel/skylake/skl-pcm.c
index 0aea13e34375..b6f11c27686d 100644
--- a/sound/soc/intel/skylake/skl-pcm.c
+++ b/sound/soc/intel/skylake/skl-pcm.c
@@ -140,7 +140,7 @@ static struct snd_pcm_hw_constraint_list hw_rates = {
  * check if the stream opened is marked as ignore_suspend by machine, if so
  * then enable suspend_active refcount
  *
- * The count supend_active does not need lock as it is used in open/close
+ * The count suspend_active does not need lock as it is used in open/close
  * and suspend context
  */
 static void skl_set_suspend_active(struct snd_pcm_substream *substream,
@@ -156,9 +156,9 @@ static void skl_set_suspend_active(struct snd_pcm_substream *substream,
 		w = dai->capture_widget;
 
 	if (w->ignore_suspend && enable)
-		skl->supend_active++;
+		skl->suspend_active++;
 	else if (w->ignore_suspend && !enable)
-		skl->supend_active--;
+		skl->suspend_active--;
 }
 
 int skl_pcm_host_dma_prepare(struct device *dev, struct skl_pipe_params *params)
diff --git a/sound/soc/intel/skylake/skl.c b/sound/soc/intel/skylake/skl.c
index a63aa55b2369..b950d118b855 100644
--- a/sound/soc/intel/skylake/skl.c
+++ b/sound/soc/intel/skylake/skl.c
@@ -389,7 +389,7 @@ static int skl_suspend(struct device *dev)
 	 * Do not suspend if streams which are marked ignore suspend are
 	 * running, we need to save the state for these and continue
 	 */
-	if (skl->supend_active) {
+	if (skl->suspend_active) {
 		/* turn off the links and stop the CORB/RIRB DMA if it is On */
 		snd_hdac_ext_bus_link_power_down_all(bus);
 
@@ -420,7 +420,7 @@ static int skl_resume(struct device *dev)
 	 * resume only when we are not in suspend active, otherwise need to
 	 * restore the device
 	 */
-	if (skl->supend_active) {
+	if (skl->suspend_active) {
 		pci_restore_state(pci);
 		snd_hdac_ext_bus_link_power_up_all(bus);
 		disable_irq_wake(bus->irq);
diff --git a/sound/soc/intel/skylake/skl.h b/sound/soc/intel/skylake/skl.h
index ea9555a23c12..3f2e426ca61c 100644
--- a/sound/soc/intel/skylake/skl.h
+++ b/sound/soc/intel/skylake/skl.h
@@ -128,7 +128,7 @@ struct skl_dev {
 	char tplg_name[64];
 	unsigned short pci_id;
 
-	int supend_active;
+	int suspend_active;
 
 	struct work_struct probe_work;
 
-- 
2.17.1

