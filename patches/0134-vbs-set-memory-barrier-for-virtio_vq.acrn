From e1873943520e6e092f3fb4047a1b6397224a168a Mon Sep 17 00:00:00 2001
From: Gao Junhao <junhao.gao@intel.com>
Date: Thu, 30 May 2019 11:22:02 +0000
Subject: [PATCH 134/134] vbs: set memory barrier for virtio_vq

When virtio backend driver gets avail_idx or sets used_idx, memory
barrier can make sure of sequence of reading and writing. It can
guarantee the accuracy of avail_idx and used_idx.

Tracked-On: projectacrn/acrn-hypervisor#3207
Signed-off-by: Gao Junhao <junhao.gao@intel.com>
Reviewed-by: Yu Wang <yu1.wang@intel.com>
Reviewed-by: Zhao Yakui <yakui.zhao@intel.com>
---
 drivers/vbs/vq.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/drivers/vbs/vq.c b/drivers/vbs/vq.c
index 1731ab089577..cf7e6e9c778a 100644
--- a/drivers/vbs/vq.c
+++ b/drivers/vbs/vq.c
@@ -145,6 +145,7 @@ int virtio_vq_getchain(struct virtio_vq_info *vq, uint16_t *pidx,
 	dev = vq->dev;
 	name = dev->name;
 
+	rmb();
 	/*
 	 * Note: it's the responsibility of the guest not to
 	 * update vq->vq_avail->va_idx until all of the descriptors
@@ -290,6 +291,8 @@ void virtio_vq_relchain(struct virtio_vq_info *vq, uint16_t idx,
 	vue = &vuh->ring[uidx++ & mask];
 	vue->id = idx;
 	vue->len = iolen;
+	/* Make sure buffer is written before we update index. */
+	wmb();
 	vuh->idx = uidx;
 }
 
@@ -325,6 +328,7 @@ void virtio_vq_endchains(struct virtio_vq_info *vq, int used_all_avail)
 	 * In any case, though, if NOTIFY_ON_EMPTY is set and the
 	 * entire avail was processed, we need to interrupt always.
 	 */
+	mb();
 	dev = vq->dev;
 	old_idx = vq->save_used;
 	vq->save_used = new_idx = vq->used->idx;
-- 
2.17.1

