From 4b64273e3f416f6066a2bf38722e42859931c41c Mon Sep 17 00:00:00 2001
From: "Chew, Tong Liang" <tong.liang.chew@intel.com>
Date: Fri, 28 Mar 2025 00:52:43 +0800
Subject: [PATCH] drm/xe/pf: forcewake media engines on root gt

Windows vF using Root GuC to access the media early register given by
pF.

However, pF driver is designed to only populate the media early
registers value to Media GuC.

Forcewake media engines on Root tile to access media early registers
earlier. So that the VDBox, Vebox and HuC infor can populate to Root GuC

Signed-off-by: Chew, Tong Liang <tong.liang.chew@intel.com>
---
 drivers/gpu/drm/xe/xe_gt_sriov_pf_service.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/drivers/gpu/drm/xe/xe_gt_sriov_pf_service.c b/drivers/gpu/drm/xe/xe_gt_sriov_pf_service.c
index 536303b2ec74..1b6865dec83a 100644
--- a/drivers/gpu/drm/xe/xe_gt_sriov_pf_service.c
+++ b/drivers/gpu/drm/xe/xe_gt_sriov_pf_service.c
@@ -19,6 +19,8 @@
 #include "xe_gt_sriov_pf_service_types.h"
 #include "xe_guc_ct.h"
 #include "xe_guc_hxg_helpers.h"
+#include "xe_device.h"
+#include "xe_force_wake.h"
 
 #define HUC_KERNEL_LOAD_INFO_ADJUSTED	XE_REG(0xc1dc + MEDIA_GT_GSI_OFFSET)
 #define GT_VEBOX_VDBOX_DISABLE_ADJUSTED XE_REG(0x9140 + MEDIA_GT_GSI_OFFSET)
@@ -270,10 +272,20 @@ static void pf_prepare_runtime_info(struct xe_gt *gt)
 	const struct xe_reg *regs;
 	unsigned int size;
 	u32 *values;
+	unsigned int fw_ref;
+	struct xe_device *xe = gt_to_xe(gt);
+	struct xe_gt *media_gt = xe_device_get_root_tile(xe)->media_gt;
 
 	if (!gt->sriov.pf.service.runtime.size)
 		return;
 
+	/* Windows vF using Root GuC to access the Media Early Register info
+	 * Forcewake to populate the media early register from media tile to root tile.
+	 */
+	fw_ref = xe_force_wake_get(gt_to_fw(media_gt), XE_FORCEWAKE_ALL);
+	if (!xe_force_wake_ref_has_domain(fw_ref, XE_FORCEWAKE_ALL))
+		xe_gt_sriov_err(gt, "Failed to forcewake media engines\n");
+
 	size = gt->sriov.pf.service.runtime.size;
 	regs = gt->sriov.pf.service.runtime.regs;
 	values = gt->sriov.pf.service.runtime.values;
@@ -285,6 +297,8 @@ static void pf_prepare_runtime_info(struct xe_gt *gt)
 
 		xe_gt_sriov_pf_service_print_runtime(gt, &p);
 	}
+
+	xe_force_wake_put(gt_to_fw(media_gt), XE_FORCEWAKE_ALL);
 }
 
 /**
-- 
2.25.1

