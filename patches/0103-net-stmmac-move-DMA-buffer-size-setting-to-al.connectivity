From 6e365538b19b2d5c9bf7431a8432562ea4cb5c12 Mon Sep 17 00:00:00 2001
From: Ong Boon Leong <boon.leong.ong@intel.com>
Date: Fri, 4 Oct 2019 23:40:22 +0800
Subject: [PATCH 103/113] net: stmmac: move DMA buffer size setting to
 alloc_dma_rx_desc_resources

The current calculation of RX DMA buffer size is done in
init_dma_rx_desc_rings after the creation of driver page_pool for RX buffer.
This is incorrect as this will not support the RX buffer size if there is
change of mtu size.

Fixes: 2c520b1c9cfa net: stmmac: Switch stmmac_mode_ops to generic HW Interface Helpers

Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
Signed-off-by: Voon Weifeng <weifeng.voon@intel.com>
---
 .../net/ethernet/stmicro/stmmac/stmmac_main.c | 23 +++++++++----------
 1 file changed, 11 insertions(+), 12 deletions(-)

--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -1694,15 +1694,26 @@
 static int alloc_dma_rx_desc_resources(struct stmmac_priv *priv)
 {
 	u32 rx_count = priv->plat->rx_queues_to_use;
+	int bfsize = 0;
 	u32 queue;
 	int ret;
 
+	bfsize = stmmac_set_16kib_bfsize(priv, priv->dev->mtu);
+	if (bfsize < 0)
+		bfsize = 0;
+
+	if (bfsize < BUF_SIZE_16KiB)
+		bfsize = stmmac_set_bfsize(priv->dev->mtu, priv->dma_buf_sz);
+
+	priv->dma_buf_sz = bfsize;
+
 	/* RX queues buffers and DMA */
 	for (queue = 0; queue < rx_count; queue++) {
 		ret = alloc_dma_rx_desc_resources_q(priv, queue);
 		if (ret)
 			return ret;
 	}
+	buf_sz = bfsize;
 
 	return 0;
 }
