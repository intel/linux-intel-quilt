From 0f1b13876850680854be34f46d55fdf1920e9a19 Mon Sep 17 00:00:00 2001
From: "Li, Fei1" <fei1.li@intel.com>
Date: Sat, 24 Feb 2018 22:47:15 +0800
Subject: [PATCH 1102/2302] Replace CWP with ACRN in file acrn_common.h

Change-Id: I5b70a61116e87b22d778a619c746842362c964f3
Signed-off-by: Li, Fei1 <fei1.li@intel.com>
---
 drivers/char/vhm/vhm_dev.c      | 20 ++++++++++----------
 drivers/vhm/vhm_ioreq.c         |  2 +-
 drivers/vhm/vhm_msi.c           |  2 +-
 drivers/vhm/vhm_vm_mngt.c       |  2 +-
 include/linux/vhm/acrn_common.h | 18 +++++++++---------
 5 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/drivers/char/vhm/vhm_dev.c b/drivers/char/vhm/vhm_dev.c
index 86f1afb..b8a737a9 100644
--- a/drivers/char/vhm/vhm_dev.c
+++ b/drivers/char/vhm/vhm_dev.c
@@ -184,10 +184,10 @@ static long vhm_dev_ioctl(struct file *filep,
 
 	switch (ioctl_num) {
 	case IC_CREATE_VM: {
-		struct cwp_create_vm created_vm;
+		struct acrn_create_vm created_vm;
 
 		if (copy_from_user(&created_vm, (void *)ioctl_param,
-			sizeof(struct cwp_create_vm)))
+			sizeof(struct acrn_create_vm)))
 			return -EFAULT;
 
 		ret = hcall_create_vm(virt_to_phys(&created_vm));
@@ -198,7 +198,7 @@ static long vhm_dev_ioctl(struct file *filep,
 		}
 
 		if (copy_to_user((void *)ioctl_param, &created_vm,
-			sizeof(struct cwp_create_vm)))
+			sizeof(struct acrn_create_vm)))
 			return -EFAULT;
 
 		vm->vmid = created_vm.vmid;
@@ -236,10 +236,10 @@ static long vhm_dev_ioctl(struct file *filep,
 	}
 
 	case IC_CREATE_VCPU: {
-		struct cwp_create_vcpu cv;
+		struct acrn_create_vcpu cv;
 
 		if (copy_from_user(&cv, (void *)ioctl_param,
-				sizeof(struct cwp_create_vcpu)))
+				sizeof(struct acrn_create_vcpu)))
 			return -EFAULT;
 
 		ret = cwp_hypercall2(HC_CREATE_VCPU, vm->vmid,
@@ -317,7 +317,7 @@ static long vhm_dev_ioctl(struct file *filep,
 	}
 
 	case IC_ASSERT_IRQLINE: {
-		struct cwp_irqline irq;
+		struct acrn_irqline irq;
 
 		if (copy_from_user(&irq, (void *)ioctl_param, sizeof(irq)))
 			return -EFAULT;
@@ -330,7 +330,7 @@ static long vhm_dev_ioctl(struct file *filep,
 		break;
 	}
 	case IC_DEASSERT_IRQLINE: {
-		struct cwp_irqline irq;
+		struct acrn_irqline irq;
 
 		if (copy_from_user(&irq, (void *)ioctl_param, sizeof(irq)))
 			return -EFAULT;
@@ -343,7 +343,7 @@ static long vhm_dev_ioctl(struct file *filep,
 		break;
 	}
 	case IC_PULSE_IRQLINE: {
-		struct cwp_irqline irq;
+		struct acrn_irqline irq;
 
 		if (copy_from_user(&irq, (void *)ioctl_param, sizeof(irq)))
 			return -EFAULT;
@@ -358,7 +358,7 @@ static long vhm_dev_ioctl(struct file *filep,
 	}
 
 	case IC_INJECT_MSI: {
-		struct cwp_msi_entry msi;
+		struct acrn_msi_entry msi;
 
 		if (copy_from_user(&msi, (void *)ioctl_param, sizeof(msi)))
 			return -EFAULT;
@@ -473,7 +473,7 @@ static long vhm_dev_ioctl(struct file *filep,
 	}
 
 	case IC_VM_PCI_MSIX_REMAP: {
-		struct cwp_vm_pci_msix_remap msix_remap;
+		struct acrn_vm_pci_msix_remap msix_remap;
 
 		if (copy_from_user(&msix_remap,
 			(void *)ioctl_param, sizeof(msix_remap)))
diff --git a/drivers/vhm/vhm_ioreq.c b/drivers/vhm/vhm_ioreq.c
index 5c5a00a..98d2a91 100644
--- a/drivers/vhm/vhm_ioreq.c
+++ b/drivers/vhm/vhm_ioreq.c
@@ -863,7 +863,7 @@ unsigned int vhm_dev_poll(struct file *filep, poll_table *wait)
 
 int cwp_ioreq_init(struct vhm_vm *vm, unsigned long vma)
 {
-	struct cwp_set_ioreq_buffer set_buffer;
+	struct acrn_set_ioreq_buffer set_buffer;
 	struct page *page;
 	int ret;
 
diff --git a/drivers/vhm/vhm_msi.c b/drivers/vhm/vhm_msi.c
index 83db860..d9b5d55 100644
--- a/drivers/vhm/vhm_msi.c
+++ b/drivers/vhm/vhm_msi.c
@@ -61,7 +61,7 @@
 static struct msi_msg cwp_notify_msix_remap(struct msi_desc *entry,
 				struct msi_msg *msg)
 {
-	volatile struct cwp_vm_pci_msix_remap notify;
+	volatile struct acrn_vm_pci_msix_remap notify;
 	struct pci_dev *dev = msi_desc_to_pci_dev(entry);
 	struct msi_msg remapped_msg = *msg;
 	u16 msgctl;
diff --git a/drivers/vhm/vhm_vm_mngt.c b/drivers/vhm/vhm_vm_mngt.c
index ea0be4b..bc8bb33 100644
--- a/drivers/vhm/vhm_vm_mngt.c
+++ b/drivers/vhm/vhm_vm_mngt.c
@@ -115,7 +115,7 @@ int vhm_get_vm_info(unsigned long vmid, struct vm_info *info)
 int vhm_inject_msi(unsigned long vmid, unsigned long msi_addr,
 		unsigned long msi_data)
 {
-	struct cwp_msi_entry msi;
+	struct acrn_msi_entry msi;
 	int ret;
 
 	/* msi_addr: addr[19:12] with dest vcpu id */
diff --git a/include/linux/vhm/acrn_common.h b/include/linux/vhm/acrn_common.h
index f400e06..c853067 100644
--- a/include/linux/vhm/acrn_common.h
+++ b/include/linux/vhm/acrn_common.h
@@ -140,7 +140,7 @@ struct vhm_request_buffer {
 } __attribute__((aligned(4096)));
 
 /* Common API params */
-struct cwp_create_vm {
+struct acrn_create_vm {
 	int32_t vmid;	/* OUT: return vmid to VHM. Keep it first field */
 	uint32_t vcpu_num;	/* IN: VM vcpu number */
 	uint8_t	 GUID[16];	/* IN: GUID of this vm */
@@ -148,12 +148,12 @@ struct cwp_create_vm {
 	uint8_t  reserved[31];	/* Reserved for future use */
 } __attribute__((aligned(8)));
 
-struct cwp_create_vcpu {
+struct acrn_create_vcpu {
 	uint32_t vcpu_id;	/* IN: vcpu id */
 	uint32_t pcpu_id;	/* IN: pcpu id */
 } __attribute__((aligned(8)));
 
-struct cwp_set_ioreq_buffer {
+struct acrn_set_ioreq_buffer {
 	uint64_t req_buf;			/* IN: gpa of per VM request_buffer*/
 } __attribute__((aligned(8)));
 
@@ -162,11 +162,11 @@ struct cwp_set_ioreq_buffer {
  * IOAPIC: inject interrupt to IOAPIC
  * ISA: inject interrupt to both PIC and IOAPIC
  */
-#define	CWP_INTR_TYPE_ISA	0
-#define	CWP_INTR_TYPE_IOAPIC	1
+#define	ACRN_INTR_TYPE_ISA	0
+#define	ACRN_INTR_TYPE_IOAPIC	1
 
 /* For ISA, PIC, IOAPIC etc */
-struct cwp_irqline {
+struct acrn_irqline {
 	uint32_t intr_type;
 	uint32_t reserved;
 	uint64_t pic_irq;        /* IN: for ISA type */
@@ -174,17 +174,17 @@ struct cwp_irqline {
 } __attribute__((aligned(8)));
 
 /* For MSI type inject */
-struct cwp_msi_entry {
+struct acrn_msi_entry {
 	uint64_t msi_addr;	/* IN: addr[19:12] with dest vcpu id */
 	uint64_t msi_data;	/* IN: data[7:0] with vector */
 } __attribute__((aligned(8)));
 
 /* For NMI inject */
-struct cwp_nmi_entry {
+struct acrn_nmi_entry {
 	int64_t vcpuid;		/* IN: -1 means vcpu0 */
 } __attribute__((aligned(8)));
 
-struct cwp_vm_pci_msix_remap {
+struct acrn_vm_pci_msix_remap {
 	uint16_t virt_bdf;	/* IN: Device virtual BDF# */
 	uint16_t phys_bdf;	/* IN: Device physical BDF# */
 	uint16_t msi_ctl;		/* IN: PCI MSI/x cap control data */
-- 
2.7.4

