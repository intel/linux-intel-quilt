From 38e5b40a60891846793a3f6f7b1f7c8b15416357 Mon Sep 17 00:00:00 2001
From: Fei Jiang <fei.jiang@intel.com>
Date: Wed, 27 Jun 2018 16:23:40 +0800
Subject: [PATCH 1591/2345] drm/i915/gvt: extend enable_pvmmio to also control
 pvmmio levels

To further optimize GVT-g performance, we need enable pvmmio in more
places, and pvmmio need change code both in SOS and UOS, while these
changes can't be merged in SOS and UOS at same time, then we need
devise one mechanism to enable different level of pvmmio when upload
change.

Signed-off-by: Fei Jiang <fei.jiang@intel.com>
Reviewed-by: Min He <min.he@intel.com>
---
 drivers/gpu/drm/i915/i915_params.c | 4 ++--
 drivers/gpu/drm/i915/i915_params.h | 2 +-
 drivers/gpu/drm/i915/i915_pvinfo.h | 7 +++++++
 drivers/gpu/drm/i915/intel_lrc.c   | 9 ++++++---
 4 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_params.c b/drivers/gpu/drm/i915/i915_params.c
index 4180a34..040e32ae 100644
--- a/drivers/gpu/drm/i915/i915_params.c
+++ b/drivers/gpu/drm/i915/i915_params.c
@@ -242,9 +242,9 @@ i915_param_named(enable_dpcd_backlight, bool, 0600,
 i915_param_named(enable_gvt, bool, 0400,
 	"Enable support for Intel GVT-g graphics virtualization host support(default:false)");
 
-module_param_named(enable_pvmmio, i915_modparams.enable_pvmmio, bool, 0400);
+module_param_named(enable_pvmmio, i915_modparams.enable_pvmmio, uint, 0400);
 MODULE_PARM_DESC(enable_pvmmio,
-	"Enable pv mmio feature, default TRUE. This parameter "
+	"Enable pv mmio feature and set pvmmio level, default 1. This parameter "
 	"could only set from host, guest value is set through vgt_if");
 
 module_param_named(enable_gvt_oos, i915_modparams.enable_gvt_oos, bool, 0400);
diff --git a/drivers/gpu/drm/i915/i915_params.h b/drivers/gpu/drm/i915/i915_params.h
index acec44a..6d60869 100644
--- a/drivers/gpu/drm/i915/i915_params.h
+++ b/drivers/gpu/drm/i915/i915_params.h
@@ -74,7 +74,7 @@
 	func(bool, enable_dp_mst); \
 	func(bool, enable_dpcd_backlight); \
 	func(bool, enable_gvt); \
-	func(bool, enable_pvmmio); \
+	func(unsigned int, enable_pvmmio); \
 	func(bool, enable_gvt_oos); \
 	func(bool, enable_conformance_check); \
 	func(bool, disable_gvt_fw_loading); \
diff --git a/drivers/gpu/drm/i915/i915_pvinfo.h b/drivers/gpu/drm/i915/i915_pvinfo.h
index 7aa934c..28d22bf 100644
--- a/drivers/gpu/drm/i915/i915_pvinfo.h
+++ b/drivers/gpu/drm/i915/i915_pvinfo.h
@@ -71,6 +71,13 @@ struct gvt_shared_page {
  */
 #define VGT_CAPS_FULL_48BIT_PPGTT	BIT(2)
 
+/*
+ * define different levels of PVMMIO optimization
+ */
+enum pvmmio_levels {
+	PVMMIO_ELSP_SUBMIT = 0x1,
+};
+
 struct vgt_if {
 	u64 magic;		/* VGT_MAGIC */
 	u16 version_major;
diff --git a/drivers/gpu/drm/i915/intel_lrc.c b/drivers/gpu/drm/i915/intel_lrc.c
index e10bc362..6db84a7 100644
--- a/drivers/gpu/drm/i915/intel_lrc.c
+++ b/drivers/gpu/drm/i915/intel_lrc.c
@@ -479,7 +479,8 @@ static void execlists_submit_ports(struct intel_engine_cs *engine)
 			GEM_BUG_ON(!n);
 			desc = 0;
 		}
-		if (intel_vgpu_active(engine->i915) && i915_modparams.enable_pvmmio) {
+		if (intel_vgpu_active(engine->i915) &&
+		    i915_modparams.enable_pvmmio & PVMMIO_ELSP_SUBMIT) {
 			BUG_ON(i >= 4);
 			descs[i] = upper_32_bits(desc);
 			descs[i + 1] = lower_32_bits(desc);
@@ -489,7 +490,8 @@ static void execlists_submit_ports(struct intel_engine_cs *engine)
 		}
 	}
 
-	if (intel_vgpu_active(engine->i915) && i915_modparams.enable_pvmmio) {
+	if (intel_vgpu_active(engine->i915) &&
+	    i915_modparams.enable_pvmmio & PVMMIO_ELSP_SUBMIT) {
 		u32 __iomem *elsp_data = engine->i915->shared_page->elsp_data;
 		spin_lock(&engine->i915->shared_page_lock);
 		writel(descs[0], elsp_data);
@@ -545,7 +547,8 @@ static void inject_preempt_context(struct intel_engine_cs *engine)
 	ce->ring->tail &= (ce->ring->size - 1);
 	ce->lrc_reg_state[CTX_RING_TAIL+1] = ce->ring->tail;
 
-	if (intel_vgpu_active(engine->i915) && i915_modparams.enable_pvmmio) {
+	if (intel_vgpu_active(engine->i915) &&
+	    i915_modparams.enable_pvmmio & PVMMIO_ELSP_SUBMIT) {
 		u32 __iomem *elsp_data = engine->i915->shared_page->elsp_data;
 
 		spin_lock(&engine->i915->shared_page_lock);
-- 
2.7.4

