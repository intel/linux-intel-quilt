From 8f5dee0fc9c3c03fc27d856f6d6e0da87f1d718c Mon Sep 17 00:00:00 2001
From: "Song, Yoong Siang" <yoong.siang.song@intel.com>
Date: Wed, 15 Apr 2020 19:19:10 +0800
Subject: [PATCH 29/42] net: networkproxy: enable wakeup capability when
 Network Proxy Agent is ready

Introduce proxy_wakeup_enable() function pointer so that Network Proxy
driver can enable Ethernet driver wakeup system capability when
Network Proxy Agent is ready.

Suggested-by: Ong Boon Leong <boon.leong.ong@intel.com>
Signed-off-by: Song, Yoong Siang <yoong.siang.song@intel.com>
---
 drivers/net/networkproxy/network_proxy.c | 3 +++
 include/linux/network_proxy.h            | 1 +
 2 files changed, 4 insertions(+)

diff --git a/drivers/net/networkproxy/network_proxy.c b/drivers/net/networkproxy/network_proxy.c
index 6223011102f9..37c5e5d29094 100644
--- a/drivers/net/networkproxy/network_proxy.c
+++ b/drivers/net/networkproxy/network_proxy.c
@@ -599,6 +599,8 @@ EXPORT_SYMBOL(netprox_host_proxy_exit);
 
 int netprox_ipc_recv(int cmd, unsigned char *payload, int size)
 {
+	struct net_device *netdev = np_ctx->np_netdev->netdev;
+
 	/* Process IPC message from Network Proxy Agent */
 	switch (cmd) {
 	case NP_A2H_CMD_AGENT_INFO:
@@ -607,6 +609,7 @@ int netprox_ipc_recv(int cmd, unsigned char *payload, int size)
 		break;
 	case NP_A2H_CMD_AGENT_READY:
 		np_ctx->agent_state = NP_AGENT_READY;
+		np_ctx->np_netdev->proxy_wakeup_enable(netdev, 1);
 		break;
 	case NP_A2H_CMD_HOST_IS_AWAKE:
 		/* Ethernet driver's resume function will eventually
diff --git a/include/linux/network_proxy.h b/include/linux/network_proxy.h
index c07289b8735f..e27e03d93600 100644
--- a/include/linux/network_proxy.h
+++ b/include/linux/network_proxy.h
@@ -46,6 +46,7 @@ struct np_ipcdev {
 struct np_netdev {
 	struct net_device *netdev;
 	int (*proxy_enter)(struct net_device *netdev);
+	void (*proxy_wakeup_enable)(struct net_device *netdev, bool enable);
 };
 
 /* Network Device for Network Proxy Agent */
-- 
2.17.1

