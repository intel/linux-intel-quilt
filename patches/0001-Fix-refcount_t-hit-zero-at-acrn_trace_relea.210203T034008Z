From d6d058bb77e48713e540575903f9f437c2bbd0a4 Mon Sep 17 00:00:00 2001
From: Tao Yuhong <yuhong.tao@intel.com>
Date: Mon, 16 Nov 2020 04:52:06 -0500
Subject: [PATCH 1/3] Fix refcount_t hit zero at acrn_trace_release

Because refcount do not allow 0
For 5.4 kernel, when run 'cat /dev/acrn_trace_*', will meet:

[162152.702889] refcount_t hit zero at acrn_trace_release+0x2b/0x70 in
[162152.703955] WARNING: CPU: 1 PID: 10384 at kernel/panic.c:681 refcount_error_report+0x9c/0xac

should use atomic_t instead

Tracked-On: projectacrn/acrn-hypervisor#5518
Signed-off-by: Tao Yuhong <yuhong.tao@intel.com>
Reviewed-by: Shuo A Liu <shuo.a.liu@intel.com>
---
 drivers/acrn/acrn_trace.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/acrn/acrn_trace.c b/drivers/acrn/acrn_trace.c
index 890d2ab889b3..16c690da67cb 100644
--- a/drivers/acrn/acrn_trace.c
+++ b/drivers/acrn/acrn_trace.c
@@ -87,7 +87,7 @@ struct acrn_trace {
 	struct miscdevice miscdev;
 	char name[24];
 	shared_buf_t *sbuf;
-	refcount_t open_cnt;
+	atomic_t open_cnt;
 	uint16_t pcpu_id;
 };
 
@@ -110,10 +110,10 @@ static int acrn_trace_open(struct inode *inode, struct file *filep)
 	pr_debug("%s, cpu %d\n", __func__, dev->pcpu_id);
 
 	/* More than one reader at the same time could get data messed up */
-	if (refcount_read(&dev->open_cnt))
+	if (atomic_read(&dev->open_cnt))
 		return -EBUSY;
 
-	refcount_inc(&dev->open_cnt);
+	atomic_inc(&dev->open_cnt);
 
 	return 0;
 }
@@ -130,7 +130,7 @@ static int acrn_trace_release(struct inode *inode, struct file *filep)
 
 	pr_debug("%s, cpu %d\n", __func__, dev->pcpu_id);
 
-	refcount_dec(&dev->open_cnt);
+	atomic_dec(&dev->open_cnt);
 
 	return 0;
 }
-- 
2.17.1

