From 7eb55469ab58d51485411a831e351f60eb5de6f8 Mon Sep 17 00:00:00 2001
From: Chen Meng J <meng.j.chen@intel.com>
Date: Thu, 30 Aug 2018 13:53:46 +0800
Subject: [PATCH 2276/2367] media: intel-ipu4: ox03a10: use mode 1920x1088
 GRBG12

Message for Open Source:
use mode 1920x1088 GRBG12, and option C for compression.

Message for Internal:
[Feature] sensor ox03a10 driver enabling.
1920x1088/GRBG12 is required by customer.
merge option C for compression, from patch#351348.

Change-Id: Idf4e577a2cadaae568239494a39ad05db92f5393
Tracked-On: #JIIAP-573
Signed-off-by: Chang Ying <ying.chang@intel.com>
Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
Signed-off-by: Meng Wei <wei.meng@intel.com>
---
 .../i2c/crlmodule/crl_ox03a10_configuration.h      | 140 +++++++++++++++------
 1 file changed, 105 insertions(+), 35 deletions(-)

diff --git a/drivers/media/i2c/crlmodule/crl_ox03a10_configuration.h b/drivers/media/i2c/crlmodule/crl_ox03a10_configuration.h
index 4ee8e64..ffd2c6f 100644
--- a/drivers/media/i2c/crlmodule/crl_ox03a10_configuration.h
+++ b/drivers/media/i2c/crlmodule/crl_ox03a10_configuration.h
@@ -40,35 +40,35 @@ struct crl_sensor_limits ox03a10_sensor_limits = {
 	.x_addr_min = 0,
 	.y_addr_min = 0,
 	.x_addr_max = 1920,
-	.y_addr_max = 1280,
+	.y_addr_max = 1088,
 };
 
-struct crl_subdev_rect_rep ox03a10_1920_1280_rects[] = {
+struct crl_subdev_rect_rep ox03a10_1920_1088_rects[] = {
 	{
 		.subdev_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
 		.in_rect.left = 0,
 		.in_rect.top  = 0,
 		.in_rect.width = 1920,
-		.in_rect.height = 1280,
+		.in_rect.height = 1088,
 		.out_rect.left = 0,
 		.out_rect.top  = 0,
 		.out_rect.width = 1920,
-		.out_rect.height = 1280,
+		.out_rect.height = 1088,
 	},
 	{
 		.subdev_type = CRL_SUBDEV_TYPE_BINNER,
 		.in_rect.left = 0,
 		.in_rect.top  = 0,
 		.in_rect.width = 1920,
-		.in_rect.height = 1280,
+		.in_rect.height = 1088,
 		.out_rect.left = 0,
 		.out_rect.top  = 0,
 		.out_rect.width = 1920,
-		.out_rect.height = 1280,
+		.out_rect.height = 1088,
 	}
 };
 
-static struct crl_register_write_rep ox03a10_1920_1280_12DCG[] = {
+static struct crl_register_write_rep ox03a10_1920_1088_12DCG[] = {
 	{ 0x4d09, CRL_REG_LEN_08BIT, 0x5f },
 	{ 0x0104, CRL_REG_LEN_08BIT, 0x04 },
 	{ 0x0303, CRL_REG_LEN_08BIT, 0x01 },
@@ -231,21 +231,17 @@ static struct crl_register_write_rep ox03a10_1920_1280_12DCG[] = {
 	{ 0x3668, CRL_REG_LEN_08BIT, 0x95 },
 	{ 0x3669, CRL_REG_LEN_08BIT, 0x16 },
 	{ 0x366f, CRL_REG_LEN_08BIT, 0xc4 },
-	{ 0x3671, CRL_REG_LEN_08BIT, 0x27 },
+	{ 0x3671, CRL_REG_LEN_08BIT, 0x37 },
 	{ 0x3673, CRL_REG_LEN_08BIT, 0x6a },
 	{ 0x3678, CRL_REG_LEN_08BIT, 0x88 },
 	{ 0x3800, CRL_REG_LEN_08BIT, 0x00 },
 	{ 0x3801, CRL_REG_LEN_08BIT, 0x00 },
-	{ 0x3802, CRL_REG_LEN_08BIT, 0x00 },
-	{ 0x3803, CRL_REG_LEN_08BIT, 0x04 },
 	{ 0x3804, CRL_REG_LEN_08BIT, 0x07 },
 	{ 0x3805, CRL_REG_LEN_08BIT, 0x8f },
-	{ 0x3806, CRL_REG_LEN_08BIT, 0x05 },
-	{ 0x3807, CRL_REG_LEN_08BIT, 0x0b },
 	{ 0x3808, CRL_REG_LEN_08BIT, 0x07 },
 	{ 0x3809, CRL_REG_LEN_08BIT, 0x80 },
-	{ 0x380a, CRL_REG_LEN_08BIT, 0x05 },
-	{ 0x380b, CRL_REG_LEN_08BIT, 0x00 },
+	{ 0x380a, CRL_REG_LEN_08BIT, 0x04 },
+	{ 0x380b, CRL_REG_LEN_08BIT, 0x40 },
 	{ 0x380c, CRL_REG_LEN_08BIT, 0x02 },
 	{ 0x380d, CRL_REG_LEN_08BIT, 0x14 },
 	{ 0x380e, CRL_REG_LEN_08BIT, 0x05 },
@@ -528,7 +524,7 @@ static struct crl_register_write_rep ox03a10_1920_1280_12DCG[] = {
 	{ 0x0100, CRL_REG_LEN_08BIT, 0x01 },
 };
 
-static struct crl_register_write_rep ox03a10_1920_1280_12DCG_12VS[] = {
+static struct crl_register_write_rep ox03a10_1920_1088_12DCG_12VS[] = {
 	{ 0x4d09, CRL_REG_LEN_08BIT, 0x5f },
 	{ 0x0104, CRL_REG_LEN_08BIT, 0x04 },
 	{ 0x0303, CRL_REG_LEN_08BIT, 0x02 },
@@ -691,21 +687,17 @@ static struct crl_register_write_rep ox03a10_1920_1280_12DCG_12VS[] = {
 	{ 0x3668, CRL_REG_LEN_08BIT, 0x95 },
 	{ 0x3669, CRL_REG_LEN_08BIT, 0x16 },
 	{ 0x366f, CRL_REG_LEN_08BIT, 0xc4 },
-	{ 0x3671, CRL_REG_LEN_08BIT, 0x27 },
+	{ 0x3671, CRL_REG_LEN_08BIT, 0x37 },
 	{ 0x3673, CRL_REG_LEN_08BIT, 0x6a },
 	{ 0x3678, CRL_REG_LEN_08BIT, 0x88 },
 	{ 0x3800, CRL_REG_LEN_08BIT, 0x00 },
 	{ 0x3801, CRL_REG_LEN_08BIT, 0x00 },
-	{ 0x3802, CRL_REG_LEN_08BIT, 0x00 },
-	{ 0x3803, CRL_REG_LEN_08BIT, 0x04 },
 	{ 0x3804, CRL_REG_LEN_08BIT, 0x07 },
 	{ 0x3805, CRL_REG_LEN_08BIT, 0x8f },
-	{ 0x3806, CRL_REG_LEN_08BIT, 0x05 },
-	{ 0x3807, CRL_REG_LEN_08BIT, 0x0b },
 	{ 0x3808, CRL_REG_LEN_08BIT, 0x07 },
 	{ 0x3809, CRL_REG_LEN_08BIT, 0x80 },
-	{ 0x380a, CRL_REG_LEN_08BIT, 0x05 },
-	{ 0x380b, CRL_REG_LEN_08BIT, 0x00 },
+	{ 0x380a, CRL_REG_LEN_08BIT, 0x04 },
+	{ 0x380b, CRL_REG_LEN_08BIT, 0x40 },
 	{ 0x380c, CRL_REG_LEN_08BIT, 0x02 },
 	{ 0x380d, CRL_REG_LEN_08BIT, 0x14 },
 	{ 0x380e, CRL_REG_LEN_08BIT, 0x05 },
@@ -1001,31 +993,31 @@ struct crl_ctrl_data_pair ox03a10_ctrl_data_modes[] = {
 
 struct crl_mode_rep ox03a10_modes[] = {
 	{
-		.sd_rects_items = ARRAY_SIZE(ox03a10_1920_1280_rects),
-		.sd_rects = ox03a10_1920_1280_rects,
+		.sd_rects_items = ARRAY_SIZE(ox03a10_1920_1088_rects),
+		.sd_rects = ox03a10_1920_1088_rects,
 		.binn_hor = 1,
 		.binn_vert = 1,
 		.scale_m = 1,
 		.width = 1920,
-		.height = 1280,
+		.height = 1088,
 		.comp_items = 1,
 		.ctrl_data = &ox03a10_ctrl_data_modes[0],
-		.mode_regs_items = ARRAY_SIZE(ox03a10_1920_1280_12DCG),
-		.mode_regs = ox03a10_1920_1280_12DCG,
+		.mode_regs_items = ARRAY_SIZE(ox03a10_1920_1088_12DCG),
+		.mode_regs = ox03a10_1920_1088_12DCG,
 	},
 	{
-		.sd_rects_items = ARRAY_SIZE(ox03a10_1920_1280_rects),
-		.sd_rects = ox03a10_1920_1280_rects,
+		.sd_rects_items = ARRAY_SIZE(ox03a10_1920_1088_rects),
+		.sd_rects = ox03a10_1920_1088_rects,
 		.binn_hor = 1,
 		.binn_vert = 1,
 		.scale_m = 1,
 		.width = 1920,
-		.height = 1280,
+		.height = 1088,
 		.comp_items = 1,
 		.ctrl_data = &ox03a10_ctrl_data_modes[1],
-		.mode_regs_items = ARRAY_SIZE(ox03a10_1920_1280_12DCG_12VS),
-		.mode_regs = ox03a10_1920_1280_12DCG_12VS,
-	}
+		.mode_regs_items = ARRAY_SIZE(ox03a10_1920_1088_12DCG_12VS),
+		.mode_regs = ox03a10_1920_1088_12DCG_12VS,
+	},
 };
 
 static struct crl_arithmetic_ops bits_5_0[] = {
@@ -1427,6 +1419,77 @@ struct crl_v4l2_ctrl ox03a10_v4l2_ctrls[] = {
 		.dep_items = 0,
 		.dep_ctrls = 0,
 	},
+	{
+		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
+		.op_type = CRL_V4L2_CTRL_SET_OP,
+		.context = SENSOR_POWERED_ON,
+		.ctrl_id = V4L2_CID_LINE_LENGTH_PIXELS,
+		.name = "Line Length Pixels",
+		.type = CRL_V4L2_CTRL_TYPE_CUSTOM,
+		.data.std_data.min = 1920,
+		.data.std_data.max = 65535,
+		.data.std_data.step = 1,
+		.data.std_data.def = 1978,
+		.flags = V4L2_CTRL_FLAG_UPDATE,
+		.impact = CRL_IMPACTS_NO_IMPACT,
+		.ctrl = 0,
+		.regs_items = ARRAY_SIZE(ar0231at_llp_regs),
+		.regs = ar0231at_llp_regs,
+		.dep_items = 0,
+		.dep_ctrls = 0,
+		.v4l2_type = V4L2_CTRL_TYPE_INTEGER,
+	},
+	{
+		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
+		.op_type = CRL_V4L2_CTRL_SET_OP,
+		.context = SENSOR_POWERED_ON,
+		.ctrl_id = V4L2_CID_FRAME_LENGTH_LINES,
+		.name = "Frame Length Lines",
+		.type = CRL_V4L2_CTRL_TYPE_CUSTOM,
+		.data.std_data.min = 1088,
+		.data.std_data.max = 65535,
+		.data.std_data.step = 1,
+		.data.std_data.def = 1480,
+		.flags = V4L2_CTRL_FLAG_UPDATE,
+		.impact = CRL_IMPACTS_NO_IMPACT,
+		.ctrl = 0,
+		.regs_items = ARRAY_SIZE(ar0231at_fll_regs),
+		.regs = ar0231at_fll_regs,
+		.dep_items = 0,
+		.dep_ctrls = 0,
+		.v4l2_type = V4L2_CTRL_TYPE_INTEGER,
+	},
+	{
+		.sd_type = CRL_SUBDEV_TYPE_BINNER,
+		.op_type = CRL_V4L2_CTRL_SET_OP,
+		.context = SENSOR_IDLE,
+		.ctrl_id = V4L2_CID_LINK_FREQ,
+		.name = "V4L2_CID_LINK_FREQ",
+		.type = CRL_V4L2_CTRL_TYPE_MENU_INT,
+		.data.v4l2_int_menu.def = 0,
+		.data.v4l2_int_menu.max = 0,
+		.data.v4l2_int_menu.menu = 0,
+		.flags = 0,
+		.impact = CRL_IMPACTS_NO_IMPACT,
+		.regs_items = 0,
+		.regs = 0,
+		.dep_items = 0,
+		.dep_ctrls = 0,
+	},
+};
+
+static struct crl_register_write_rep ox03a10_SBGGR_regs[] = {
+	{ 0x3802, CRL_REG_LEN_08BIT, 0x00 },
+	{ 0x3803, CRL_REG_LEN_08BIT, 0x04 },
+	{ 0x3806, CRL_REG_LEN_08BIT, 0x05 },
+	{ 0x3807, CRL_REG_LEN_08BIT, 0x0b },
+};
+
+static struct crl_register_write_rep ox03a10_SGRBG_regs[] = {
+	{ 0x3802, CRL_REG_LEN_08BIT, 0x00 },
+	{ 0x3803, CRL_REG_LEN_08BIT, 0x05 },
+	{ 0x3806, CRL_REG_LEN_08BIT, 0x05 },
+	{ 0x3807, CRL_REG_LEN_08BIT, 0x0c },
 };
 
 struct crl_csi_data_fmt ox03a10_crl_csi_data_fmt[] = {
@@ -1434,8 +1497,15 @@ struct crl_csi_data_fmt ox03a10_crl_csi_data_fmt[] = {
 		.code = MEDIA_BUS_FMT_SBGGR12_1X12,
 		.pixel_order = CRL_PIXEL_ORDER_BGGR,
 		.bits_per_pixel = 12,
-		.regs_items = 0,
-		.regs = 0,
+		.regs_items = ARRAY_SIZE(ox03a10_SBGGR_regs),
+		.regs = ox03a10_SBGGR_regs,
+	},
+	{
+		.code = MEDIA_BUS_FMT_SGRBG12_1X12,
+		.pixel_order = CRL_PIXEL_ORDER_GRBG,
+		.bits_per_pixel = 12,
+		.regs_items = ARRAY_SIZE(ox03a10_SGRBG_regs),
+		.regs = ox03a10_SGRBG_regs,
 	}
 };
 
-- 
2.7.4

