From 078486c6e4b702e96bf6c75d0ccd92f174763434 Mon Sep 17 00:00:00 2001
From: Michael Byrne <michaelx.byrne@intel.com>
Date: Wed, 25 Oct 2017 13:26:47 +0200
Subject: [PATCH 0917/2313] drm/i915/gvt: Change DomU to support 3 HDMI
 displays.

Request DomU supports 3 virtual HDMI displays.

This requires eDP-1, DP-1 and DP-2 to be disabled on DomU command line.
DomU's ias.conf must also be updated to support HDMI and not DP displays.
If a panel is not present on port A, DDI B and DDI C will be made active
(as in Dom0).

Reviewed by: Min He <min.he@intel.com>
Signed-off-by: Michael Byrne <michaelx.byrne@intel.com>

Change-Id: Ib944de7bf9be5c19db28d35edd77a9f89148f27a
Reviewed-by: He, Min <min.he@intel.com>
Reviewed-by: Jiang, Fei <fei.jiang@intel.com>
Reviewed-by: Dong, Eddie <eddie.dong@intel.com>
Tested-by: Dong, Eddie <eddie.dong@intel.com>
---
 drivers/gpu/drm/i915/gvt/display.c | 53 +++++++++++++++++++++++---------------
 drivers/gpu/drm/i915/gvt/display.h |  1 +
 drivers/gpu/drm/i915/gvt/edid.c    | 14 +++++-----
 3 files changed, 40 insertions(+), 28 deletions(-)

diff --git a/drivers/gpu/drm/i915/gvt/display.c b/drivers/gpu/drm/i915/gvt/display.c
index 47de283..c6c15b2 100644
--- a/drivers/gpu/drm/i915/gvt/display.c
+++ b/drivers/gpu/drm/i915/gvt/display.c
@@ -296,8 +296,8 @@ static void clean_virtual_dp_monitor(struct intel_vgpu *vgpu, int port_num)
 	port->dpcd = NULL;
 }
 
-static int setup_virtual_dp_monitor(struct intel_vgpu *vgpu, int port_num,
-				    int type, unsigned int resolution, void *edid)
+static int setup_virtual_monitor(struct intel_vgpu *vgpu, int port_num,
+		int type, unsigned int resolution, void *edid, bool is_dp)
 {
 	struct intel_vgpu_port *port = intel_vgpu_port(vgpu, port_num);
 	int valid_extensions = 1;
@@ -312,23 +312,28 @@ static int setup_virtual_dp_monitor(struct intel_vgpu *vgpu, int port_num,
 	if (!port->edid)
 		return -ENOMEM;
 
-	port->dpcd = kzalloc(sizeof(*(port->dpcd)), GFP_KERNEL);
-	if (!port->dpcd) {
-		kfree(port->edid);
-		return -ENOMEM;
-	}
+		port->dpcd = kzalloc(sizeof(*(port->dpcd)), GFP_KERNEL);
+		if (!port->dpcd) {
+			kfree(port->edid);
+			return -ENOMEM;
+		}
 
-	if (edid)
-		memcpy(port->edid->edid_block, edid, EDID_SIZE * valid_extensions);
-	else
-		memcpy(port->edid->edid_block, virtual_dp_monitor_edid[resolution],
-				EDID_SIZE);
+		if (edid)
+			memcpy(port->edid->edid_block, edid, EDID_SIZE * valid_extensions);
+		else
+			memcpy(port->edid->edid_block, virtual_dp_monitor_edid[resolution],
+					EDID_SIZE);
 
-	port->edid->data_valid = true;
+		port->edid->data_valid = true;
+
+	if (is_dp) {
+		memcpy(port->dpcd->data, dpcd_fix_data, DPCD_HEADER_SIZE);
+		port->dpcd->data_valid = true;
+
+
+		port->dpcd->data[DPCD_SINK_COUNT] = 0x1;
+	}
 
-	memcpy(port->dpcd->data, dpcd_fix_data, DPCD_HEADER_SIZE);
-	port->dpcd->data_valid = true;
-	port->dpcd->data[DPCD_SINK_COUNT] = 0x1;
 	port->type = type;
 
 	emulate_monitor_status_change(vgpu);
@@ -460,14 +465,18 @@ int bxt_setup_virtual_monitors(struct intel_vgpu *vgpu)
 	struct drm_connector_list_iter conn_iter;
 	int pipe = 0;
 	int ret = 0;
+	int port = 0;
 
 	drm_connector_list_iter_begin(&vgpu->gvt->dev_priv->drm, &conn_iter);
 	for_each_intel_connector_iter(connector, &conn_iter) {
 		if (connector->encoder->get_hw_state(connector->encoder, &pipe)
 				&& connector->detect_edid) {
-			ret = setup_virtual_dp_monitor(vgpu, pipe,
-					GVT_DP_A + pipe, 0,
-					connector->detect_edid);
+			/* Get (Dom0) port associated with current pipe. */
+			port = enc_to_dig_port(
+					&(connector->encoder->base))->port;
+			ret = setup_virtual_monitor(vgpu, port,
+				GVT_HDMI_A + port, 0,
+				connector->detect_edid, false);
 			if (ret)
 				return ret;
 		}
@@ -525,9 +534,11 @@ int intel_vgpu_init_display(struct intel_vgpu *vgpu, u64 resolution)
 	if (IS_BROXTON(dev_priv))
 		return bxt_setup_virtual_monitors(vgpu);
 	else if (IS_SKYLAKE(dev_priv) || IS_KABYLAKE(dev_priv))
-		return setup_virtual_dp_monitor(vgpu, PORT_D, GVT_DP_D, resolution, NULL);
+		return setup_virtual_monitor(vgpu,
+				PORT_D, GVT_DP_D, resolution, NULL, true);
 	else
-		return setup_virtual_dp_monitor(vgpu, PORT_B, GVT_DP_B, resolution, NULL);
+		return setup_virtual_monitor(vgpu,
+				PORT_B, GVT_DP_B, resolution, NULL, true);
 }
 
 /**
diff --git a/drivers/gpu/drm/i915/gvt/display.h b/drivers/gpu/drm/i915/gvt/display.h
index d73de22..3b8c52c 100644
--- a/drivers/gpu/drm/i915/gvt/display.h
+++ b/drivers/gpu/drm/i915/gvt/display.h
@@ -140,6 +140,7 @@ enum intel_vgpu_port_type {
 	GVT_DP_B,
 	GVT_DP_C,
 	GVT_DP_D,
+	GVT_HDMI_A,
 	GVT_HDMI_B,
 	GVT_HDMI_C,
 	GVT_HDMI_D,
diff --git a/drivers/gpu/drm/i915/gvt/edid.c b/drivers/gpu/drm/i915/gvt/edid.c
index 899fac3..af06f63 100644
--- a/drivers/gpu/drm/i915/gvt/edid.c
+++ b/drivers/gpu/drm/i915/gvt/edid.c
@@ -79,13 +79,13 @@ static inline int get_port_from_gmbus0(struct intel_vgpu *vgpu, u32 gmbus0)
 	int port_select = gmbus0 & _GMBUS_PIN_SEL_MASK;
 	int port = -EINVAL;
 
-        if (IS_BROXTON(dev_priv)) {
-                if (port_select == 1)
-                        port = PORT_B;
-                else if (port_select == 2)
-                        port = PORT_C;
-                else if (port_select == 3)
-                        port = PORT_D;
+	if (IS_BROXTON(dev_priv)) {
+		if (port_select == 1)
+			port = PORT_B;
+		else if (port_select == 2)
+			port = PORT_C;
+		else if (port_select == 3)
+			port = PORT_A;
 	} else {
 		if (port_select == 2)
 			port = PORT_E;
-- 
2.7.4

