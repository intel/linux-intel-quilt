From 648a46e1bebdc6cc2df86d58a5d8cd9a41125b78 Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Wed, 22 Jan 2025 13:38:09 +0800
Subject: [PATCH 1/6] drm/i915: disable a couple of RT functions if RT is
 disabled

intel_vblank_section_enter_irqf and intel_vblank_section_exit_irqf
are for preempt rt kernel. If preempt rt option is disabled, these
two API should be commented out as well.

Signed-off-by: Junxiao Chang <junxiao.chang@intel.com>
---
 drivers/gpu/drm/i915/display/intel_vblank.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/drivers/gpu/drm/i915/display/intel_vblank.c b/drivers/gpu/drm/i915/display/intel_vblank.c
index afb4059582c77..b6b8e91dc0eeb 100644
--- a/drivers/gpu/drm/i915/display/intel_vblank.c
+++ b/drivers/gpu/drm/i915/display/intel_vblank.c
@@ -309,6 +309,7 @@ static void intel_vblank_section_exit(struct intel_display *display)
 	spin_unlock(&i915->uncore.lock);
 }
 
+#ifdef CONFIG_PREEMPT_RT
 static void intel_vblank_section_enter_irqf(struct intel_display *display, unsigned long *flags)
 	__acquires(i915->uncore.lock)
 {
@@ -322,6 +323,7 @@ static void intel_vblank_section_exit_irqf(struct intel_display *display, unsign
 	struct drm_i915_private *i915 = to_i915(display->drm);
 	spin_unlock_irqrestore(&i915->uncore.lock, flags);
 }
+#endif // CONFIG_PREEMPT_RT
 #else
 static void intel_vblank_section_enter(struct intel_display *display)
 {
@@ -331,6 +333,7 @@ static void intel_vblank_section_exit(struct intel_display *display)
 {
 }
 
+#ifdef CONFIG_PREEMPT_RT
 static void intel_vblank_section_enter_irqf(struct intel_display *display, unsigned long *flags)
 {
 	*flags = 0;
@@ -341,6 +344,7 @@ static void intel_vblank_section_exit_irqf(struct intel_display *display, unsign
 	if (flags)
 		return;
 }
+#endif // CONFIG_PREEMPT_RT
 #endif
 
 static bool i915_get_crtc_scanoutpos(struct drm_crtc *_crtc,
-- 
2.25.1

