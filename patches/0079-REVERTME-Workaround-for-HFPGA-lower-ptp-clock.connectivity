From 0d9c9ad9b49f0d6034e651a25f706479275b2914 Mon Sep 17 00:00:00 2001
From: Voon Weifeng <weifeng.voon@intel.com>
Date: Thu, 4 Apr 2019 05:58:57 +0800
Subject: [PATCH 079/104] REVERTME: Workaround for HFPGA lower ptp clock speed

HFPGA PTP clock is 20MHz and fine tune method clock is 12.5MHz

Signed-off-by: Voon Weifeng <weifeng.voon@intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/hwif.h          |  3 ++-
 .../net/ethernet/stmicro/stmmac/stmmac_hwtstamp.c   |  7 +++++--
 drivers/net/ethernet/stmicro/stmmac/stmmac_main.c   |  2 +-
 drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c    | 13 +++++++++----
 include/linux/stmmac.h                              |  1 +
 5 files changed, 18 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/hwif.h b/drivers/net/ethernet/stmicro/stmmac/hwif.h
index 41d2c56ac4cf..297b9663e279 100644
--- a/drivers/net/ethernet/stmicro/stmmac/hwif.h
+++ b/drivers/net/ethernet/stmicro/stmmac/hwif.h
@@ -571,7 +571,8 @@ struct stmmac_priv;
 struct stmmac_hwtimestamp {
 	void (*config_hw_tstamping) (void __iomem *ioaddr, u32 data);
 	void (*config_sub_second_increment)(void __iomem *ioaddr, u32 ptp_clock,
-					   int gmac4, u32 *ssinc);
+					   int gmac4, u32 *ssinc,
+					   bool is_hfpga);
 	int (*init_systime) (void __iomem *ioaddr, u32 sec, u32 nsec);
 	int (*config_addend) (void __iomem *ioaddr, u32 addend);
 	int (*adjust_systime) (void __iomem *ioaddr, u32 sec, u32 nsec,
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_hwtstamp.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_hwtstamp.c
index acc742caadc4..43ebc7da1389 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_hwtstamp.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_hwtstamp.c
@@ -26,7 +26,7 @@ static void config_hw_tstamping(void __iomem *ioaddr, u32 data)
 }
 
 static void config_sub_second_increment(void __iomem *ioaddr,
-		u32 ptp_clock, int gmac4, u32 *ssinc)
+		u32 ptp_clock, int gmac4, u32 *ssinc, bool is_hfpga)
 {
 	u32 value = readl(ioaddr + PTP_TCR);
 	unsigned long data;
@@ -37,7 +37,10 @@ static void config_sub_second_increment(void __iomem *ioaddr,
 	 * where ptp_clock is 50MHz if fine method is used to update system
 	 */
 	if (value & PTP_TCR_TSCFUPDT)
-		data = (1000000000ULL / 50000000);
+		if (is_hfpga)
+			data = (1000000000ULL / 12500000);
+		else
+			data = (1000000000ULL / 50000000);
 	else
 		data = (1000000000ULL / ptp_clock);
 
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index 57e15824c0d0..b0072d9668ca 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -701,7 +701,7 @@ static int stmmac_hwtstamp_set(struct net_device *dev, struct ifreq *ifr)
 		/* program Sub Second Increment reg */
 		stmmac_config_sub_second_increment(priv,
 				priv->ptpaddr, priv->plat->clk_ptp_rate,
-				xmac, &sec_inc);
+				xmac, &sec_inc, priv->plat->is_hfpga);
 		temp = div_u64(1000000000ULL, sec_inc);
 
 		/* Store sub second increment and flags for later use */
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c
index 356a1961bd46..a1c5d2a5d493 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c
@@ -290,7 +290,10 @@ static int ehl_common_data(struct pci_dev *pdev,
 
 	plat->rx_queues_to_use = 8;
 	plat->tx_queues_to_use = 8;
-	plat->clk_ptp_rate = 200000000;
+	if (plat->is_hfpga)
+		plat->clk_ptp_rate = 20000000;
+	else
+		plat->clk_ptp_rate = 200000000;
 	ret = intel_mgbe_common_data(pdev, plat);
 	if (ret)
 		return ret;
@@ -327,7 +330,8 @@ static struct stmmac_pci_info ehl_rgmii1g_pci_info = {
 #define EHL_PSE_ETH_DMA_MISC_OFFSET	0x10000
 #define EHL_PSE_ETH_DMA_MISC_DTM_DRAM	3
 #define EHL_PSE_ETH_DMA_TOTAL_CH	16
-static void ehl_pse_work_around(struct pci_dev *pdev)
+static void ehl_pse_work_around(struct pci_dev *pdev,
+				struct plat_stmmacenet_data *plat)
 {
 	void __iomem *tempaddr = pcim_iomap_table(pdev)[0];
 	int i;
@@ -336,6 +340,7 @@ static void ehl_pse_work_around(struct pci_dev *pdev)
 		writel(EHL_PSE_ETH_DMA_MISC_DTM_DRAM, tempaddr
 		       + EHL_PSE_ETH_DMA_MISC_OFFSET + i * sizeof(u32));
 	}
+	plat->is_hfpga = 1;
 }
 
 static int ehl_pse0_common_data(struct pci_dev *pdev,
@@ -343,7 +348,7 @@ static int ehl_pse0_common_data(struct pci_dev *pdev,
 {
 	plat->bus_id = 2;
 	plat->phy_addr = 1;
-	ehl_pse_work_around(pdev);
+	ehl_pse_work_around(pdev, plat);
 	return ehl_common_data(pdev, plat);
 }
 
@@ -374,7 +379,7 @@ static int ehl_pse1_common_data(struct pci_dev *pdev,
 {
 	plat->bus_id = 3;
 	plat->phy_addr = 1;
-	ehl_pse_work_around(pdev);
+	ehl_pse_work_around(pdev, plat);
 	return ehl_common_data(pdev, plat);
 }
 
diff --git a/include/linux/stmmac.h b/include/linux/stmmac.h
index 52d7febbc434..f7c0914fb3b3 100644
--- a/include/linux/stmmac.h
+++ b/include/linux/stmmac.h
@@ -220,5 +220,6 @@ struct plat_stmmacenet_data {
 	int ext_snapshot_num;
 	int ext_snapshot_en;
 	bool has_safety_feat;
+	bool is_hfpga;
 };
 #endif
-- 
2.17.1

