From 2c717e6d3ac01d4e3ff82c1e53e75c5192d42505 Mon Sep 17 00:00:00 2001
From: "Li, Fei1" <fei1.li@intel.com>
Date: Sat, 24 Feb 2018 21:05:40 +0800
Subject: [PATCH 1122/2367] Rename arch/x86/cwp to arch/x86/acrn

Change-Id: Ida35efdcf74df43572d80ca9c0129115d431eed8
Tracked-On: 212688
Signed-off-by: Li, Fei1 <fei1.li@intel.com>
Reviewed-on: https://android.intel.com/619811
---
 arch/x86/Kbuild                   |  2 +-
 arch/x86/Kconfig                  |  2 +-
 arch/x86/acrn/Kconfig             | 20 +++++++++
 arch/x86/acrn/Makefile            |  2 +
 arch/x86/acrn/acrn_hv.c           | 89 +++++++++++++++++++++++++++++++++++++++
 arch/x86/cwp/Kconfig              | 12 ------
 arch/x86/cwp/Makefile             |  2 -
 arch/x86/cwp/cwp.c                | 89 ---------------------------------------
 arch/x86/include/asm/hypervisor.h |  2 +-
 arch/x86/kernel/cpu/hypervisor.c  |  6 +--
 drivers/char/vhm/vhm_dev.c        |  5 ---
 drivers/gpu/drm/i915/Kconfig      |  2 +-
 drivers/vbs/Kconfig               |  2 +-
 drivers/vhm/Kconfig               |  2 +-
 14 files changed, 120 insertions(+), 117 deletions(-)
 create mode 100644 arch/x86/acrn/Kconfig
 create mode 100644 arch/x86/acrn/Makefile
 create mode 100644 arch/x86/acrn/acrn_hv.c
 delete mode 100644 arch/x86/cwp/Kconfig
 delete mode 100644 arch/x86/cwp/Makefile
 delete mode 100644 arch/x86/cwp/cwp.c

diff --git a/arch/x86/Kbuild b/arch/x86/Kbuild
index fd9c227..4662192 100644
--- a/arch/x86/Kbuild
+++ b/arch/x86/Kbuild
@@ -7,7 +7,7 @@ obj-$(CONFIG_KVM) += kvm/
 # Xen paravirtualization support
 obj-$(CONFIG_XEN) += xen/
 
-obj-$(CONFIG_CWP) += cwp/
+obj-$(CONFIG_ACRN) += acrn/
 
 # Hyper-V paravirtualization support
 obj-$(subst m,y,$(CONFIG_HYPERV)) += hyperv/
diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig
index 2aad65d..224b4a0 100644
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@ -774,7 +774,7 @@ config QUEUED_LOCK_STAT
 	  behavior of paravirtualized queued spinlocks and report
 	  them on debugfs.
 
-source "arch/x86/cwp/Kconfig"
+source "arch/x86/acrn/Kconfig"
 
 source "arch/x86/xen/Kconfig"
 
diff --git a/arch/x86/acrn/Kconfig b/arch/x86/acrn/Kconfig
new file mode 100644
index 00000000..b7cf03d
--- /dev/null
+++ b/arch/x86/acrn/Kconfig
@@ -0,0 +1,20 @@
+# SPDX-License-Identifier: GPL-2.0
+#
+# This Kconfig describes ACRN options
+#
+
+config ACRN
+	bool "ACRN guest support"
+	depends on X86
+	depends on PARAVIRT
+	help
+	  This is the Linux ACRN port.  Enabling this will allow the
+	  kernel to boot in a paravirtualized environment under the
+	  ACRN hypervisor.
+
+config ACRN_HV
+	bool "Enable services run on ACRN hypervisor"
+	depends on ACRN
+	help
+	  This option is needed if were to run ACRN services linux on top of
+	  ACRN hypervisor.
diff --git a/arch/x86/acrn/Makefile b/arch/x86/acrn/Makefile
new file mode 100644
index 00000000..3f42025
--- /dev/null
+++ b/arch/x86/acrn/Makefile
@@ -0,0 +1,2 @@
+# SPDX-License-Identifier: GPL-2.0
+obj-$(CONFIG_ACRN_HV)	+= acrn_hv.o
diff --git a/arch/x86/acrn/acrn_hv.c b/arch/x86/acrn/acrn_hv.c
new file mode 100644
index 00000000..c39987f
--- /dev/null
+++ b/arch/x86/acrn/acrn_hv.c
@@ -0,0 +1,89 @@
+/*
+ * ACRN hypervisor support
+ *
+ * Copyright (C) 2017 Intel Corporation. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ *   * Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ *   * Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in
+ *     the documentation and/or other materials provided with the
+ *     distribution.
+ *   * Neither the name of Intel Corporation nor the names of its
+ *     contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * Jason Chen CJ <jason.cj.chen@intel.com>
+ *
+ */
+#include <asm/hypervisor.h>
+#include <linux/vhm/vhm_msi.h>
+
+static unsigned long cpu_khz_from_acrn(void)
+{
+	unsigned int eax, ebx, ecx, edx;
+
+	/* Get TSC frequency from cpuid 0x40000010 */
+	eax = 0x40000010;
+	ebx = ecx = edx = 0;
+	__cpuid(&eax, &ebx, &ecx, &edx);
+
+	return (unsigned long)eax;
+}
+
+static uint32_t __init acrn_detect(void)
+{
+	return hypervisor_cpuid_base("CWPCWPCWP\0\0", 0);
+}
+
+static void __init acrn_init_platform(void)
+{
+	pv_cpu_ops.cpu_khz = cpu_khz_from_acrn;
+
+#ifdef CONFIG_CWP_VHM
+	pv_irq_ops.write_msi = cwp_write_msi_msg;
+#endif /* CONFIG_CWP_VHM */
+}
+
+static void acrn_pin_vcpu(int cpu)
+{
+	/* do nothing here now */
+}
+
+static bool acrn_x2apic_available(void)
+{
+	/* do not support x2apic */
+	return false;
+}
+
+static void __init acrn_init_mem_mapping(void)
+{
+	/* do nothing here now */
+}
+
+const struct hypervisor_x86 x86_hyper_acrn = {
+	.name                   = "ACRN",
+	.detect                 = acrn_detect,
+	.type                 	= X86_HYPER_ACRN,
+	.init.init_platform     = acrn_init_platform,
+	.runtime.pin_vcpu       = acrn_pin_vcpu,
+	.init.x2apic_available  = acrn_x2apic_available,
+	.init.init_mem_mapping	= acrn_init_mem_mapping,
+};
+EXPORT_SYMBOL(x86_hyper_acrn);
diff --git a/arch/x86/cwp/Kconfig b/arch/x86/cwp/Kconfig
deleted file mode 100644
index 2880c87..00000000
--- a/arch/x86/cwp/Kconfig
+++ /dev/null
@@ -1,12 +0,0 @@
-# SPDX-License-Identifier: GPL-2.0
-#
-# This Kconfig describes CWP options
-#
-
-config CWP
-	bool "Enable services run on CWP hypervisor"
-	depends on X86
-	depends on PARAVIRT
-	help
-	  This option is needed if were to run CWP services linux on top of
-	  CWP hypervisor.
diff --git a/arch/x86/cwp/Makefile b/arch/x86/cwp/Makefile
deleted file mode 100644
index cd62b47..00000000
--- a/arch/x86/cwp/Makefile
+++ /dev/null
@@ -1,2 +0,0 @@
-# SPDX-License-Identifier: GPL-2.0
-obj-$(CONFIG_CWP)	+= cwp.o
diff --git a/arch/x86/cwp/cwp.c b/arch/x86/cwp/cwp.c
deleted file mode 100644
index 09a6a1a..00000000
--- a/arch/x86/cwp/cwp.c
+++ /dev/null
@@ -1,89 +0,0 @@
-/*
- * CWP hypervisor support
- *
- * Copyright (C) 2017 Intel Corporation. All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *   * Neither the name of Intel Corporation nor the names of its
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- *
- * Jason Chen CJ <jason.cj.chen@intel.com>
- *
- */
-#include <asm/hypervisor.h>
-#include <linux/vhm/vhm_msi.h>
-
-static unsigned long cpu_khz_from_cwp(void)
-{
-	unsigned int eax, ebx, ecx, edx;
-
-	/* Get TSC frequency from cpuid 0x40000010 */
-	eax = 0x40000010;
-	ebx = ecx = edx = 0;
-	__cpuid(&eax, &ebx, &ecx, &edx);
-
-	return (unsigned long)eax;
-}
-
-static uint32_t __init cwp_detect(void)
-{
-	return hypervisor_cpuid_base("CWPCWPCWP\0\0", 0);
-}
-
-static void __init cwp_init_platform(void)
-{
-	pv_cpu_ops.cpu_khz = cpu_khz_from_cwp;
-
-#ifdef CONFIG_CWP_VHM
-	pv_irq_ops.write_msi = cwp_write_msi_msg;
-#endif /* CONFIG_CWP_VHM */
-}
-
-static void cwp_pin_vcpu(int cpu)
-{
-	/* do nothing here now */
-}
-
-static bool cwp_x2apic_available(void)
-{
-	/* do not support x2apic */
-	return false;
-}
-
-static void __init cwp_init_mem_mapping(void)
-{
-	/* do nothing here now */
-}
-
-const struct hypervisor_x86 x86_hyper_cwp = {
-	.name                   = "CWP",
-	.detect                 = cwp_detect,
-	.type                 	= X86_HYPER_CWP,
-	.init.init_platform     = cwp_init_platform,
-	.runtime.pin_vcpu       = cwp_pin_vcpu,
-	.init.x2apic_available  = cwp_x2apic_available,
-	.init.init_mem_mapping	= cwp_init_mem_mapping,
-};
-EXPORT_SYMBOL(x86_hyper_cwp);
diff --git a/arch/x86/include/asm/hypervisor.h b/arch/x86/include/asm/hypervisor.h
index f1665a3..9e114b8 100644
--- a/arch/x86/include/asm/hypervisor.h
+++ b/arch/x86/include/asm/hypervisor.h
@@ -28,7 +28,7 @@ enum x86_hypervisor_type {
 	X86_HYPER_XEN_PV,
 	X86_HYPER_XEN_HVM,
 	X86_HYPER_KVM,
-	X86_HYPER_CWP,
+	X86_HYPER_ACRN,
 };
 
 #ifdef CONFIG_HYPERVISOR_GUEST
diff --git a/arch/x86/kernel/cpu/hypervisor.c b/arch/x86/kernel/cpu/hypervisor.c
index fc46ce7..cf6252f 100644
--- a/arch/x86/kernel/cpu/hypervisor.c
+++ b/arch/x86/kernel/cpu/hypervisor.c
@@ -31,7 +31,7 @@ extern const struct hypervisor_x86 x86_hyper_ms_hyperv;
 extern const struct hypervisor_x86 x86_hyper_xen_pv;
 extern const struct hypervisor_x86 x86_hyper_xen_hvm;
 extern const struct hypervisor_x86 x86_hyper_kvm;
-extern const struct hypervisor_x86 x86_hyper_cwp;
+extern const struct hypervisor_x86 x86_hyper_acrn;
 
 static const __initconst struct hypervisor_x86 * const hypervisors[] =
 {
@@ -46,8 +46,8 @@ static const __initconst struct hypervisor_x86 * const hypervisors[] =
 #ifdef CONFIG_KVM_GUEST
 	&x86_hyper_kvm,
 #endif
-#ifdef CONFIG_CWP
-	&x86_hyper_cwp,
+#ifdef CONFIG_ACRN_HV
+	&x86_hyper_acrn,
 #endif
 };
 
diff --git a/drivers/char/vhm/vhm_dev.c b/drivers/char/vhm/vhm_dev.c
index 4a1f3bd..ff4df52 100644
--- a/drivers/char/vhm/vhm_dev.c
+++ b/drivers/char/vhm/vhm_dev.c
@@ -592,11 +592,6 @@ static int __init vhm_init(void)
 
 	pr_info("vhm: initializing\n");
 
-	if (x86_hyper_type != X86_HYPER_CWP) {
-		pr_err("vhm: not support cwp hypervisor!\n");
-		return -EINVAL;
-	}
-
 	if (hcall_get_api_version(virt_to_phys(&api_version)) < 0) {
 		pr_err("vhm: failed to get api version from Hypervisor !\n");
 		return -EINVAL;
diff --git a/drivers/gpu/drm/i915/Kconfig b/drivers/gpu/drm/i915/Kconfig
index f9ad060..f2eaf92 100644
--- a/drivers/gpu/drm/i915/Kconfig
+++ b/drivers/gpu/drm/i915/Kconfig
@@ -127,7 +127,7 @@ config DRM_I915_GVT_KVMGT
 config DRM_I915_GVT_CWP_GVT
 	tristate "Enable CWP support for Intel GVT-g"
 	depends on DRM_I915_GVT
-	depends on CWP
+	depends on ACRN
 	default n
 	help
           Choose this option if you want to enable CWP_GVT support for
diff --git a/drivers/vbs/Kconfig b/drivers/vbs/Kconfig
index 3b5834e..ee0dc9e 100644
--- a/drivers/vbs/Kconfig
+++ b/drivers/vbs/Kconfig
@@ -3,7 +3,7 @@
 #
 config VBS
 	tristate "Enable VBS framework for ACRN hypervisor"
-	depends on CWP
+	depends on ACRN
 	default n
 	---help---
 	  This option is selected by any driver which needs to use
diff --git a/drivers/vhm/Kconfig b/drivers/vhm/Kconfig
index 2ac3032..28549e4 100644
--- a/drivers/vhm/Kconfig
+++ b/drivers/vhm/Kconfig
@@ -1,6 +1,6 @@
 config CWP_VHM
 	bool "Intel CWP Hypervisor Virtio and Hypervisor service Module (VHM)"
-	depends on CWP
+	depends on ACRN
 	depends on DMA_CMA
 	depends on PCI_MSI
 	depends on !INTEL_IOMMU
-- 
2.7.4

