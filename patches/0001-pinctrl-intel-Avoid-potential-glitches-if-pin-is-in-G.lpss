From 091019a28c16c7cd471165798cb73d97e3c4c2df Mon Sep 17 00:00:00 2001
From: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date: Mon, 30 Sep 2019 18:12:22 +0300
Subject: [PATCH 01/43] pinctrl: intel: Avoid potential glitches if pin is in
 GPIO mode

When consumer requests pin, we, in order to be on the safest side,
switch it first to GPIO mode followed by immediate transition to
the input state. Due to posted writes it's luckily to be a single
I/O transaction.

However, if firmware or boot loader already configures pin to
the GPIO mode, user expects no glitches for the requested pin.
We may check if the pin is pre-configured and leave it as is
till the actual consumer toggles its state to avoid glitches.

Fixes: 7981c0015af2 ("Add Intel Sunrisepoint pin controller and GPIO support")
Depends-on: f5a26acf0162 ("Initialize GPIO properly when used through irqchip")
Reported-by: Oliver Barta <oliver.barta@aptiv.com>
Reported-by: Malin Jonsson <malin.jonsson@ericsson.com>
Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
---
 drivers/pinctrl/intel/pinctrl-intel.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/pinctrl/intel/pinctrl-intel.c b/drivers/pinctrl/intel/pinctrl-intel.c
index 83981ad66a71..9cac036e2597 100644
--- a/drivers/pinctrl/intel/pinctrl-intel.c
+++ b/drivers/pinctrl/intel/pinctrl-intel.c
@@ -501,8 +501,8 @@ static int intel_gpio_request_enable(struct pinctrl_dev *pctldev,
 	/*
 	 * If pin is already configured in GPIO mode, we assume that
 	 * firmware provides correct settings. In such case we avoid
-	 * potential glitches on the pin. Otherwise, for the pin in
-	 * alternative mode, consumer has to supply respective flags.
+	 * potential glitches on the pin. Otherwise, for alternative
+	 * mode, consumer has to supply respective flags.
 	 */
 	if (intel_gpio_get_gpio_mode(padcfg0) == PADCFG0_PMODE_GPIO) {
 		raw_spin_unlock_irqrestore(&pctrl->lock, flags);
-- 
2.17.1

