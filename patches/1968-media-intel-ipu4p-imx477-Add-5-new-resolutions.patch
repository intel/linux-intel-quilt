From 393306734d2440f103456c6dcf20ee11e1b7afaa Mon Sep 17 00:00:00 2001
From: Leo Zhao <leo.zhao@intel.com>
Date: Thu, 31 May 2018 16:09:35 +0800
Subject: [PATCH 1968/2367] media: intel-ipu4p: imx477: Add 5 new resolutions

Message for Open Source:
Add 5 new resolutions in supported modes.

Message for Internal:
[Issue/Feature] Refer to open source message.
[Root Cause/Changes] Add 5 new resolutions in supported modes.

Change-Id: Iab3b5a7bfe8b60946964a74fdb2ba7a6e82e0110
Tracked-On: #KRLCSN-239
Signed-off-by: Leo Zhao <leo.zhao@intel.com>
Signed-off-by: Meng Wei <wei.meng@intel.com>
---
 .../media/i2c/crlmodule/crl_imx477_common_regs.h   | 127 +++++-
 .../crlmodule/crl_imx477_master_configuration.h    | 481 +++++++++++++++++++++
 2 files changed, 607 insertions(+), 1 deletion(-)

diff --git a/drivers/media/i2c/crlmodule/crl_imx477_common_regs.h b/drivers/media/i2c/crlmodule/crl_imx477_common_regs.h
index a17a623..d83873a2 100644
--- a/drivers/media/i2c/crlmodule/crl_imx477_common_regs.h
+++ b/drivers/media/i2c/crlmodule/crl_imx477_common_regs.h
@@ -10,7 +10,7 @@
 
 #include "crlmodule-sensor-ds.h"
 
-#define IMX477_CAPTURE_MODE_MAX	3
+#define IMX477_CAPTURE_MODE_MAX	8
 
 static struct crl_dynamic_register_access imx477_fll_regs[] = {
 	{
@@ -759,6 +759,131 @@ static struct crl_subdev_rect_rep imx477_4056_3040_rects[] = {
 	}
 };
 
+static struct crl_subdev_rect_rep imx477_4056_2288_rects[] = {
+	{
+		.subdev_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
+		.in_rect.left = 0,
+		.in_rect.top = 0,
+		.in_rect.width = 4056,
+		.in_rect.height = 3040,
+		.out_rect.left = 0,
+		.out_rect.top = 0,
+		.out_rect.width = 4056,
+		.out_rect.height = 3040,
+	},
+	{
+		.subdev_type = CRL_SUBDEV_TYPE_BINNER,
+		.in_rect.left = 0,
+		.in_rect.top = 0,
+		.in_rect.width = 4056,
+		.in_rect.height = 3040,
+		.out_rect.left = 0,
+		.out_rect.top = 0,
+		.out_rect.width = 4056,
+		.out_rect.height = 2288,
+	}
+};
+
+static struct crl_subdev_rect_rep imx477_2832_1632_rects[] = {
+	{
+		.subdev_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
+		.in_rect.left = 0,
+		.in_rect.top = 0,
+		.in_rect.width = 4056,
+		.in_rect.height = 3040,
+		.out_rect.left = 0,
+		.out_rect.top = 0,
+		.out_rect.width = 4056,
+		.out_rect.height = 3040,
+	},
+	{
+		.subdev_type = CRL_SUBDEV_TYPE_BINNER,
+		.in_rect.left = 0,
+		.in_rect.top = 0,
+		.in_rect.width = 4056,
+		.in_rect.height = 3040,
+		.out_rect.left = 0,
+		.out_rect.top = 0,
+		.out_rect.width = 2832,
+		.out_rect.height = 1632,
+	}
+};
+
+static struct crl_subdev_rect_rep imx477_2028_1128_rects[] = {
+	{
+		.subdev_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
+		.in_rect.left = 0,
+		.in_rect.top = 0,
+		.in_rect.width = 4056,
+		.in_rect.height = 3040,
+		.out_rect.left = 0,
+		.out_rect.top = 0,
+		.out_rect.width = 4056,
+		.out_rect.height = 3040,
+	},
+	{
+		.subdev_type = CRL_SUBDEV_TYPE_BINNER,
+		.in_rect.left = 0,
+		.in_rect.top = 0,
+		.in_rect.width = 4056,
+		.in_rect.height = 3040,
+		.out_rect.left = 0,
+		.out_rect.top = 0,
+		.out_rect.width = 2028,
+		.out_rect.height = 1128,
+	}
+};
+
+static struct crl_subdev_rect_rep imx477_1296_768_rects[] = {
+	{
+		.subdev_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
+		.in_rect.left = 0,
+		.in_rect.top = 0,
+		.in_rect.width = 4056,
+		.in_rect.height = 3040,
+		.out_rect.left = 0,
+		.out_rect.top = 0,
+		.out_rect.width = 4056,
+		.out_rect.height = 3040,
+	},
+	{
+		.subdev_type = CRL_SUBDEV_TYPE_BINNER,
+		.in_rect.left = 0,
+		.in_rect.top = 0,
+		.in_rect.width = 4056,
+		.in_rect.height = 3040,
+		.out_rect.left = 0,
+		.out_rect.top = 0,
+		.out_rect.width = 1296,
+		.out_rect.height = 768,
+	}
+};
+
+static struct crl_subdev_rect_rep imx477_656_512_rects[] = {
+	{
+		.subdev_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
+		.in_rect.left = 0,
+		.in_rect.top = 0,
+		.in_rect.width = 4056,
+		.in_rect.height = 3040,
+		.out_rect.left = 0,
+		.out_rect.top = 0,
+		.out_rect.width = 4056,
+		.out_rect.height = 3040,
+	},
+	{
+		.subdev_type = CRL_SUBDEV_TYPE_BINNER,
+		.in_rect.left = 0,
+		.in_rect.top = 0,
+		.in_rect.width = 4056,
+		.in_rect.height = 3040,
+		.out_rect.left = 0,
+		.out_rect.top = 0,
+		.out_rect.width = 656,
+		.out_rect.height = 512,
+	}
+};
+
 static struct crl_register_write_rep imx477_pll_1200mbps[] = {
 	/* MIPI Settings */
 	{0x0114, CRL_REG_LEN_08BIT, 0x01}, /* 2-lane Mode */
diff --git a/drivers/media/i2c/crlmodule/crl_imx477_master_configuration.h b/drivers/media/i2c/crlmodule/crl_imx477_master_configuration.h
index 742819a..16efa95 100644
--- a/drivers/media/i2c/crlmodule/crl_imx477_master_configuration.h
+++ b/drivers/media/i2c/crlmodule/crl_imx477_master_configuration.h
@@ -573,6 +573,412 @@ static struct crl_register_write_rep imx477_4056_3040_19MHZ_DOL_3f_master[] = {
 	{0x034F, CRL_REG_LEN_08BIT, 0xE0}, /* Y output size [7:0]  */
 };
 
+static struct crl_register_write_rep imx477_4056_2288_19MHZ_master[] = {
+	/* Frame Horizontal Clock Count */
+	{0x0342, CRL_REG_LEN_08BIT, 0x39}, /* Line length [15:8]  */
+	{0x0343, CRL_REG_LEN_08BIT, 0x14}, /* Line length [7:0]   */
+
+	/* Frame Vertical Clock Count */
+	{0x0340, CRL_REG_LEN_08BIT, 0x20}, /* Frame length [15:8] */
+	{0x0341, CRL_REG_LEN_08BIT, 0x11}, /* Frame length [7:0]  */
+
+	/* Visible Size */
+	/* (0,376) to (4055, 2664) */
+	{0x0344, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start X [12:8] */
+	{0x0345, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start X [7:0]  */
+	{0x0346, CRL_REG_LEN_08BIT, 0x01}, /* Analog cropping start Y [12:8] */
+	{0x0347, CRL_REG_LEN_08BIT, 0x78}, /* Analog cropping start Y [7:0]  */
+	{0x0348, CRL_REG_LEN_08BIT, 0x0F}, /* Analog cropping end X [12:8]   */
+	{0x0349, CRL_REG_LEN_08BIT, 0xD7}, /* Analog cropping end X [7:0]    */
+	{0x034A, CRL_REG_LEN_08BIT, 0x0A}, /* Analog cropping end Y [12:8]   */
+	{0x034B, CRL_REG_LEN_08BIT, 0x68}, /* Analog cropping end Y [7:0]    */
+
+	/* Mode Setting */
+	{0x00E3, CRL_REG_LEN_08BIT, 0x00}, /* DOL-HDR Disable */
+	{0x00E4, CRL_REG_LEN_08BIT, 0x00}, /* DOL Mode: DOL-HDR Disable */
+	{0x0220, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x0221, CRL_REG_LEN_08BIT, 0x11}, /* Undocumented */
+	{0x0381, CRL_REG_LEN_08BIT, 0x01}, /* Num of pixels skipped, even -> odd */
+	{0x0383, CRL_REG_LEN_08BIT, 0x01}, /* Num of pixels skipped, odd -> even */
+	{0x0385, CRL_REG_LEN_08BIT, 0x01}, /* Num of lines skipped, even -> odd  */
+	{0x0387, CRL_REG_LEN_08BIT, 0x01}, /* Num of lines skipped, odd -> even  */
+	{0x0900, CRL_REG_LEN_08BIT, 0x00}, /* Binning mode: Disable */
+	{0x0901, CRL_REG_LEN_08BIT, 0x11}, /* Binning Type for Horizontal */
+	{0x0902, CRL_REG_LEN_08BIT, 0x02}, /* Binning Type for Vertical   */
+	{0x3140, CRL_REG_LEN_08BIT, 0x02}, /* Undocumented */
+	{0x3C00, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x3C01, CRL_REG_LEN_08BIT, 0x03}, /* Undocumented */
+	{0x3C02, CRL_REG_LEN_08BIT, 0xDC}, /* Undocumented */
+	{0x3F0D, CRL_REG_LEN_08BIT, 0x00}, /* AD converter: 10 bit */
+	{0x5748, CRL_REG_LEN_08BIT, 0x07}, /* Undocumented */
+	{0x5749, CRL_REG_LEN_08BIT, 0xFF}, /* Undocumented */
+	{0x574A, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x574B, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x7B75, CRL_REG_LEN_08BIT, 0x0E}, /* Undocumented */
+	{0x7B76, CRL_REG_LEN_08BIT, 0x09}, /* Undocumented */
+	{0x7B77, CRL_REG_LEN_08BIT, 0x0C}, /* Undocumented */
+	{0x7B78, CRL_REG_LEN_08BIT, 0x06}, /* Undocumented */
+	{0x7B79, CRL_REG_LEN_08BIT, 0x3B}, /* Undocumented */
+	{0x7B53, CRL_REG_LEN_08BIT, 0x01}, /* Undocumented */
+	{0x9369, CRL_REG_LEN_08BIT, 0x5A}, /* Undocumented */
+	{0x936B, CRL_REG_LEN_08BIT, 0x55}, /* Undocumented */
+	{0x936D, CRL_REG_LEN_08BIT, 0x28}, /* Undocumented */
+	{0x9304, CRL_REG_LEN_08BIT, 0x03}, /* Undocumented */
+	{0x9305, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9A, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9B, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9C, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9D, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9E, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9F, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0xA2A9, CRL_REG_LEN_08BIT, 0x60}, /* Undocumented */
+	{0xA2B7, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+
+	/* Digital Crop & Scaling */
+	{0x0401, CRL_REG_LEN_08BIT, 0x00}, /* Scaling mode: No Scaling     */
+	{0x0404, CRL_REG_LEN_08BIT, 0x00}, /* Down Scaling Factor M [8]    */
+	{0x0405, CRL_REG_LEN_08BIT, 0x10}, /* Down Scaling Factor M [7:0]  */
+	{0x0408, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from X [12:8]    */
+	{0x0409, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from X [7:0]     */
+	{0x040A, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from Y [12:8]    */
+	{0x040B, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from Y [7:0]     */
+	{0x040C, CRL_REG_LEN_08BIT, 0x0F}, /* Width after cropping [12:8]  */
+	{0x040D, CRL_REG_LEN_08BIT, 0xD8}, /* Width after cropping [7:0]   */
+	{0x040E, CRL_REG_LEN_08BIT, 0x08}, /* Height after cropping [12:8] */
+	{0x040F, CRL_REG_LEN_08BIT, 0xF0}, /* Height after cropping [7:0]  */
+
+	/* Output Crop */
+	{0x034C, CRL_REG_LEN_08BIT, 0x0F}, /* X output size [12:8] */
+	{0x034D, CRL_REG_LEN_08BIT, 0xD8}, /* X output size [7:0]  */
+	{0x034E, CRL_REG_LEN_08BIT, 0x08}, /* Y output size [12:8] */
+	{0x034F, CRL_REG_LEN_08BIT, 0xF0}, /* Y output size [7:0]  */
+};
+
+
+static struct crl_register_write_rep imx477_2832_1632_19MHZ_master[] = {
+	/* Frame Horizontal Clock Count */
+	{0x0342, CRL_REG_LEN_08BIT, 0x39}, /* Line length [15:8]  */
+	{0x0343, CRL_REG_LEN_08BIT, 0x14}, /* Line length [7:0]   */
+
+	/* Frame Vertical Clock Count */
+	{0x0340, CRL_REG_LEN_08BIT, 0x20}, /* Frame length [15:8] */
+	{0x0341, CRL_REG_LEN_08BIT, 0x11}, /* Frame length [7:0]  */
+
+	/* Visible Size */
+	{0x0344, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start X [12:8] */
+	{0x0345, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start X [7:0]  */
+	{0x0346, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start Y [12:8] */
+	{0x0347, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start Y [7:0]  */
+	{0x0348, CRL_REG_LEN_08BIT, 0x0F}, /* Analog cropping end X [12:8]   */
+	{0x0349, CRL_REG_LEN_08BIT, 0xD7}, /* Analog cropping end X [7:0]    */
+	{0x034A, CRL_REG_LEN_08BIT, 0x0B}, /* Analog cropping end Y [12:8]   */
+	{0x034B, CRL_REG_LEN_08BIT, 0xDF}, /* Analog cropping end Y [7:0]    */
+
+	/* Mode Setting */
+	{0x00E3, CRL_REG_LEN_08BIT, 0x00}, /* DOL-HDR Disable */
+	{0x00E4, CRL_REG_LEN_08BIT, 0x00}, /* DOL Mode: DOL-HDR Disable */
+	{0x0220, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x0221, CRL_REG_LEN_08BIT, 0x11}, /* Undocumented */
+	{0x0381, CRL_REG_LEN_08BIT, 0x01}, /* Num of pixels skipped, even -> odd */
+	{0x0383, CRL_REG_LEN_08BIT, 0x01}, /* Num of pixels skipped, odd -> even */
+	{0x0385, CRL_REG_LEN_08BIT, 0x01}, /* Num of lines skipped, even -> odd  */
+	{0x0387, CRL_REG_LEN_08BIT, 0x01}, /* Num of lines skipped, odd -> even  */
+	{0x0900, CRL_REG_LEN_08BIT, 0x00}, /* Binning mode: Disable */
+	{0x0901, CRL_REG_LEN_08BIT, 0x11}, /* Binning Type for Horizontal */
+	{0x0902, CRL_REG_LEN_08BIT, 0x02}, /* Binning Type for Vertical   */
+	{0x3140, CRL_REG_LEN_08BIT, 0x02}, /* Undocumented */
+	{0x3C00, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x3C01, CRL_REG_LEN_08BIT, 0x03}, /* Undocumented */
+	{0x3C02, CRL_REG_LEN_08BIT, 0xDC}, /* Undocumented */
+	{0x3F0D, CRL_REG_LEN_08BIT, 0x00}, /* AD converter: 10 bit */
+	{0x5748, CRL_REG_LEN_08BIT, 0x07}, /* Undocumented */
+	{0x5749, CRL_REG_LEN_08BIT, 0xFF}, /* Undocumented */
+	{0x574A, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x574B, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x7B75, CRL_REG_LEN_08BIT, 0x0E}, /* Undocumented */
+	{0x7B76, CRL_REG_LEN_08BIT, 0x09}, /* Undocumented */
+	{0x7B77, CRL_REG_LEN_08BIT, 0x0C}, /* Undocumented */
+	{0x7B78, CRL_REG_LEN_08BIT, 0x06}, /* Undocumented */
+	{0x7B79, CRL_REG_LEN_08BIT, 0x3B}, /* Undocumented */
+	{0x7B53, CRL_REG_LEN_08BIT, 0x01}, /* Undocumented */
+	{0x9369, CRL_REG_LEN_08BIT, 0x5A}, /* Undocumented */
+	{0x936B, CRL_REG_LEN_08BIT, 0x55}, /* Undocumented */
+	{0x936D, CRL_REG_LEN_08BIT, 0x28}, /* Undocumented */
+	{0x9304, CRL_REG_LEN_08BIT, 0x03}, /* Undocumented */
+	{0x9305, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9A, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9B, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9C, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9D, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9E, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9F, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0xA2A9, CRL_REG_LEN_08BIT, 0x60}, /* Undocumented */
+	{0xA2B7, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+
+	/* Digital Crop & Scaling */
+	/* scale factor 16/22, 3894x2244 to 2832x1632 */
+	{0x0401, CRL_REG_LEN_08BIT, 0x02}, /* Scaling mode: Scaling     */
+	{0x0404, CRL_REG_LEN_08BIT, 0x00}, /* Down Scaling Factor M [8]    */
+	{0x0405, CRL_REG_LEN_08BIT, 0x16}, /* Down Scaling Factor M [7:0]  */
+	{0x0408, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from X [12:8]    */
+	{0x0409, CRL_REG_LEN_08BIT, 0x52}, /* Crop Offset from X [7:0]     */
+	{0x040A, CRL_REG_LEN_08BIT, 0x01}, /* Crop Offset from Y [12:8]    */
+	{0x040B, CRL_REG_LEN_08BIT, 0x8E}, /* Crop Offset from Y [7:0]     */
+	{0x040C, CRL_REG_LEN_08BIT, 0x0F}, /* Width after cropping [12:8]  */
+	{0x040D, CRL_REG_LEN_08BIT, 0x36}, /* Width after cropping [7:0]   */
+	{0x040E, CRL_REG_LEN_08BIT, 0x08}, /* Height after cropping [12:8] */
+	{0x040F, CRL_REG_LEN_08BIT, 0xC4}, /* Height after cropping [7:0]  */
+
+	/* Output Crop */
+	{0x034C, CRL_REG_LEN_08BIT, 0x0B}, /* X output size [12:8] */
+	{0x034D, CRL_REG_LEN_08BIT, 0x10}, /* X output size [7:0]  */
+	{0x034E, CRL_REG_LEN_08BIT, 0x06}, /* Y output size [12:8] */
+	{0x034F, CRL_REG_LEN_08BIT, 0x60}, /* Y output size [7:0]  */
+};
+
+
+static struct crl_register_write_rep imx477_2028_1128_19MHZ_master[] = {
+	/* Frame Horizontal Clock Count */
+	{0x0342, CRL_REG_LEN_08BIT, 0x39}, /* Line length [15:8]  */
+	{0x0343, CRL_REG_LEN_08BIT, 0x14}, /* Line length [7:0]   */
+
+	/* Frame Vertical Clock Count */
+	{0x0340, CRL_REG_LEN_08BIT, 0x20}, /* Frame length [15:8] */
+	{0x0341, CRL_REG_LEN_08BIT, 0x11}, /* Frame length [7:0]  */
+
+	/* Visible Size */
+	{0x0344, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start X [12:8] */
+	{0x0345, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start X [7:0]  */
+	{0x0346, CRL_REG_LEN_08BIT, 0x01}, /* Analog cropping start Y [12:8] */
+	{0x0347, CRL_REG_LEN_08BIT, 0x88}, /* Analog cropping start Y [7:0]  */
+	{0x0348, CRL_REG_LEN_08BIT, 0x0F}, /* Analog cropping end X [12:8]   */
+	{0x0349, CRL_REG_LEN_08BIT, 0xD7}, /* Analog cropping end X [7:0]    */
+	{0x034A, CRL_REG_LEN_08BIT, 0x0A}, /* Analog cropping end Y [12:8]   */
+	{0x034B, CRL_REG_LEN_08BIT, 0x58}, /* Analog cropping end Y [7:0]    */
+
+	/* Mode Setting */
+	{0x00E3, CRL_REG_LEN_08BIT, 0x00}, /* DOL-HDR Disable */
+	{0x00E4, CRL_REG_LEN_08BIT, 0x00}, /* DOL Mode: DOL-HDR Disable */
+	{0x0220, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x0221, CRL_REG_LEN_08BIT, 0x11}, /* Undocumented */
+	{0x0381, CRL_REG_LEN_08BIT, 0x01}, /* Num of pixels skipped, even -> odd */
+	{0x0383, CRL_REG_LEN_08BIT, 0x01}, /* Num of pixels skipped, odd -> even */
+	{0x0385, CRL_REG_LEN_08BIT, 0x01}, /* Num of lines skipped, even -> odd  */
+	{0x0387, CRL_REG_LEN_08BIT, 0x01}, /* Num of lines skipped, odd -> even  */
+	{0x0900, CRL_REG_LEN_08BIT, 0x01}, /* Binning mode: Disable */
+	{0x0901, CRL_REG_LEN_08BIT, 0x22}, /* Binning Type for Horizontal */
+	{0x0902, CRL_REG_LEN_08BIT, 0x02}, /* Binning Type for Vertical   */
+	{0x3140, CRL_REG_LEN_08BIT, 0x02}, /* Undocumented */
+	{0x3C00, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x3C01, CRL_REG_LEN_08BIT, 0x03}, /* Undocumented */
+	{0x3C02, CRL_REG_LEN_08BIT, 0xDC}, /* Undocumented */
+	{0x3F0D, CRL_REG_LEN_08BIT, 0x00}, /* AD converter: 10 bit */
+	{0x5748, CRL_REG_LEN_08BIT, 0x07}, /* Undocumented */
+	{0x5749, CRL_REG_LEN_08BIT, 0xFF}, /* Undocumented */
+	{0x574A, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x574B, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x7B75, CRL_REG_LEN_08BIT, 0x0E}, /* Undocumented */
+	{0x7B76, CRL_REG_LEN_08BIT, 0x09}, /* Undocumented */
+	{0x7B77, CRL_REG_LEN_08BIT, 0x0C}, /* Undocumented */
+	{0x7B78, CRL_REG_LEN_08BIT, 0x06}, /* Undocumented */
+	{0x7B79, CRL_REG_LEN_08BIT, 0x3B}, /* Undocumented */
+	{0x7B53, CRL_REG_LEN_08BIT, 0x01}, /* Undocumented */
+	{0x9369, CRL_REG_LEN_08BIT, 0x5A}, /* Undocumented */
+	{0x936B, CRL_REG_LEN_08BIT, 0x55}, /* Undocumented */
+	{0x936D, CRL_REG_LEN_08BIT, 0x28}, /* Undocumented */
+	{0x9304, CRL_REG_LEN_08BIT, 0x03}, /* Undocumented */
+	{0x9305, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9A, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9B, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9C, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9D, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9E, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9F, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0xA2A9, CRL_REG_LEN_08BIT, 0x60}, /* Undocumented */
+	{0xA2B7, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+
+	/* Digital Crop & Scaling */
+	{0x0401, CRL_REG_LEN_08BIT, 0x00}, /* Scaling mode: No Scaling     */
+	{0x0404, CRL_REG_LEN_08BIT, 0x00}, /* Down Scaling Factor M [8]    */
+	{0x0405, CRL_REG_LEN_08BIT, 0x10}, /* Down Scaling Factor M [7:0]  */
+	{0x0408, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from X [12:8]    */
+	{0x0409, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from X [7:0]     */
+	{0x040A, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from Y [12:8]    */
+	{0x040B, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from Y [7:0]     */
+	{0x040C, CRL_REG_LEN_08BIT, 0x07}, /* Width after cropping [12:8]  */
+	{0x040D, CRL_REG_LEN_08BIT, 0xEC}, /* Width after cropping [7:0]   */
+	{0x040E, CRL_REG_LEN_08BIT, 0x04}, /* Height after cropping [12:8] */
+	{0x040F, CRL_REG_LEN_08BIT, 0x68}, /* Height after cropping [7:0]  */
+
+	/* Output Crop */
+	{0x034C, CRL_REG_LEN_08BIT, 0x07}, /* X output size [12:8] */
+	{0x034D, CRL_REG_LEN_08BIT, 0xEC}, /* X output size [7:0]  */
+	{0x034E, CRL_REG_LEN_08BIT, 0x04}, /* Y output size [12:8] */
+	{0x034F, CRL_REG_LEN_08BIT, 0x68}, /* Y output size [7:0]  */
+};
+
+static struct crl_register_write_rep imx477_1296_768_19MHZ_master[] = {
+	/* Frame Horizontal Clock Count */
+	{0x0342, CRL_REG_LEN_08BIT, 0x39}, /* Line length [15:8]  */
+	{0x0343, CRL_REG_LEN_08BIT, 0x14}, /* Line length [7:0]   */
+
+	/* Frame Vertical Clock Count */
+	{0x0340, CRL_REG_LEN_08BIT, 0x20}, /* Frame length [15:8] */
+	{0x0341, CRL_REG_LEN_08BIT, 0x11}, /* Frame length [7:0]  */
+
+	/* Visible Size */
+	{0x0344, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start X [12:8] */
+	{0x0345, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start X [7:0]  */
+	{0x0346, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start Y [12:8] */
+	{0x0347, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start Y [7:0]  */
+	{0x0348, CRL_REG_LEN_08BIT, 0x0F}, /* Analog cropping end X [12:8]   */
+	{0x0349, CRL_REG_LEN_08BIT, 0xD7}, /* Analog cropping end X [7:0]    */
+	{0x034A, CRL_REG_LEN_08BIT, 0x0B}, /* Analog cropping end Y [12:8]   */
+	{0x034B, CRL_REG_LEN_08BIT, 0xDF}, /* Analog cropping end Y [7:0]    */
+
+	/* Mode Setting */
+	{0x00E3, CRL_REG_LEN_08BIT, 0x00}, /* DOL-HDR Disable */
+	{0x00E4, CRL_REG_LEN_08BIT, 0x00}, /* DOL Mode: DOL-HDR Disable */
+	{0x0220, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x0221, CRL_REG_LEN_08BIT, 0x11}, /* Undocumented */
+	{0x0381, CRL_REG_LEN_08BIT, 0x01}, /* Num of pixels skipped, even -> odd */
+	{0x0383, CRL_REG_LEN_08BIT, 0x01}, /* Num of pixels skipped, odd -> even */
+	{0x0385, CRL_REG_LEN_08BIT, 0x01}, /* Num of lines skipped, even -> odd  */
+	{0x0387, CRL_REG_LEN_08BIT, 0x01}, /* Num of lines skipped, odd -> even  */
+	{0x0900, CRL_REG_LEN_08BIT, 0x00}, /* Binning mode: Disable */
+	{0x0901, CRL_REG_LEN_08BIT, 0x11}, /* Binning Type for Horizontal */
+	{0x0902, CRL_REG_LEN_08BIT, 0x02}, /* Binning Type for Vertical   */
+	{0x3140, CRL_REG_LEN_08BIT, 0x02}, /* Undocumented */
+	{0x3C00, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x3C01, CRL_REG_LEN_08BIT, 0x03}, /* Undocumented */
+	{0x3C02, CRL_REG_LEN_08BIT, 0xDC}, /* Undocumented */
+	{0x3F0D, CRL_REG_LEN_08BIT, 0x00}, /* AD converter: 10 bit */
+	{0x5748, CRL_REG_LEN_08BIT, 0x07}, /* Undocumented */
+	{0x5749, CRL_REG_LEN_08BIT, 0xFF}, /* Undocumented */
+	{0x574A, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x574B, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x7B75, CRL_REG_LEN_08BIT, 0x0E}, /* Undocumented */
+	{0x7B76, CRL_REG_LEN_08BIT, 0x09}, /* Undocumented */
+	{0x7B77, CRL_REG_LEN_08BIT, 0x0C}, /* Undocumented */
+	{0x7B78, CRL_REG_LEN_08BIT, 0x06}, /* Undocumented */
+	{0x7B79, CRL_REG_LEN_08BIT, 0x3B}, /* Undocumented */
+	{0x7B53, CRL_REG_LEN_08BIT, 0x01}, /* Undocumented */
+	{0x9369, CRL_REG_LEN_08BIT, 0x5A}, /* Undocumented */
+	{0x936B, CRL_REG_LEN_08BIT, 0x55}, /* Undocumented */
+	{0x936D, CRL_REG_LEN_08BIT, 0x28}, /* Undocumented */
+	{0x9304, CRL_REG_LEN_08BIT, 0x03}, /* Undocumented */
+	{0x9305, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9A, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9B, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9C, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9D, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9E, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9F, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0xA2A9, CRL_REG_LEN_08BIT, 0x60}, /* Undocumented */
+	{0xA2B7, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+
+	/* Digital Crop & Scaling */
+	/* scale factor 16/50, 4050x2400 to 1296x768 */
+	{0x0401, CRL_REG_LEN_08BIT, 0x02}, /* Scaling mode: Scaling     */
+	{0x0404, CRL_REG_LEN_08BIT, 0x00}, /* Down Scaling Factor M [8]    */
+	{0x0405, CRL_REG_LEN_08BIT, 0x32}, /* Down Scaling Factor M [7:0]  */
+	{0x0408, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from X [12:8]    */
+	{0x0409, CRL_REG_LEN_08BIT, 0x04}, /* Crop Offset from X [7:0]     */
+	{0x040A, CRL_REG_LEN_08BIT, 0x01}, /* Crop Offset from Y [12:8]    */
+	{0x040B, CRL_REG_LEN_08BIT, 0x40}, /* Crop Offset from Y [7:0]     */
+	{0x040C, CRL_REG_LEN_08BIT, 0x0F}, /* Width after cropping [12:8]  */
+	{0x040D, CRL_REG_LEN_08BIT, 0xD2}, /* Width after cropping [7:0]   */
+	{0x040E, CRL_REG_LEN_08BIT, 0x09}, /* Height after cropping [12:8] */
+	{0x040F, CRL_REG_LEN_08BIT, 0x60}, /* Height after cropping [7:0]  */
+
+	/* Output Crop */
+	{0x034C, CRL_REG_LEN_08BIT, 0x05}, /* X output size [12:8] */
+	{0x034D, CRL_REG_LEN_08BIT, 0x10}, /* X output size [7:0]  */
+	{0x034E, CRL_REG_LEN_08BIT, 0x03}, /* Y output size [12:8] */
+	{0x034F, CRL_REG_LEN_08BIT, 0x00}, /* Y output size [7:0]  */
+};
+
+static struct crl_register_write_rep imx477_656_512_19MHZ_master[] = {
+	/* Frame Horizontal Clock Count */
+	{0x0342, CRL_REG_LEN_08BIT, 0x39}, /* Line length [15:8]  */
+	{0x0343, CRL_REG_LEN_08BIT, 0x14}, /* Line length [7:0]   */
+
+	/* Frame Vertical Clock Count */
+	{0x0340, CRL_REG_LEN_08BIT, 0x20}, /* Frame length [15:8] */
+	{0x0341, CRL_REG_LEN_08BIT, 0x11}, /* Frame length [7:0]  */
+
+	/* Visible Size */
+	{0x0344, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start X [12:8] */
+	{0x0345, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start X [7:0]  */
+	{0x0346, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start Y [12:8] */
+	{0x0347, CRL_REG_LEN_08BIT, 0x00}, /* Analog cropping start Y [7:0]  */
+	{0x0348, CRL_REG_LEN_08BIT, 0x0F}, /* Analog cropping end X [12:8]   */
+	{0x0349, CRL_REG_LEN_08BIT, 0xD7}, /* Analog cropping end X [7:0]    */
+	{0x034A, CRL_REG_LEN_08BIT, 0x0B}, /* Analog cropping end Y [12:8]   */
+	{0x034B, CRL_REG_LEN_08BIT, 0xDF}, /* Analog cropping end Y [7:0]    */
+
+	/* Mode Setting */
+	{0x00E3, CRL_REG_LEN_08BIT, 0x00}, /* DOL-HDR Disable */
+	{0x00E4, CRL_REG_LEN_08BIT, 0x00}, /* DOL Mode: DOL-HDR Disable */
+	{0x0220, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x0221, CRL_REG_LEN_08BIT, 0x11}, /* Undocumented */
+	{0x0381, CRL_REG_LEN_08BIT, 0x01}, /* Num of pixels skipped, even -> odd */
+	{0x0383, CRL_REG_LEN_08BIT, 0x01}, /* Num of pixels skipped, odd -> even */
+	{0x0385, CRL_REG_LEN_08BIT, 0x01}, /* Num of lines skipped, even -> odd  */
+	{0x0387, CRL_REG_LEN_08BIT, 0x01}, /* Num of lines skipped, odd -> even  */
+	{0x0900, CRL_REG_LEN_08BIT, 0x00}, /* Binning mode: Disable */
+	{0x0901, CRL_REG_LEN_08BIT, 0x11}, /* Binning Type for Horizontal */
+	{0x0902, CRL_REG_LEN_08BIT, 0x02}, /* Binning Type for Vertical   */
+	{0x3140, CRL_REG_LEN_08BIT, 0x02}, /* Undocumented */
+	{0x3C00, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x3C01, CRL_REG_LEN_08BIT, 0x03}, /* Undocumented */
+	{0x3C02, CRL_REG_LEN_08BIT, 0xDC}, /* Undocumented */
+	{0x3F0D, CRL_REG_LEN_08BIT, 0x00}, /* AD converter: 10 bit */
+	{0x5748, CRL_REG_LEN_08BIT, 0x07}, /* Undocumented */
+	{0x5749, CRL_REG_LEN_08BIT, 0xFF}, /* Undocumented */
+	{0x574A, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x574B, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x7B75, CRL_REG_LEN_08BIT, 0x0E}, /* Undocumented */
+	{0x7B76, CRL_REG_LEN_08BIT, 0x09}, /* Undocumented */
+	{0x7B77, CRL_REG_LEN_08BIT, 0x0C}, /* Undocumented */
+	{0x7B78, CRL_REG_LEN_08BIT, 0x06}, /* Undocumented */
+	{0x7B79, CRL_REG_LEN_08BIT, 0x3B}, /* Undocumented */
+	{0x7B53, CRL_REG_LEN_08BIT, 0x01}, /* Undocumented */
+	{0x9369, CRL_REG_LEN_08BIT, 0x5A}, /* Undocumented */
+	{0x936B, CRL_REG_LEN_08BIT, 0x55}, /* Undocumented */
+	{0x936D, CRL_REG_LEN_08BIT, 0x28}, /* Undocumented */
+	{0x9304, CRL_REG_LEN_08BIT, 0x03}, /* Undocumented */
+	{0x9305, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9A, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9B, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9C, CRL_REG_LEN_08BIT, 0x2F}, /* Undocumented */
+	{0x9E9D, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9E, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0x9E9F, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+	{0xA2A9, CRL_REG_LEN_08BIT, 0x60}, /* Undocumented */
+	{0xA2B7, CRL_REG_LEN_08BIT, 0x00}, /* Undocumented */
+
+	/* Digital Crop & Scaling */
+	/* scale factor 16/95, 3895x3040 to 656x512 */
+	{0x0401, CRL_REG_LEN_08BIT, 0x02}, /* Scaling mode: Scaling     */
+	{0x0404, CRL_REG_LEN_08BIT, 0x00}, /* Down Scaling Factor M [8]    */
+	{0x0405, CRL_REG_LEN_08BIT, 0x5F}, /* Down Scaling Factor M [7:0]  */
+	{0x0408, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from X [12:8]    */
+	{0x0409, CRL_REG_LEN_08BIT, 0x50}, /* Crop Offset from X [7:0]     */
+	{0x040A, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from Y [12:8]    */
+	{0x040B, CRL_REG_LEN_08BIT, 0x00}, /* Crop Offset from Y [7:0]     */
+	{0x040C, CRL_REG_LEN_08BIT, 0x0F}, /* Width after cropping [12:8]  */
+	{0x040D, CRL_REG_LEN_08BIT, 0x37}, /* Width after cropping [7:0]   */
+	{0x040E, CRL_REG_LEN_08BIT, 0x0B}, /* Height after cropping [12:8] */
+	{0x040F, CRL_REG_LEN_08BIT, 0xE0}, /* Height after cropping [7:0]  */
+
+	/* Output Crop */
+	{0x034C, CRL_REG_LEN_08BIT, 0x02}, /* X output size [12:8] */
+	{0x034D, CRL_REG_LEN_08BIT, 0x90}, /* X output size [7:0]  */
+	{0x034E, CRL_REG_LEN_08BIT, 0x02}, /* Y output size [12:8] */
+	{0x034F, CRL_REG_LEN_08BIT, 0x00}, /* Y output size [7:0]  */
+};
+
 static struct crl_mode_rep imx477_modes_master[] = {
 	{
 		.sd_rects_items = ARRAY_SIZE(imx477_4056_3040_rects),
@@ -619,6 +1025,81 @@ static struct crl_mode_rep imx477_modes_master[] = {
 		.mode_regs_items = ARRAY_SIZE(imx477_4056_3040_19MHZ_DOL_3f_master),
 		.mode_regs = imx477_4056_3040_19MHZ_DOL_3f_master,
 	},
+	{
+		.sd_rects_items = ARRAY_SIZE(imx477_4056_2288_rects),
+		.sd_rects = imx477_4056_2288_rects,
+		.binn_hor = 1,
+		.binn_vert = 1,
+		.scale_m = 1,
+		.width = 4056,
+		.height = 2288,
+		.min_llp = 14612,
+		.min_fll = 8209,
+		.comp_items = 0,
+		.ctrl_data = 0,
+		.mode_regs_items = ARRAY_SIZE(imx477_4056_2288_19MHZ_master),
+		.mode_regs = imx477_4056_2288_19MHZ_master,
+	},
+	{
+		.sd_rects_items = ARRAY_SIZE(imx477_2832_1632_rects),
+		.sd_rects = imx477_2832_1632_rects,
+		.binn_hor = 1,
+		.binn_vert = 1,
+		.scale_m = 1,
+		.width = 2832,
+		.height = 1632,
+		.min_llp = 14612,
+		.min_fll = 8209,
+		.comp_items = 0,
+		.ctrl_data = 0,
+		.mode_regs_items = ARRAY_SIZE(imx477_2832_1632_19MHZ_master),
+		.mode_regs = imx477_2832_1632_19MHZ_master,
+	},
+	{
+		.sd_rects_items = ARRAY_SIZE(imx477_2028_1128_rects),
+		.sd_rects = imx477_2028_1128_rects,
+		.binn_hor = 1,
+		.binn_vert = 1,
+		.scale_m = 1,
+		.width = 2028,
+		.height = 1128,
+		.min_llp = 14612,
+		.min_fll = 8209,
+		.comp_items = 0,
+		.ctrl_data = 0,
+		.mode_regs_items = ARRAY_SIZE(imx477_2028_1128_19MHZ_master),
+		.mode_regs = imx477_2028_1128_19MHZ_master,
+	},
+	{
+		.sd_rects_items = ARRAY_SIZE(imx477_1296_768_rects),
+		.sd_rects = imx477_1296_768_rects,
+		.binn_hor = 1,
+		.binn_vert = 1,
+		.scale_m = 1,
+		.width = 1296,
+		.height = 768,
+		.min_llp = 14612,
+		.min_fll = 8209,
+		.comp_items = 0,
+		.ctrl_data = 0,
+		.mode_regs_items = ARRAY_SIZE(imx477_1296_768_19MHZ_master),
+		.mode_regs = imx477_1296_768_19MHZ_master,
+	},
+	{
+		.sd_rects_items = ARRAY_SIZE(imx477_656_512_rects),
+		.sd_rects = imx477_656_512_rects,
+		.binn_hor = 1,
+		.binn_vert = 1,
+		.scale_m = 1,
+		.width = 656,
+		.height = 512,
+		.min_llp = 14612,
+		.min_fll = 8209,
+		.comp_items = 0,
+		.ctrl_data = 0,
+		.mode_regs_items = ARRAY_SIZE(imx477_656_512_19MHZ_master),
+		.mode_regs = imx477_656_512_19MHZ_master,
+	},
 };
 
 static struct crl_flip_data imx477_flip_configurations_master[] = {
-- 
2.7.4

