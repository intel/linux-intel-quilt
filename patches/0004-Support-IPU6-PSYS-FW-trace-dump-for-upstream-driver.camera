From 27e2a54f85a843519f2157f153d18f46d6f98b46 Mon Sep 17 00:00:00 2001
From: hepengpx <pengpengx.he@intel.com>
Date: Fri, 25 Apr 2025 09:44:01 +0800
Subject: [PATCH 4/7] Support IPU6 PSYS FW trace dump for upstream driver

[media][pci]Support IPU6 PSYS FW trace dump for upstream driver
Signed-off-by: hepengpx <pengpengx.he@intel.com>
---
 drivers/media/pci/intel/ipu6/ipu6-trace.c    |  6 +++
 drivers/media/pci/intel/ipu6/ipu6-trace.h    |  1 +
 drivers/media/pci/intel/ipu6/psys/ipu-psys.c | 44 +++++++++++++++++++-
 3 files changed, 50 insertions(+), 1 deletion(-)

diff --git a/drivers/media/pci/intel/ipu6/ipu6-trace.c b/drivers/media/pci/intel/ipu6/ipu6-trace.c
index adcee205ad959..077f140921cb8 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-trace.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-trace.c
@@ -891,6 +891,12 @@ int ipu_trace_buffer_dma_handle(struct device *dev, dma_addr_t *dma_handle)
 }
 EXPORT_SYMBOL_GPL(ipu_trace_buffer_dma_handle);
 
+bool is_ipu_trace_enable(void)
+{
+	return ipu_trace_enable;
+}
+EXPORT_SYMBOL_GPL(is_ipu_trace_enable);
+
 MODULE_AUTHOR("Samu Onkalo <samu.onkalo@intel.com>");
 MODULE_LICENSE("GPL");
 MODULE_DESCRIPTION("Intel ipu trace support");
diff --git a/drivers/media/pci/intel/ipu6/ipu6-trace.h b/drivers/media/pci/intel/ipu6/ipu6-trace.h
index f66d8898b1db3..fe89d1b203b65 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-trace.h
+++ b/drivers/media/pci/intel/ipu6/ipu6-trace.h
@@ -144,4 +144,5 @@ void ipu_trace_restore(struct device *dev);
 void ipu_trace_uninit(struct device *dev);
 void ipu_trace_stop(struct device *dev);
 int ipu_trace_buffer_dma_handle(struct device *dev, dma_addr_t *dma_handle);
+bool is_ipu_trace_enable(void);
 #endif
diff --git a/drivers/media/pci/intel/ipu6/psys/ipu-psys.c b/drivers/media/pci/intel/ipu6/psys/ipu-psys.c
index 9f367496cbd0d..e8638a918215f 100644
--- a/drivers/media/pci/intel/ipu6/psys/ipu-psys.c
+++ b/drivers/media/pci/intel/ipu6/psys/ipu-psys.c
@@ -31,6 +31,7 @@
 #include "ipu-psys.h"
 #include "ipu6-platform-regs.h"
 #include "ipu6-fw-com.h"
+#include "ipu6-trace.h"
 
 static bool async_fw_init;
 module_param(async_fw_init, bool, 0664);
@@ -1201,6 +1202,8 @@ static int ipu_psys_sched_cmd(void *ptr)
 	return 0;
 }
 
+#include "../ipu6-trace.h"
+
 static void start_sp(struct ipu6_bus_device *adev)
 {
 	struct ipu_psys *psys = ipu6_bus_get_drvdata(adev);
@@ -1211,7 +1214,7 @@ static void start_sp(struct ipu6_bus_device *adev)
 	val |= IPU6_PSYS_SPC_STATUS_START |
 	    IPU6_PSYS_SPC_STATUS_RUN |
 	    IPU6_PSYS_SPC_STATUS_CTRL_ICACHE_INVALIDATE;
-	val |= psys->icache_prefetch_sp ?
+	val |= (psys->icache_prefetch_sp || is_ipu_trace_enable()) ?
 	    IPU6_PSYS_SPC_STATUS_ICACHE_PREFETCH : 0;
 	writel(val, spc_regs_base + IPU6_PSYS_REG_SPC_STATUS_CTRL);
 }
@@ -1304,6 +1307,40 @@ static void run_fw_init_work(struct work_struct *work)
 	}
 }
 
+struct ipu_trace_block psys_trace_blocks[] = {
+	{
+		.offset = IPU_TRACE_REG_PS_TRACE_UNIT_BASE,
+		.type = IPU_TRACE_BLOCK_TUN,
+	},
+	{
+		.offset = IPU_TRACE_REG_PS_SPC_EVQ_BASE,
+		.type = IPU_TRACE_BLOCK_TM,
+	},
+	{
+		.offset = IPU_TRACE_REG_PS_SPP0_EVQ_BASE,
+		.type = IPU_TRACE_BLOCK_TM,
+	},
+	{
+		.offset = IPU_TRACE_REG_PS_SPC_GPC_BASE,
+		.type = IPU_TRACE_BLOCK_GPC,
+	},
+	{
+		.offset = IPU_TRACE_REG_PS_SPP0_GPC_BASE,
+		.type = IPU_TRACE_BLOCK_GPC,
+	},
+	{
+		.offset = IPU_TRACE_REG_PS_MMU_GPC_BASE,
+		.type = IPU_TRACE_BLOCK_GPC,
+	},
+	{
+		.offset = IPU_TRACE_REG_PS_GPREG_TRACE_TIMER_RST_N,
+		.type = IPU_TRACE_TIMER_RST,
+	},
+	{
+		.type = IPU_TRACE_BLOCK_END,
+	}
+};
+
 static int ipu6_psys_probe(struct auxiliary_device *auxdev,
 			   const struct auxiliary_device_id *auxdev_id)
 {
@@ -1442,6 +1479,9 @@ static int ipu6_psys_probe(struct auxiliary_device *auxdev,
 	strscpy(psys->caps.dev_model, IPU6_MEDIA_DEV_MODEL_NAME,
 		sizeof(psys->caps.dev_model));
 
+	ipu_trace_init(adev->isp, psys->pdata->base, &auxdev->dev,
+		psys_trace_blocks);
+
 	mutex_unlock(&ipu_psys_mutex);
 
 	dev_info(dev, "psys probe minor: %d\n", minor);
@@ -1503,6 +1543,8 @@ static void ipu6_psys_remove(struct auxiliary_device *auxdev)
 
 	clear_bit(MINOR(psys->cdev.dev), ipu_psys_devices);
 
+	ipu_trace_uninit(&auxdev->dev);
+
 	mutex_unlock(&ipu_psys_mutex);
 
 	mutex_destroy(&psys->mutex);
-- 
2.34.1

