From 2fbe68dff2e36649bac569a42e98eab4f7afb5ec Mon Sep 17 00:00:00 2001
From: Voon Weifeng <weifeng.voon@intel.com>
Date: Fri, 23 Oct 2020 16:55:00 +0800
Subject: [PATCH 02/13] REVERTME: net: stmmac: EHL PCH MSI arbitration WA only
 for A0,A1,B0

For EHL, do the WA for DMA INTM=0 mode and use napi TXRX for only EHL
A0, A1 and B0 by checking the PCI revision ID.

Signed-off-by: Voon Weifeng <weifeng.voon@intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c
index accb0ed9f700..bd60ce9adade 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c
@@ -23,6 +23,11 @@
 #define CPU_STEPPING	boot_cpu_data.x86_stepping
 #endif
 
+/* EHL SoC revision ID */
+#define EHL_PCI_PCH_A0	0x00
+#define EHL_PCI_PCH_A1	0x01
+#define EHL_PCI_PCH_B0	0x10
+
 /*
  * This struct is used to associate PCI Function of MAC controller on a board,
  * discovered via DMI, with the address of PHY connected to the MAC. The
@@ -355,7 +360,10 @@ static int ehl_sgmii_data(struct pci_dev *pdev,
 	/* Set PTP clock rate for EHL as 200MHz */
 	plat->clk_ptp_rate = 204860000;
 
-	plat->dma_cfg->pch_intr_wa = 1;
+	if (pdev->revision == EHL_PCI_PCH_A0 ||
+	    pdev->revision == EHL_PCI_PCH_A1 ||
+	    pdev->revision == EHL_PCI_PCH_B0)
+		plat->dma_cfg->pch_intr_wa = 1;
 
 	return ehl_common_data(pdev, plat);
 }
@@ -373,7 +381,10 @@ static int ehl_rgmii_data(struct pci_dev *pdev,
 	/* Set PTP clock rate for EHL as 200MHz */
 	plat->clk_ptp_rate = 200000000;
 
-	plat->dma_cfg->pch_intr_wa = 1;
+	if (pdev->revision == EHL_PCI_PCH_A0 ||
+	    pdev->revision == EHL_PCI_PCH_A1 ||
+	    pdev->revision == EHL_PCI_PCH_B0)
+		plat->dma_cfg->pch_intr_wa = 1;
 
 	return ehl_common_data(pdev, plat);
 }
-- 
2.17.1

