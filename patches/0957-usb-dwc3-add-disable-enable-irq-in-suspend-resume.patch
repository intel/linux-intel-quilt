From 170eac35f17e063935d772907a95ed8f1c58e5a1 Mon Sep 17 00:00:00 2001
From: "Sun, Yi J" <yi.j.sun@intel.com>
Date: Fri, 20 Jul 2018 05:49:19 +0800
Subject: [PATCH 0957/1214] usb: dwc3: add disable/enable irq in suspend/resume

We sometimes met dwc3 endpoint stopped by unwanted irq during suspend,
which caused dwc3 ep can't be started with error "No Resource".

Here, we add synchronize_irq before suspend, waits for any pending IRQ
handlers for this interrupt to complete. And enables the irq line in resume.

Change-Id: I83698d74af22ed6e6c30b357371f046e39e17ffe
Tracked-On: PKT-1653
Signed-off-by: Sun, Yi J <yi.j.sun@intel.com>
Signed-off-by: he, bo <bo.he@intel.com>
---
 drivers/usb/dwc3/core.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index 60d0826..f117438 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -1600,6 +1600,7 @@ static int dwc3_suspend_common(struct dwc3 *dwc, pm_message_t msg)
 		dwc3_gadget_suspend(dwc);
 		spin_unlock_irqrestore(&dwc->lock, flags);
 		synchronize_irq(dwc->irq_gadget);
+		disable_irq(dwc->irq_gadget);
 		dwc3_core_exit(dwc);
 		break;
 	case DWC3_GCTL_PRTCAP_HOST:
@@ -1662,6 +1663,7 @@ static int dwc3_resume_common(struct dwc3 *dwc, pm_message_t msg)
 		spin_lock_irqsave(&dwc->lock, flags);
 		dwc3_gadget_resume(dwc);
 		spin_unlock_irqrestore(&dwc->lock, flags);
+		enable_irq(dwc->irq_gadget);
 		break;
 	case DWC3_GCTL_PRTCAP_HOST:
 		if (!PMSG_IS_AUTO(msg)) {
-- 
2.7.4

