From 2c53f96460b4e4367daeb72ec286d39e62456dcf Mon Sep 17 00:00:00 2001
From: Ong Hock Yu <ong.hock.yu@intel.com>
Date: Wed, 5 Sep 2018 02:02:55 +0800
Subject: [PATCH 2104/2313] media: intel-ipu4: [VIRT] Fxied failed to stream
 close properly issue.

The wrong stream id was passed to BE caused the stream
failed to close properly. Also added step to complete
any pending poll request after stream is closed.

Change-Id: Id3a2098d421b358dc0478405a1fc1f8b04ad7f06
Signed-off-by: Ong Hock Yu <ong.hock.yu@intel.com>
---
 .../pci/intel/virtio/intel-ipu4-para-virt-drv.c      | 20 ++++++++++----------
 .../pci/intel/virtio/intel-ipu4-virtio-be-stream.c   |  7 ++++---
 2 files changed, 14 insertions(+), 13 deletions(-)

diff --git a/drivers/media/pci/intel/virtio/intel-ipu4-para-virt-drv.c b/drivers/media/pci/intel/virtio/intel-ipu4-para-virt-drv.c
index fda27f4..3f6d541 100644
--- a/drivers/media/pci/intel/virtio/intel-ipu4-para-virt-drv.c
+++ b/drivers/media/pci/intel/virtio/intel-ipu4-para-virt-drv.c
@@ -428,13 +428,13 @@ void buf_stream_cancel(struct virtual_stream *vstream)
 	struct ici_frame_buf_wrapper *buf;
 	struct ici_frame_buf_wrapper *next_buf;
 
-	list_for_each_entry_safe(buf, next_buf, &buf_list->getbuf_list, node) {
-		list_del(&buf->node);
-		unmap_buf(buf);
+	list_for_each_entry_safe(buf, next_buf,
+			&buf_list->getbuf_list, uos_node) {
+		list_del(&buf->uos_node);
 	}
-	list_for_each_entry_safe(buf, next_buf, &buf_list->putbuf_list, node) {
-		list_del(&buf->node);
-		unmap_buf(buf);
+	list_for_each_entry_safe(buf, next_buf,
+			&buf_list->putbuf_list, uos_node) {
+		list_del(&buf->uos_node);
 	}
 }
 
@@ -529,7 +529,7 @@ static int virt_isys_stream_off(struct file *file, void *fh)
 	}
 	kfree(req);
 
-//	buf_stream_cancel(vstream);
+	buf_stream_cancel(vstream);
 
 	return rval;
 }
@@ -659,7 +659,7 @@ static int virt_stream_fop_open(struct inode *inode, struct file *file)
 	struct ipu4_virtio_ctx *fe_ctx = vstream->ctx;
 	int rval = 0;
 	int op[3];
-	dev_info(&strm_dev->dev, "virtual stream open\n");
+	pr_debug("%s %d", __func__, vstream->virt_dev_id);
 	get_device(&strm_dev->dev);
 
 	file->private_data = strm_dev;
@@ -702,14 +702,14 @@ static int virt_stream_fop_release(struct inode *inode, struct file *file)
 	struct ipu4_virtio_ctx *fe_ctx = vstream->ctx;
 	int rval = 0;
 	int op[2];
-	dev_info(&strm_dev->dev, "IPU virtual stream close\n");
+	pr_debug("%s %d", __func__, vstream->virt_dev_id);
 	put_device(&strm_dev->dev);
 
 	req = kcalloc(1, sizeof(*req), GFP_KERNEL);
 	if (!req)
 		return -ENOMEM;
 
-	op[0] = strm_dev->virt_dev_id;
+	op[0] = vstream->virt_dev_id;
 	op[1] = 0;
 
 	intel_ipu4_virtio_create_req(req, IPU4_CMD_DEVICE_CLOSE, &op[0]);
diff --git a/drivers/media/pci/intel/virtio/intel-ipu4-virtio-be-stream.c b/drivers/media/pci/intel/virtio/intel-ipu4-virtio-be-stream.c
index 5f8b9ac..ba98bc2 100644
--- a/drivers/media/pci/intel/virtio/intel-ipu4-virtio-be-stream.c
+++ b/drivers/media/pci/intel/virtio/intel-ipu4-virtio-be-stream.c
@@ -344,13 +344,14 @@ int process_stream_off(int domid, struct ipu4_virtio_req *req)
 		return -1;
 	}
 
-	as = dev_to_stream(strm_dev);
-	as->frame_done_notify_queue = NULL;
-
 	err = strm_dev->ipu_ioctl_ops->ici_stream_off(sn->f, strm_dev);
 
 	if (err)
 		pr_err("process_stream_off: stream off failed\n");
 
+	as = dev_to_stream(strm_dev);
+	as->frame_done_notify_queue();
+	as->frame_done_notify_queue = NULL;
+
 	return 0;
 }
-- 
2.7.4

