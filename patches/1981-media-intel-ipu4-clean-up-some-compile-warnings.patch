From a26b74ce83ac956668e3e402a0b60fca8f4df9e8 Mon Sep 17 00:00:00 2001
From: Ding Yunliang <yunliang.ding@intel.com>
Date: Wed, 13 Jun 2018 09:50:52 +0800
Subject: [PATCH 1981/2367] media: intel-ipu4: clean up some compile warnings
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Message for Open Source:
Fixed some warings while compiling with make W=1
"ipu-cpd.c:204:31:warning variable ‘hdr_sz’ set but not used
ipu-fw-isys.c:83:19: warning ‘send_msg_types’ defined but not used
ipu4-isys-isa.c:103:1: warning no previous prototype for
‘isa_config_try_fmt_vid_out_mplane’ [-Wmissing-prototypes]
ipu-psys-compat32.c:159:6: warning no previous prototype for
‘ipu_psys_compat_ioctl32’ [-Wmissing-prototypes]
ipu-wrapper.c:83:6: warning no previous prototype for
‘vied_subsystem_store_32’ [-Wmissing-prototypes]
libcsspsys2600.c:441:5: warning no previous prototype for
‘ipu_fw_psys_ppg_set_buffer_set’ [-Wmissing-prototypes]
..."

Message for Internal:
[Issue/Feature] Compile has warnings.
[Root Cause/Changes]
Remove some variables that are not used, add some header files from
css code, the ipu-wrapper.c needs this to declare.

Change-Id: Idf46b6cea1508297c29c45e682329d9a1627391b
Tracked-On: #JICCCN-228
Signed-off-by: Ding Yunliang <yunliang.ding@intel.com>
Signed-off-by: Meng Wei <wei.meng@intel.com>
---
 drivers/media/pci/intel/ipu-cpd.c                  |  5 +-
 drivers/media/pci/intel/ipu-fw-isys.c              |  2 +-
 drivers/media/pci/intel/ipu-isys-subdev.c          | 13 -----
 drivers/media/pci/intel/ipu-psys-compat32.c        |  2 +
 drivers/media/pci/intel/ipu-wrapper.c              | 67 ++++++++++++----------
 .../ipu4/ipu4-css/lib2600psys/libcsspsys2600.c     | 39 -------------
 drivers/media/pci/intel/ipu4/ipu4-isys-isa.c       |  4 +-
 .../ipu4/ipu4p-css/lib2600psys/libcsspsys2600.c    | 39 -------------
 8 files changed, 42 insertions(+), 129 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-cpd.c b/drivers/media/pci/intel/ipu-cpd.c
index eb9524e..602ca15 100644
--- a/drivers/media/pci/intel/ipu-cpd.c
+++ b/drivers/media/pci/intel/ipu-cpd.c
@@ -194,15 +194,12 @@ void *ipu_cpd_create_pkg_dir(struct ipu_bus_device *adev,
 			     dma_addr_t *dma_addr, unsigned int *pkg_dir_size)
 {
 	struct ipu_device *isp = adev->isp;
-	const struct ipu_cpd_hdr *hdr = src;
 	const struct ipu_cpd_ent *ent, *man_ent, *met_ent;
 	u64 *pkg_dir;
-	unsigned int man_sz, met_sz, hdr_sz;
+	unsigned int man_sz, met_sz;
 	void *pkg_dir_pos;
 	int ret;
 
-	hdr_sz = hdr->hdr_len;
-
 	man_ent = ipu_cpd_get_manifest(src);
 	man_sz = man_ent->len;
 
diff --git a/drivers/media/pci/intel/ipu-fw-isys.c b/drivers/media/pci/intel/ipu-fw-isys.c
index e109ca5..e42e9db 100644
--- a/drivers/media/pci/intel/ipu-fw-isys.c
+++ b/drivers/media/pci/intel/ipu-fw-isys.c
@@ -80,6 +80,7 @@ extracted_bits_per_pixel_per_mipi_data_type[N_IPU_FW_ISYS_MIPI_DATA_TYPE] = {
 	IPU_FW_UNSUPPORTED_DATA_TYPE	/* [0x3F] */
 };
 
+#ifndef CONFIG_VIDEO_INTEL_IPU_FW_LIB
 static const char send_msg_types[N_IPU_FW_ISYS_SEND_TYPE][32] = {
 	"STREAM_OPEN",
 	"STREAM_START",
@@ -90,7 +91,6 @@ static const char send_msg_types[N_IPU_FW_ISYS_SEND_TYPE][32] = {
 	"STREAM_CLOSE"
 };
 
-#ifndef CONFIG_VIDEO_INTEL_IPU_FW_LIB
 static int handle_proxy_response(struct ipu_isys *isys, unsigned int req_id)
 {
 	struct ipu_fw_isys_proxy_resp_info_abi *resp;
diff --git a/drivers/media/pci/intel/ipu-isys-subdev.c b/drivers/media/pci/intel/ipu-isys-subdev.c
index 7d81ecc..b73b532 100644
--- a/drivers/media/pci/intel/ipu-isys-subdev.c
+++ b/drivers/media/pci/intel/ipu-isys-subdev.c
@@ -127,19 +127,6 @@ enum ipu_isys_subdev_pixelorder ipu_isys_subdev_get_pixelorder(u32 code)
 	}
 }
 
-unsigned int ipu_isys_get_compression_scheme(u32 code)
-{
-	switch (code) {
-	case MEDIA_BUS_FMT_SBGGR10_DPCM8_1X8:
-	case MEDIA_BUS_FMT_SGBRG10_DPCM8_1X8:
-	case MEDIA_BUS_FMT_SGRBG10_DPCM8_1X8:
-	case MEDIA_BUS_FMT_SRGGB10_DPCM8_1X8:
-		return 3;
-	default:
-		return 0;
-	}
-}
-
 u32 ipu_isys_subdev_code_to_uncompressed(u32 sink_code)
 {
 	switch (sink_code) {
diff --git a/drivers/media/pci/intel/ipu-psys-compat32.c b/drivers/media/pci/intel/ipu-psys-compat32.c
index d06e40f..ab7f94d 100644
--- a/drivers/media/pci/intel/ipu-psys-compat32.c
+++ b/drivers/media/pci/intel/ipu-psys-compat32.c
@@ -7,6 +7,8 @@
 
 #include <uapi/linux/ipu-psys.h>
 
+#include "ipu-psys.h"
+
 static long native_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 {
 	long ret = -ENOTTY;
diff --git a/drivers/media/pci/intel/ipu-wrapper.c b/drivers/media/pci/intel/ipu-wrapper.c
index 6fff729..456f82c 100644
--- a/drivers/media/pci/intel/ipu-wrapper.c
+++ b/drivers/media/pci/intel/ipu-wrapper.c
@@ -14,6 +14,10 @@
 #include "ipu-dma.h"
 #include "ipu-mmu.h"
 #include "ipu-wrapper.h"
+#include "vied_subsystem_access.h"
+#include "vied_subsystem_access_initialization.h"
+#include "shared_memory_map.h"
+#include "shared_memory_access.h"
 
 struct wrapper_base {
 	void __iomem *sys_base;
@@ -25,8 +29,8 @@ struct wrapper_base {
 	struct device *dev;
 };
 
-struct wrapper_base isys;
-struct wrapper_base psys;
+static struct wrapper_base isys;
+static struct wrapper_base psys;
 
 struct my_css_memory_buffer_item {
 	struct list_head list;
@@ -80,22 +84,22 @@ static void *host_addr(int ssid, u32 addr)
 	return NULL;
 }
 
-void vied_subsystem_store_32(int ssid, u32 addr, u32 data)
+void vied_subsystem_store_32(unsigned int ssid, u32 addr, u32 data)
 {
 	writel(data, host_addr(ssid, addr));
 }
 
-void vied_subsystem_store_16(int ssid, u32 addr, u16 data)
+void vied_subsystem_store_16(unsigned int ssid, u32 addr, u16 data)
 {
 	writew(data, host_addr(ssid, addr));
 }
 
-void vied_subsystem_store_8(int ssid, u32 addr, u8 data)
+void vied_subsystem_store_8(unsigned int ssid, u32 addr, u8 data)
 {
 	writeb(data, host_addr(ssid, addr));
 }
 
-void vied_subsystem_store(int ssid,
+void vied_subsystem_store(unsigned int ssid,
 			  u32 addr, const void *data, unsigned int size)
 {
 	void *dst = host_addr(ssid, addr);
@@ -115,22 +119,23 @@ void vied_subsystem_store(int ssid,
 		writeb(*(u8 *) data, dst);
 }
 
-u32 vied_subsystem_load_32(int ssid, u32 addr)
+u32 vied_subsystem_load_32(unsigned int ssid, u32 addr)
 {
 	return readl(host_addr(ssid, addr));
 }
 
-u16 vied_subsystem_load_16(int ssid, u32 addr)
+u16 vied_subsystem_load_16(unsigned int ssid, u32 addr)
 {
 	return readw(host_addr(ssid, addr));
 }
 
-u8 vied_subsystem_load_8(int ssid, u32 addr)
+u8 vied_subsystem_load_8(unsigned int ssid, u32 addr)
 {
 	return readb(host_addr(ssid, addr));
 }
 
-void vied_subsystem_load(int ssid, u32 addr, void *data, unsigned int size)
+void vied_subsystem_load(unsigned int ssid, u32 addr,
+			 void *data, unsigned int size)
 {
 	void *src = host_addr(ssid, addr);
 
@@ -151,7 +156,7 @@ void vied_subsystem_load(int ssid, u32 addr, void *data, unsigned int size)
 /*
  * Initialize base address for subsystem
  */
-void vied_subsystem_access_initialize(int system)
+void vied_subsystem_access_initialize(unsigned int system)
 {
 }
 
@@ -167,7 +172,7 @@ void vied_subsystem_access_initialize(int system)
  * \param memory_size: size of ddr memory in bytes
  * \param ps: size of page in bytes (for instance 4096)
  */
-int shared_memory_allocation_initialize(int mmid, u64 host_ddr_addr,
+int shared_memory_allocation_initialize(unsigned int mmid, u64 host_ddr_addr,
 					size_t memory_size, size_t ps)
 {
 	return 0;
@@ -177,7 +182,7 @@ int shared_memory_allocation_initialize(int mmid, u64 host_ddr_addr,
  * \brief De-initialize the shared memory interface administration on the host.
  *
  */
-void shared_memory_allocation_uninitialize(int mmid)
+void shared_memory_allocation_uninitialize(unsigned int mmid)
 {
 }
 
@@ -191,9 +196,10 @@ void shared_memory_allocation_uninitialize(int mmid)
  * \param inv_tlb: invalidate tbl
  * \param sbt: set l1 base address
  */
-int shared_memory_map_initialize(int ssid, int mmid, size_t mmu_ps,
-				 size_t mmu_pnrs, u64 ddr_addr,
-				 int inv_tlb, int sbt)
+int shared_memory_map_initialize(unsigned int ssid, unsigned int mmid,
+				 size_t mmu_ps, size_t mmu_pnrs, u64 ddr_addr,
+				 shared_memory_invalidate_mmu_tlb inv_tlb,
+				 shared_memory_set_page_table_base_address sbt)
 {
 	return 0;
 }
@@ -201,7 +207,7 @@ int shared_memory_map_initialize(int ssid, int mmid, size_t mmu_ps,
 /**
  * \brief De-initialize the shared memory interface administration on the host.
  */
-void shared_memory_map_uninitialize(int ssid, int mmid)
+void shared_memory_map_uninitialize(unsigned int ssid, unsigned int mmid)
 {
 }
 
@@ -211,7 +217,7 @@ static u8 alloc_cookie;
  * \brief Allocate (DDR) shared memory space and return a host virtual address.
  * \Returns NULL when insufficient memory available
  */
-u64 shared_memory_alloc(int mmid, size_t bytes)
+u64 shared_memory_alloc(unsigned int mmid, size_t bytes)
 {
 	struct wrapper_base *mine = get_mem_sub_system(mmid);
 	struct my_css_memory_buffer_item *buf;
@@ -254,7 +260,7 @@ u64 shared_memory_alloc(int mmid, size_t bytes)
 /**
  * \brief Free (DDR) shared memory space.
  */
-void shared_memory_free(int mmid, u64 addr)
+void shared_memory_free(unsigned int mmid, u64 addr)
 {
 	struct wrapper_base *mine = get_mem_sub_system(mmid);
 	struct my_css_memory_buffer_item *buf = NULL;
@@ -294,7 +300,7 @@ void shared_memory_free(int mmid, u64 addr)
  * \brief Convert a host virtual address to a CSS virtual address and
  * \update the MMU.
  */
-u32 shared_memory_map(int ssid, int mmid, u64 addr)
+u32 shared_memory_map(unsigned int ssid, unsigned int mmid, u64 addr)
 {
 	struct wrapper_base *mine = get_mem_sub_system(mmid);
 	struct my_css_memory_buffer_item *buf = NULL;
@@ -321,7 +327,7 @@ u32 shared_memory_map(int ssid, int mmid, u64 addr)
 /**
  * \brief Free a CSS virtual address and update the MMU.
  */
-void shared_memory_unmap(int ssid, int mmid, u32 addr)
+void shared_memory_unmap(unsigned int ssid, unsigned int mmid, u32 addr)
 {
 }
 
@@ -329,7 +335,7 @@ void shared_memory_unmap(int ssid, int mmid, u32 addr)
  * \brief Store a byte into (DDR) shared memory space using a host
  * \virtual address
  */
-void shared_memory_store_8(int mmid, u64 addr, u8 data)
+void shared_memory_store_8(unsigned int mmid, u64 addr, u8 data)
 {
 	dev_dbg(get_mem_sub_system(mmid)->dev,
 		"access: %s: Enter addr = 0x%llx data = 0x%x\n",
@@ -344,7 +350,7 @@ void shared_memory_store_8(int mmid, u64 addr, u8 data)
  * \brief Store a 16-bit word into (DDR) shared memory space using a host
  * \virtual address
  */
-void shared_memory_store_16(int mmid, u64 addr, u16 data)
+void shared_memory_store_16(unsigned int mmid, u64 addr, u16 data)
 {
 	dev_dbg(get_mem_sub_system(mmid)->dev,
 		"access: %s: Enter addr = 0x%llx data = 0x%x\n",
@@ -359,7 +365,7 @@ void shared_memory_store_16(int mmid, u64 addr, u16 data)
  * \brief Store a 32-bit word into (DDR) shared memory space using a host
  * \virtual address
  */
-void shared_memory_store_32(int mmid, u64 addr, u32 data)
+void shared_memory_store_32(unsigned int mmid, u64 addr, u32 data)
 {
 	dev_dbg(get_mem_sub_system(mmid)->dev,
 		"access: %s: Enter addr = 0x%llx data = 0x%x\n",
@@ -374,7 +380,8 @@ void shared_memory_store_32(int mmid, u64 addr, u32 data)
  * \brief Store a number of bytes into (DDR) shared memory space using a host
  * \virtual address
  */
-void shared_memory_store(int mmid, u64 addr, const void *data, size_t bytes)
+void shared_memory_store(unsigned int mmid, u64 addr, const void *data,
+			 size_t bytes)
 {
 	dev_dbg(get_mem_sub_system(mmid)->dev,
 		"access: %s: Enter addr = 0x%lx bytes = 0x%zx\n", __func__,
@@ -400,7 +407,7 @@ void shared_memory_store(int mmid, u64 addr, const void *data, size_t bytes)
  * \brief Set a number of bytes of (DDR) shared memory space to 0 using a host
  * \virtual address
  */
-void shared_memory_zero(int mmid, u64 addr, size_t bytes)
+void shared_memory_zero(unsigned int mmid, u64 addr, size_t bytes)
 {
 	dev_dbg(get_mem_sub_system(mmid)->dev,
 		"access: %s: Enter addr = 0x%llx data = 0x%zx\n",
@@ -414,7 +421,7 @@ void shared_memory_zero(int mmid, u64 addr, size_t bytes)
  * \brief Load a byte from (DDR) shared memory space using a host
  * \virtual address
  */
-u8 shared_memory_load_8(int mmid, u64 addr)
+u8 shared_memory_load_8(unsigned int mmid, u64 addr)
 {
 	u8 data = 0;
 
@@ -431,7 +438,7 @@ u8 shared_memory_load_8(int mmid, u64 addr)
  * \brief Load a 16-bit word from (DDR) shared memory space using a host
  * \virtual address
  */
-u16 shared_memory_load_16(int mmid, u64 addr)
+u16 shared_memory_load_16(unsigned int mmid, u64 addr)
 {
 	u16 data = 0;
 
@@ -448,7 +455,7 @@ u16 shared_memory_load_16(int mmid, u64 addr)
  * \brief Load a 32-bit word from (DDR) shared memory space using a host
  * \virtual address
  */
-u32 shared_memory_load_32(int mmid, u64 addr)
+u32 shared_memory_load_32(unsigned int mmid, u64 addr)
 {
 	u32 data = 0;
 
@@ -465,7 +472,7 @@ u32 shared_memory_load_32(int mmid, u64 addr)
  * \brief Load a number of bytes from (DDR) shared memory space using a host
  * \virtual address
  */
-void shared_memory_load(int mmid, u64 addr, void *data, size_t bytes)
+void shared_memory_load(unsigned int mmid, u64 addr, void *data, size_t bytes)
 {
 	dev_dbg(get_mem_sub_system(mmid)->dev,
 		"access: %s: Enter addr = 0x%lx bytes = 0x%zx\n", __func__,
diff --git a/drivers/media/pci/intel/ipu4/ipu4-css/lib2600psys/libcsspsys2600.c b/drivers/media/pci/intel/ipu4/ipu4-css/lib2600psys/libcsspsys2600.c
index 92ac830..20f0dd4 100644
--- a/drivers/media/pci/intel/ipu4/ipu4-css/lib2600psys/libcsspsys2600.c
+++ b/drivers/media/pci/intel/ipu4/ipu4-css/lib2600psys/libcsspsys2600.c
@@ -438,45 +438,6 @@ u64 ipu_fw_psys_pg_get_token(struct ipu_psys_kcmd *kcmd)
 }
 EXPORT_SYMBOL_GPL(ipu_fw_psys_pg_get_token);
 
-int ipu_fw_psys_ppg_set_buffer_set(struct ipu_psys_kcmd *kcmd,
-				    struct ipu_fw_psys_terminal *terminal,
-				    int terminal_idx, u32 buffer)
-{
-	return 0;
-}
-EXPORT_SYMBOL_GPL(ipu_fw_psys_ppg_set_buffer_set);
-
-size_t
-ipu_fw_psys_ppg_get_buffer_set_size(struct ipu_psys_kcmd *kcmd)
-{
-	return 0;
-}
-EXPORT_SYMBOL_GPL(ipu_fw_psys_ppg_get_buffer_set_size);
-
-int
-ipu_fw_psys_ppg_buffer_set_vaddress(struct ipu_fw_psys_buffer_set *buf_set,
-				     u32 vaddress)
-{
-	return 0;
-}
-EXPORT_SYMBOL_GPL(ipu_fw_psys_ppg_buffer_set_vaddress);
-
-struct ipu_fw_psys_buffer_set *
-ipu_fw_psys_ppg_create_buffer_set(struct ipu_psys_kcmd *kcmd,
-				   void *kaddr, u32 frame_counter)
-{
-	return NULL;
-}
-EXPORT_SYMBOL_GPL(ipu_fw_psys_ppg_create_buffer_set);
-
-int
-ipu_fw_psys_ppg_enqueue_bufs(struct ipu_psys_kcmd *kcmd,
-			      unsigned int queue_offset)
-{
-	return 0;
-}
-EXPORT_SYMBOL_GPL(ipu_fw_psys_ppg_enqueue_bufs);
-
 static const struct ipu_fw_resource_definitions default_defs = {
 	.cells = vied_nci_cell_type,
 	.num_cells = VIED_NCI_N_CELL_ID,
diff --git a/drivers/media/pci/intel/ipu4/ipu4-isys-isa.c b/drivers/media/pci/intel/ipu4/ipu4-isys-isa.c
index 2270ee04..ff17d59 100644
--- a/drivers/media/pci/intel/ipu4/ipu4-isys-isa.c
+++ b/drivers/media/pci/intel/ipu4/ipu4-isys-isa.c
@@ -99,7 +99,7 @@ static int isa_config_vidioc_g_fmt_vid_out_mplane(struct file *file, void *fh,
 	return 0;
 }
 
-const struct ipu_isys_pixelformat *
+static const struct ipu_isys_pixelformat *
 isa_config_try_fmt_vid_out_mplane(struct ipu_isys_video *av,
 				  struct v4l2_pix_format_mplane *mpix)
 {
@@ -211,7 +211,6 @@ static struct v4l2_subdev_ops isa_sd_ops = {
 
 static int isa_link_validate(struct media_link *link)
 {
-	struct ipu_isys_video *av;
 	struct ipu_isys_pipeline *ip;
 	struct media_pipeline *pipe;
 
@@ -219,7 +218,6 @@ static int isa_link_validate(struct media_link *link)
 	if (is_media_entity_v4l2_subdev(link->source->entity))
 		return v4l2_subdev_link_validate(link);
 
-	av = container_of(link->source, struct ipu_isys_video, pad);
 	pipe = link->sink->entity->pipe;
 	ip = to_ipu_isys_pipeline(pipe);
 	ip->nr_queues++;
diff --git a/drivers/media/pci/intel/ipu4/ipu4p-css/lib2600psys/libcsspsys2600.c b/drivers/media/pci/intel/ipu4/ipu4p-css/lib2600psys/libcsspsys2600.c
index 6572b62..c79b27d 100644
--- a/drivers/media/pci/intel/ipu4/ipu4p-css/lib2600psys/libcsspsys2600.c
+++ b/drivers/media/pci/intel/ipu4/ipu4p-css/lib2600psys/libcsspsys2600.c
@@ -446,45 +446,6 @@ u64 ipu_fw_psys_pg_get_token(struct ipu_psys_kcmd *kcmd)
 }
 EXPORT_SYMBOL_GPL(ipu_fw_psys_pg_get_token);
 
-int ipu_fw_psys_ppg_set_buffer_set(struct ipu_psys_kcmd *kcmd,
-				    struct ipu_fw_psys_terminal *terminal,
-				    int terminal_idx, u32 buffer)
-{
-	return 0;
-}
-EXPORT_SYMBOL_GPL(ipu_fw_psys_ppg_set_buffer_set);
-
-size_t
-ipu_fw_psys_ppg_get_buffer_set_size(struct ipu_psys_kcmd *kcmd)
-{
-	return 0;
-}
-EXPORT_SYMBOL_GPL(ipu_fw_psys_ppg_get_buffer_set_size);
-
-int
-ipu_fw_psys_ppg_buffer_set_vaddress(struct ipu_fw_psys_buffer_set *buf_set,
-				     u32 vaddress)
-{
-	return 0;
-}
-EXPORT_SYMBOL_GPL(ipu_fw_psys_ppg_buffer_set_vaddress);
-
-struct ipu_fw_psys_buffer_set *
-ipu_fw_psys_ppg_create_buffer_set(struct ipu_psys_kcmd *kcmd,
-				   void *kaddr, u32 frame_counter)
-{
-	return NULL;
-}
-EXPORT_SYMBOL_GPL(ipu_fw_psys_ppg_create_buffer_set);
-
-int
-ipu_fw_psys_ppg_enqueue_bufs(struct ipu_psys_kcmd *kcmd,
-			      unsigned int queue_offset)
-{
-	return 0;
-}
-EXPORT_SYMBOL_GPL(ipu_fw_psys_ppg_enqueue_bufs);
-
 static const struct ipu_fw_resource_definitions default_defs = {
 	.cells = vied_nci_cell_type,
 	.num_cells = VIED_NCI_N_CELL_ID,
-- 
2.7.4

