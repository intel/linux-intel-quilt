From 6d788a96575c601a0f851a7b9ba6685566a51560 Mon Sep 17 00:00:00 2001
From: Keyon Jie <yang.jie@linux.intel.com>
Date: Mon, 19 Mar 2018 17:19:18 +0800
Subject: [PATCH 1341/2345] ASoC: SOF: fix kw issues

Fix for #38926, 39030, 39031, 39032, 39035, 52163, 52164, 52165

Signed-off-by: Keyon Jie <yang.jie@linux.intel.com>
Tested-by: Keqiao Zhang <keqiao.zhang@linux.intel.com>
---
 sound/soc/sof/hw-apl.c       | 31 ++++++++++---------------------
 sound/soc/sof/ipc.c          |  8 ++++----
 sound/soc/sof/sof-acpi-dev.c |  1 +
 sound/soc/sof/topology.c     |  8 ++++----
 4 files changed, 19 insertions(+), 29 deletions(-)

diff --git a/sound/soc/sof/hw-apl.c b/sound/soc/sof/hw-apl.c
index ca84b5e..7fdbe5d 100644
--- a/sound/soc/sof/hw-apl.c
+++ b/sound/soc/sof/hw-apl.c
@@ -522,7 +522,7 @@ static int apl_trigger(struct snd_sof_dev *sdev,
 static int apl_transfer_fw(struct snd_sof_dev *sdev, int stream_tag);
 static int apl_prepare(struct snd_sof_dev *sdev, unsigned int format,
 		       unsigned int size, struct snd_dma_buffer *dmab,
-		       int direction, int stream_tags);
+		       int direction);
 static int apl_stream_prepare(struct snd_sof_dev *sdev,
 			      struct snd_pcm_substream *substream,
 			      struct snd_pcm_hw_params *params);
@@ -722,18 +722,18 @@ static int apl_stream_prepare(struct snd_sof_dev *sdev,
 {
 	struct snd_sof_hda_stream *stream = substream->runtime->private_data;
 	struct snd_sof_hda_dev *hdev = &sdev->hda;
-	struct snd_dma_buffer *dmab;// = substream->runtime->dma_buffer_p;
+	struct snd_dma_buffer *dmab;
 	int ret, timeout = APL_STREAM_RESET_TIMEOUT;
 	u32 val, mask;
 	u32 *bdl, size = params_buffer_bytes(params);
 
-	stream->substream = substream;
-
 	if (!stream) {
 		dev_err(sdev->dev, "error: no stream available\n");
 		return -ENODEV;
 	}
 
+	stream->substream = substream;
+
 	/* decouple host and link DMA */
 	mask = 0x1 << stream->index;
 	snd_sof_dsp_update_bits(sdev, APL_PP_BAR, SOF_HDA_REG_PP_PPCTL,
@@ -887,7 +887,7 @@ static int apl_stream_prepare(struct snd_sof_dev *sdev,
 
 static int apl_prepare(struct snd_sof_dev *sdev, unsigned int format,
 		       unsigned int size, struct snd_dma_buffer *dmab,
-		       int direction, int stream_tag)
+		       int direction)
 {
 	struct snd_sof_hda_stream *stream = NULL;
 	struct snd_sof_hda_dev *hdev = &sdev->hda;
@@ -896,18 +896,7 @@ static int apl_prepare(struct snd_sof_dev *sdev, unsigned int format,
 	u32 val, mask;
 	u32 *bdl;
 
-	if (stream_tag) {
-		/* get the playback stream */
-		for (i = 0; i < hdev->num_playback; i++) {
-			if (hdev->pstream[i].open && hdev->pstream[i].stream_tag
-				== stream_tag) {
-				stream = &hdev->pstream[i];
-				break;
-			}
-		}
-		goto has_stream;
-	}
-
+	/* get an unused stream */
 	if (direction == SNDRV_PCM_STREAM_PLAYBACK) {
 		/* get an unused playback stream */
 		for (i = 0; i < hdev->num_playback; i++) {
@@ -940,7 +929,6 @@ static int apl_prepare(struct snd_sof_dev *sdev, unsigned int format,
 		return ret;
 	}
 
-has_stream:
 	stream->format_val = format;
 	stream->bufsize = size;
 
@@ -2121,9 +2109,9 @@ static int apl_init(struct snd_sof_dev *sdev,
 		goto err;
 	}
 
-	// prepare DMA for code loader use
+	/* prepare DMA for code loader stream */
 	stream_tag = apl_prepare(sdev, 0x40, fwsize, &sdev->dmab,
-				 SNDRV_PCM_STREAM_PLAYBACK, 0);
+				 SNDRV_PCM_STREAM_PLAYBACK);
 
 	if (stream_tag <= 0) {
 		dev_err(sdev->dev, "error: dma prepare for fw loading err: %x\n",
@@ -2508,7 +2496,8 @@ static int apl_remove(struct snd_sof_dev *sdev)
 				SOF_HDA_INT_CTRL_EN | SOF_HDA_INT_GLOBAL_EN, 0);
 
 	/* disable cores */
-	apl_disable_core(sdev, chip->cores_mask);
+	if (chip)
+		apl_disable_core(sdev, chip->cores_mask);
 
 	/* disable DSP */
 	snd_sof_dsp_update_bits(sdev, APL_PP_BAR, SOF_HDA_REG_PP_PPCTL,
diff --git a/sound/soc/sof/ipc.c b/sound/soc/sof/ipc.c
index d9dc36b..60287e3 100644
--- a/sound/soc/sof/ipc.c
+++ b/sound/soc/sof/ipc.c
@@ -267,8 +267,8 @@ static void ipc_period_elapsed(struct snd_sof_dev *sdev, u32 msg_id)
 
 	if (!spcm) {
 		dev_err(sdev->dev,
-			"error: period elapsed for unknown component %d\n",
-			posn.comp_id);
+			"period elapsed for unknown stream, msg_id %d\n",
+			msg_id);
 		return;
 	}
 
@@ -308,8 +308,8 @@ static void ipc_xrun(struct snd_sof_dev *sdev, u32 msg_id)
 	}
 
 	if (!spcm) {
-		dev_err(sdev->dev, "error: XRUN for unknown component %d\n",
-			posn.comp_id);
+		dev_err(sdev->dev, "XRUN for unknown stream, msg_id %d\n",
+			msg_id);
 		return;
 	}
 
diff --git a/sound/soc/sof/sof-acpi-dev.c b/sound/soc/sof/sof-acpi-dev.c
index 124afd9..9afaf5b 100644
--- a/sound/soc/sof/sof-acpi-dev.c
+++ b/sound/soc/sof/sof-acpi-dev.c
@@ -231,6 +231,7 @@ static int sof_acpi_probe(struct platform_device *pdev)
 #endif
 
 	/* get ops for platform */
+	new_mach_data = NULL;
 	ops = sof_acpi_get_ops(desc, &new_mach_data);
 	if (!ops) {
 		dev_err(dev, "error: no matching ACPI descriptor ops\n");
diff --git a/sound/soc/sof/topology.c b/sound/soc/sof/topology.c
index 26063ff..d068c37 100644
--- a/sound/soc/sof/topology.c
+++ b/sound/soc/sof/topology.c
@@ -351,14 +351,12 @@ static void sof_parse_tokens(struct snd_soc_component *scomp,
 			     int priv_size)
 {
 	struct snd_sof_dev *sdev = snd_soc_component_get_drvdata(scomp);
-	int size, asize;
+	int asize;
 
 	while (priv_size > 0) {
 		asize = array->size;
 
-		/* validate size */
-		priv_size -= asize;
-		if (size < 0) {
+		if (asize < 0) {
 			dev_err(sdev->dev, "error: invalid array size 0x%x\n",
 				asize);
 			return;
@@ -389,6 +387,8 @@ static void sof_parse_tokens(struct snd_soc_component *scomp,
 
 		/* next array */
 		array = (void *)array + asize;
+		/* update and validate remained size */
+		priv_size -= asize;
 	}
 }
 
-- 
2.7.4

