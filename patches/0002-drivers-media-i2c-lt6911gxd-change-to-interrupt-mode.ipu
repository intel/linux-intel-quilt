From bddb8b097998eaa51150380404cfa888601bead8 Mon Sep 17 00:00:00 2001
From: hepengpx <pengpengx.he@intel.com>
Date: Tue, 20 May 2025 15:37:29 +0800
Subject: [PATCH 2/5] drivers: media: i2c: lt6911gxd change to interrupt mode

Use interrupt mode to update lt6911gxd status.

Tracked-On: #JILCNT-593
Signed-off-by: hepengpx <pengpengx.he@intel.com>
---
 drivers/media/i2c/lt6911gxd.c | 38 +++++++++++++++++++----------------
 1 file changed, 21 insertions(+), 17 deletions(-)

diff --git a/drivers/media/i2c/lt6911gxd.c b/drivers/media/i2c/lt6911gxd.c
index b571eefd07b2..1c2c57e594cc 100644
--- a/drivers/media/i2c/lt6911gxd.c
+++ b/drivers/media/i2c/lt6911gxd.c
@@ -15,7 +15,7 @@
 #include <media/v4l2-event.h>
 #include <media/v4l2-fwnode.h>
 
-#define POLLING_MODE
+// #define POLLING_MODE
 
 #define LT6911GXD_CHIP_ID		0x2204
 #define REG_CHIP_ID			CCI_REG16(0xe100)
@@ -488,18 +488,22 @@ static int lt6911gxd_identify_module(struct lt6911gxd *lt6911gxd,
 	return 0;
 }
 
-// static irqreturn_t lt6911gxd_threaded_irq_fn(int irq, void *dev_id)
-// {
-// 	struct v4l2_subdev *sd = dev_id;
-// 	struct lt6911gxd *lt6911gxd = to_lt6911gxd(sd);
-// 	struct v4l2_subdev_state *state;
+static irqreturn_t lt6911gxd_threaded_irq_fn(int irq, void *dev_id)
+{
+	struct v4l2_subdev *sd = dev_id;
+	struct lt6911gxd *lt6911gxd = to_lt6911gxd(sd);
+	struct v4l2_subdev_state *state;
+	struct v4l2_subdev_format fmt = {
+		.which = V4L2_SUBDEV_FORMAT_ACTIVE
+	};
 
-// 	state = v4l2_subdev_lock_and_get_active_state(sd);
-// 	lt6911gxd_status_update(lt6911gxd);
-// 	v4l2_subdev_unlock_state(state);
+	state = v4l2_subdev_lock_and_get_active_state(sd);
+	lt6911gxd_status_update(lt6911gxd);
+	lt6911gxd_set_format(sd, state, &fmt);
+	v4l2_subdev_unlock_state(state);
 
-// 	return IRQ_HANDLED;
-// }
+	return IRQ_HANDLED;
+}
 
 static void lt6911gxd_remove(struct i2c_client *client)
 {
@@ -541,7 +545,7 @@ static int lt6911gxd_probe(struct i2c_client *client)
 {
 	struct lt6911gxd *lt6911gxd;
 	struct device *dev = &client->dev;
-	// u64 irq_pin_flags;
+	u64 irq_pin_flags;
 	int ret;
 
 	lt6911gxd = devm_kzalloc(dev, sizeof(*lt6911gxd), GFP_KERNEL);
@@ -621,11 +625,11 @@ static int lt6911gxd_probe(struct i2c_client *client)
 	//lt6911gxd->irq_gpio = 541;
 
 	//lt6911gxd->irq_gpio = gpio_to_desc(541); //C5: GPP_C_6 ; DEV change to intc105D
-	lt6911gxd->irq_gpio = devm_gpiod_get(dev, "power-enable", GPIOD_IN);
+	lt6911gxd->irq_gpio = devm_gpiod_get(dev, "readystat", GPIOD_IN);
 	if (IS_ERR(lt6911gxd->irq_gpio))
 		return dev_err_probe(dev, PTR_ERR(lt6911gxd->irq_gpio),
-				     "failed to get power-en gpio\n");
-	dev_dbg(dev, "lt6911gxd_probe: use power-en irq_gpio!\n");
+				     "failed to get ready_stat gpio\n");
+	dev_dbg(dev, "%s: use ready_stat irq_gpio!\n", __func__);
 
 	/* Setting irq */
 	irq_pin_flags = IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING |
@@ -650,8 +654,8 @@ static int lt6911gxd_probe(struct i2c_client *client)
 err_free_irq:
 	free_irq(gpiod_to_irq(lt6911gxd->irq_gpio), lt6911gxd);
 
-// err_subdev_cleanup:
-// 	v4l2_subdev_cleanup(&lt6911gxd->sd);
+err_subdev_cleanup:
+	v4l2_subdev_cleanup(&lt6911gxd->sd);
 
 err_media_entity_cleanup:
 	pm_runtime_disable(dev);
-- 
2.43.0

