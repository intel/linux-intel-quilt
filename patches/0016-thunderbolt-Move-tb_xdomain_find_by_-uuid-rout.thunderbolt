From d55c470eda9f2835c6b5eba192860f5b944c56a4 Mon Sep 17 00:00:00 2001
From: Mika Westerberg <mika.westerberg@linux.intel.com>
Date: Thu, 22 Oct 2020 13:04:04 +0300
Subject: [PATCH 16/20] thunderbolt: Move tb_xdomain_find_by_{uuid|route} to
 tb.h

These functions are not called outside of the Thunderbolt driver so we
can make them internal. Also no need to export their symbols anymore.

Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
---
 drivers/thunderbolt/tb.h      | 14 ++++++++++++++
 drivers/thunderbolt/xdomain.c |  2 --
 include/linux/thunderbolt.h   | 26 --------------------------
 3 files changed, 14 insertions(+), 28 deletions(-)

diff --git a/drivers/thunderbolt/tb.h b/drivers/thunderbolt/tb.h
index e7c552249c1d..69cfaf09067f 100644
--- a/drivers/thunderbolt/tb.h
+++ b/drivers/thunderbolt/tb.h
@@ -945,6 +945,20 @@ void tb_xdomain_add(struct tb_xdomain *xd);
 void tb_xdomain_remove(struct tb_xdomain *xd);
 struct tb_xdomain *tb_xdomain_find_by_link_depth(struct tb *tb, u8 link,
 						 u8 depth);
+struct tb_xdomain *tb_xdomain_find_by_uuid(struct tb *tb, const uuid_t *uuid);
+struct tb_xdomain *tb_xdomain_find_by_route(struct tb *tb, u64 route);
+
+static inline struct tb_xdomain *
+tb_xdomain_find_by_route_locked(struct tb *tb, u64 route)
+{
+	struct tb_xdomain *xd;
+
+	mutex_lock(&tb->lock);
+	xd = tb_xdomain_find_by_route(tb, route);
+	mutex_unlock(&tb->lock);
+
+	return xd;
+}
 
 int tb_retimer_scan(struct tb_port *port);
 void tb_retimer_remove_all(struct tb_port *port);
diff --git a/drivers/thunderbolt/xdomain.c b/drivers/thunderbolt/xdomain.c
index c36b29736cd0..d07c8d7d305b 100644
--- a/drivers/thunderbolt/xdomain.c
+++ b/drivers/thunderbolt/xdomain.c
@@ -1648,7 +1648,6 @@ struct tb_xdomain *tb_xdomain_find_by_uuid(struct tb *tb, const uuid_t *uuid)
 	xd = switch_find_xdomain(tb->root_switch, &lookup);
 	return tb_xdomain_get(xd);
 }
-EXPORT_SYMBOL_GPL(tb_xdomain_find_by_uuid);
 
 /**
  * tb_xdomain_find_by_link_depth() - Find an XDomain by link and depth
@@ -1706,7 +1705,6 @@ struct tb_xdomain *tb_xdomain_find_by_route(struct tb *tb, u64 route)
 	xd = switch_find_xdomain(tb->root_switch, &lookup);
 	return tb_xdomain_get(xd);
 }
-EXPORT_SYMBOL_GPL(tb_xdomain_find_by_route);
 
 bool tb_xdomain_handle_request(struct tb *tb, enum tb_cfg_pkg_type type,
 			       const void *buf, size_t size)
diff --git a/include/linux/thunderbolt.h b/include/linux/thunderbolt.h
index 659a0a810fa1..48338f3eb9c4 100644
--- a/include/linux/thunderbolt.h
+++ b/include/linux/thunderbolt.h
@@ -256,32 +256,6 @@ int tb_xdomain_enable_paths(struct tb_xdomain *xd, u16 transmit_path,
 			    u16 transmit_ring, u16 receive_path,
 			    u16 receive_ring);
 int tb_xdomain_disable_paths(struct tb_xdomain *xd);
-struct tb_xdomain *tb_xdomain_find_by_uuid(struct tb *tb, const uuid_t *uuid);
-struct tb_xdomain *tb_xdomain_find_by_route(struct tb *tb, u64 route);
-
-static inline struct tb_xdomain *
-tb_xdomain_find_by_uuid_locked(struct tb *tb, const uuid_t *uuid)
-{
-	struct tb_xdomain *xd;
-
-	mutex_lock(&tb->lock);
-	xd = tb_xdomain_find_by_uuid(tb, uuid);
-	mutex_unlock(&tb->lock);
-
-	return xd;
-}
-
-static inline struct tb_xdomain *
-tb_xdomain_find_by_route_locked(struct tb *tb, u64 route)
-{
-	struct tb_xdomain *xd;
-
-	mutex_lock(&tb->lock);
-	xd = tb_xdomain_find_by_route(tb, route);
-	mutex_unlock(&tb->lock);
-
-	return xd;
-}
 
 static inline struct tb_xdomain *tb_xdomain_get(struct tb_xdomain *xd)
 {
-- 
2.27.0

