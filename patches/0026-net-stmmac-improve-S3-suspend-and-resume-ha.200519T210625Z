From fd95d01a3d4fa9177cb1943ee3d8dbdded9e69b7 Mon Sep 17 00:00:00 2001
From: "Song, Yoong Siang" <yoong.siang.song@intel.com>
Date: Fri, 10 Apr 2020 02:13:00 +0800
Subject: [PATCH 26/42] net: stmmac: improve S3 suspend() and resume() handling
 in network stack

1.	Add netif_carrier_off() in the beginning of suspend flow - to
	make sure network stack stop sending TX frame out.
2.	Add napi_synchronize() before disable Rx/Tx napi.
3.	Move netif_device_attach() to the end of resume flow - to only
	mark netdev is ready for data path.

Suggested-by: Ong Boon Leong <boon.leong.ong@intel.com>
Signed-off-by: Song, Yoong Siang <yoong.siang.song@intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/stmmac_main.c | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

Index: b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
===================================================================
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -167,10 +167,14 @@ static void stmmac_disable_all_queues(st
 	for (queue = 0; queue < maxq; queue++) {
 		struct stmmac_channel *ch = &priv->channel[queue];
 
-		if (queue < rx_queues_cnt)
+		if (queue < rx_queues_cnt) {
+			napi_synchronize(&ch->rx_napi);
 			napi_disable(&ch->rx_napi);
-		if (queue < tx_queues_cnt)
+		}
+		if (queue < tx_queues_cnt) {
+			napi_synchronize(&ch->tx_napi);
 			napi_disable(&ch->tx_napi);
+		}
 	}
 }
 
@@ -6763,6 +6767,8 @@ int stmmac_suspend(struct device *dev)
 
 	netif_device_detach(ndev);
 
+	netif_carrier_off(priv->dev);
+
 	stmmac_disable_all_queues(priv);
 
 	for (chan = 0; chan < priv->plat->tx_queues_to_use; chan++)
@@ -7077,9 +7083,9 @@ int stmmac_resume(struct device *dev)
 				   __func__, ret);
 		}
 	}
-#endif /* ndef CONFIG_STMMAC_NETWORK_PROXY */
 
 	netif_device_attach(ndev);
+#endif /* ndef CONFIG_STMMAC_NETWORK_PROXY */
 
 	return 0;
 }
