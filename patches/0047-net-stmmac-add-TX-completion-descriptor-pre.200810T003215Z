From ffcf115698cd4a724351b5ab440d67e3c6c03026 Mon Sep 17 00:00:00 2001
From: Ong Boon Leong <boon.leong.ong@intel.com>
Date: Thu, 4 Jun 2020 21:44:08 +0800
Subject: [PATCH 47/78] net: stmmac: add TX completion descriptor prefetching

We prefetch the next TX completion descriptor for faster processing
during TX cleaning.

Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
---
 .../net/ethernet/stmicro/stmmac/stmmac_main.c    | 16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index 9e96426e5f04..6d88e7cedf03 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -2251,7 +2251,7 @@ static int stmmac_tx_clean(struct stmmac_priv *priv, int budget, u32 queue)
 {
 	struct stmmac_tx_queue *tx_q = get_tx_queue(priv, queue);
 	unsigned int bytes_compl = 0, pkts_compl = 0;
-	unsigned int entry, count = 0;
+	unsigned int entry, next_entry, count = 0;
 
 	if (!queue_is_xdp(priv, queue))
 		__netif_tx_lock_bh(netdev_get_tx_queue(priv->dev, queue));
@@ -2261,7 +2261,7 @@ static int stmmac_tx_clean(struct stmmac_priv *priv, int budget, u32 queue)
 	entry = tx_q->dirty_tx;
 	while ((entry != tx_q->cur_tx) && (count < budget)) {
 		struct sk_buff *skb = tx_q->tx_skbuff[entry];
-		struct dma_desc *p;
+		struct dma_desc *p, *np;
 		int status;
 
 		if (priv->extend_desc)
@@ -2277,6 +2277,16 @@ static int stmmac_tx_clean(struct stmmac_priv *priv, int budget, u32 queue)
 		if (unlikely(status & tx_dma_own))
 			break;
 
+		next_entry = STMMAC_GET_ENTRY(entry, priv->dma_tx_size);
+		if (priv->extend_desc)
+			np = (struct dma_desc *)(tx_q->dma_etx + next_entry);
+		else if (tx_q->tbs & STMMAC_TBS_AVAIL)
+			np = &(tx_q->dma_enhtx + next_entry)->basic;
+		else
+			np = tx_q->dma_tx + next_entry;
+
+		prefetch(np);
+
 		count++;
 
 		/* Make sure descriptor fields are read after reading
@@ -2374,7 +2384,7 @@ static int stmmac_tx_clean(struct stmmac_priv *priv, int budget, u32 queue)
 		else
 			stmmac_release_tx_desc(priv, p, priv->mode);
 
-		entry = STMMAC_GET_ENTRY(entry, priv->dma_tx_size);
+		entry = next_entry;
 	}
 	tx_q->dirty_tx = entry;
 
-- 
2.17.1

