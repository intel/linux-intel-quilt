From bbec4a558b1c46cd433dace9f917f4fb27e548da Mon Sep 17 00:00:00 2001
From: yangz1x <zhonghuax.yang@intel.com>
Date: Thu, 23 Aug 2018 17:12:57 +0000
Subject: [PATCH 2127/2367] media: intel-ipu4: adv7481_hdmi: Enable HDMI active
 video

Message for Open Source:
Adv7481 can handle HDMI active video and test pattern.

Message for Internal:
[Issue/Feature] Seperate active video and test patterns by fps
[Root cause/Changes] Same as above

Change-Id: I88b65c8136496af2ef77053e34f73f2178cc4de4
Tracked-On: #H1506637351
Signed-off-by: Khai Wen Ng <khai.wen.ng@intel.com>
---
 .../i2c/crlmodule/crl_adv7481_hdmi_configuration.h | 146 +++++++++++++--------
 1 file changed, 94 insertions(+), 52 deletions(-)

diff --git a/drivers/media/i2c/crlmodule/crl_adv7481_hdmi_configuration.h b/drivers/media/i2c/crlmodule/crl_adv7481_hdmi_configuration.h
index 7982d79..438feb0 100644
--- a/drivers/media/i2c/crlmodule/crl_adv7481_hdmi_configuration.h
+++ b/drivers/media/i2c/crlmodule/crl_adv7481_hdmi_configuration.h
@@ -168,16 +168,12 @@ static struct crl_register_write_rep adv7481_hdmi_onetime_init_regset[] = {
 
 static struct crl_register_write_rep adv7481_hdmi_mode_rgb565[] = {
 	{0x04, CRL_REG_LEN_08BIT, 0x02, 0xE0}, /* RGB Out of CP */
-	{0x12, CRL_REG_LEN_08BIT, 0xF0, 0xE0}, /* CSC Depends on ip Packets -
-					SDR 444 */
-	{0x17, CRL_REG_LEN_08BIT, 0xB8, 0xE0}, /* Configure for RGB565 & Luma &
-					Chroma Values Can Reach 254d */
-	{0x03, CRL_REG_LEN_08BIT, 0x86, 0xE0}, /* CP-Insert_AV_Code */
+	{0x12, CRL_REG_LEN_08BIT, 0xF0, 0xE0}, /* CSC Depends on ip Packets - SDR 444 */
+	{0x17, CRL_REG_LEN_08BIT, 0xB8, 0xE0}, /* Luma & Chroma Values Can Reach 254d */
 	{0x7C, CRL_REG_LEN_08BIT, 0x00, 0x44}, /* ADI Required Write */
-	{0x0C, CRL_REG_LEN_08BIT, 0xE0, 0xE0}, /* Enable LLC_DLL &
-					Double LLC Timing */
-	{0x0E, CRL_REG_LEN_08BIT, 0xDD, 0xE0}, /* LLC/PIX/SPI PINS TRISTATED
-					AUD Outputs Enabled */
+	{0x0C, CRL_REG_LEN_08BIT, 0xE0, 0xE0}, /* Enable LLC_DLL & Double LLC Timing */
+	{0x0E, CRL_REG_LEN_08BIT, 0xDD, 0xE0},
+	/* LLC/PIX/SPI PINS TRISTATED AUD Outputs Enabled */
 	{0xDB, CRL_REG_LEN_08BIT, 0x10, 0x94}, /* ADI Required Write */
 	 /* Enable 4-lane CSI TXB & Pixel Port */
 	{0x7E, CRL_REG_LEN_08BIT, 0x98, 0x94}, /* ADI Required Write */
@@ -185,16 +181,12 @@ static struct crl_register_write_rep adv7481_hdmi_mode_rgb565[] = {
 
 static struct crl_register_write_rep adv7481_hdmi_mode_rgb888[] = {
 	{0x04, CRL_REG_LEN_08BIT, 0x02, 0xE0}, /* RGB Out of CP */
-	{0x12, CRL_REG_LEN_08BIT, 0xF0, 0xE0}, /* CSC Depends on ip Packets -
-					SDR 444 */
-	{0x17, CRL_REG_LEN_08BIT, 0x80, 0xE0}, /* Luma & Chroma Values Can
-					Reach 254d */
-	{0x03, CRL_REG_LEN_08BIT, 0x86, 0xE0}, /* CP-Insert_AV_Code */
+	{0x12, CRL_REG_LEN_08BIT, 0xF0, 0xE0}, /* CSC Depends on ip Packets - SDR 444 */
+	{0x17, CRL_REG_LEN_08BIT, 0x80, 0xE0}, /* Luma & Chroma Values Can Reach 254d */
 	{0x7C, CRL_REG_LEN_08BIT, 0x00, 0x44}, /* ADI Required Write */
-	{0x0C, CRL_REG_LEN_08BIT, 0xE0, 0xE0}, /* Enable LLC_DLL &
-					Double LLC Timing */
-	{0x0E, CRL_REG_LEN_08BIT, 0xDD, 0xE0}, /* LLC/PIX/SPI PINS TRISTATED
-					AUD Outputs Enabled */
+	{0x0C, CRL_REG_LEN_08BIT, 0xE0, 0xE0}, /* Enable LLC_DLL & Double LLC Timing */
+	{0x0E, CRL_REG_LEN_08BIT, 0xDD, 0xE0},
+	/* LLC/PIX/SPI PINS TRISTATED AUD Outputs Enabled */
 	{0xDB, CRL_REG_LEN_08BIT, 0x10, 0x94}, /* ADI Required Write */
 	{0x7E, CRL_REG_LEN_08BIT, 0x1B, 0x94}, /* ADI Required Write */
 };
@@ -250,10 +242,6 @@ static struct crl_register_write_rep adv7481_hdmi_mode_1080p[] = {
 	{0x31, CRL_REG_LEN_08BIT, 0x80, 0x94},
 	{0xC9, CRL_REG_LEN_08BIT, 0x2D, 0x44},
 	{0x05, CRL_REG_LEN_08BIT, 0x5E, 0xE0},
-	{0x03, CRL_REG_LEN_08BIT, 0x86, 0xE0},
-	{0x00, CRL_REG_LEN_08BIT, 0x00, 0xE0},
-	{0x04, CRL_REG_LEN_08BIT | CRL_REG_READ_AND_UPDATE, 0x80, 0xE0, 0xFD},
-	{0x37, CRL_REG_LEN_08BIT, 0x81, 0x44},
 };
 
 static struct crl_register_write_rep adv7481_hdmi_mode_1080i[] = {
@@ -273,10 +261,6 @@ static struct crl_register_write_rep adv7481_hdmi_mode_1080i[] = {
 	{0x31, CRL_REG_LEN_08BIT, 0x80, 0x94},
 	{0xC9, CRL_REG_LEN_08BIT, 0x2D, 0x44},
 	{0x05, CRL_REG_LEN_08BIT, 0x54, 0xE0},
-	{0x03, CRL_REG_LEN_08BIT, 0x86, 0xE0},
-	{0x00, CRL_REG_LEN_08BIT, 0x00, 0xE0},
-	{0x04, CRL_REG_LEN_08BIT | CRL_REG_READ_AND_UPDATE, 0x80, 0xE0, 0xFD},
-	{0x37, CRL_REG_LEN_08BIT, 0x81, 0x44},
 };
 
 static struct crl_register_write_rep adv7481_hdmi_mode_480p[] = {
@@ -296,10 +280,6 @@ static struct crl_register_write_rep adv7481_hdmi_mode_480p[] = {
 	{0x31, CRL_REG_LEN_08BIT, 0x80, 0x94},
 	{0xC9, CRL_REG_LEN_08BIT, 0x2D, 0x44},
 	{0x05, CRL_REG_LEN_08BIT, 0x4A, 0xE0},
-	{0x03, CRL_REG_LEN_08BIT, 0x86, 0xE0},
-	{0x00, CRL_REG_LEN_08BIT, 0x00, 0xE0},
-	{0x04, CRL_REG_LEN_08BIT | CRL_REG_READ_AND_UPDATE, 0x80, 0xE0, 0xFD},
-	{0x37, CRL_REG_LEN_08BIT, 0x81, 0x44},
 };
 
 static struct crl_register_write_rep adv7481_hdmi_mode_720p[] = {
@@ -319,10 +299,6 @@ static struct crl_register_write_rep adv7481_hdmi_mode_720p[] = {
 	{0x31, CRL_REG_LEN_08BIT, 0x80, 0x94},
 	{0xC9, CRL_REG_LEN_08BIT, 0x2D, 0x44},
 	{0x05, CRL_REG_LEN_08BIT, 0x53, 0xE0},
-	{0x03, CRL_REG_LEN_08BIT, 0x86, 0xE0},
-	{0x00, CRL_REG_LEN_08BIT, 0x00, 0xE0},
-	{0x04, CRL_REG_LEN_08BIT | CRL_REG_READ_AND_UPDATE, 0x80, 0xE0, 0xFD},
-	{0x37, CRL_REG_LEN_08BIT, 0x81, 0x44},
 };
 
 static struct crl_register_write_rep adv7481_hdmi_mode_576p[] = {
@@ -342,10 +318,6 @@ static struct crl_register_write_rep adv7481_hdmi_mode_576p[] = {
 	{0x31, CRL_REG_LEN_08BIT, 0x80, 0x94},
 	{0xC9, CRL_REG_LEN_08BIT, 0x2D, 0x44},
 	{0x05, CRL_REG_LEN_08BIT, 0x4B, 0xE0},
-	{0x03, CRL_REG_LEN_08BIT, 0x86, 0xE0},
-	{0x00, CRL_REG_LEN_08BIT, 0x00, 0xE0},
-	{0x04, CRL_REG_LEN_08BIT | CRL_REG_READ_AND_UPDATE, 0x80, 0xE0, 0xFD},
-	{0x37, CRL_REG_LEN_08BIT, 0x81, 0x44},
 };
 
 static struct crl_register_write_rep adv7481_hdmi_mode_576i[] = {
@@ -365,10 +337,6 @@ static struct crl_register_write_rep adv7481_hdmi_mode_576i[] = {
 	{0x31, CRL_REG_LEN_08BIT, 0x80, 0x94},
 	{0xC9, CRL_REG_LEN_08BIT, 0x2D, 0x44},
 	{0x05, CRL_REG_LEN_08BIT, 0x41, 0xE0},
-	{0x03, CRL_REG_LEN_08BIT, 0x86, 0xE0},
-	{0x00, CRL_REG_LEN_08BIT, 0x00, 0xE0},
-	{0x04, CRL_REG_LEN_08BIT | CRL_REG_READ_AND_UPDATE, 0x80, 0xE0, 0xFD},
-	{0x37, CRL_REG_LEN_08BIT, 0x81, 0x44},
 };
 
 static struct crl_register_write_rep adv7481_hdmi_mode_480i[] = {
@@ -388,10 +356,6 @@ static struct crl_register_write_rep adv7481_hdmi_mode_480i[] = {
 	{0x31, CRL_REG_LEN_08BIT, 0x80, 0x94},
 	{0xC9, CRL_REG_LEN_08BIT, 0x2D, 0x44},
 	{0x05, CRL_REG_LEN_08BIT, 0x40, 0xE0},
-	{0x03, CRL_REG_LEN_08BIT, 0x86, 0xE0},
-	{0x00, CRL_REG_LEN_08BIT, 0x00, 0xE0},
-	{0x04, CRL_REG_LEN_08BIT | CRL_REG_READ_AND_UPDATE, 0x80, 0xE0, 0xFD},
-	{0x37, CRL_REG_LEN_08BIT, 0x81, 0x44},
 };
 
 static struct crl_register_write_rep adv7481_hdmi_mode_vga[] = {
@@ -411,10 +375,6 @@ static struct crl_register_write_rep adv7481_hdmi_mode_vga[] = {
 	{0x31, CRL_REG_LEN_08BIT, 0x80, 0x94},
 	{0xC9, CRL_REG_LEN_08BIT, 0x2D, 0x44},
 	{0x05, CRL_REG_LEN_08BIT, 0x88, 0xE0},
-	{0x03, CRL_REG_LEN_08BIT, 0x86, 0xE0},
-	{0x00, CRL_REG_LEN_08BIT, 0x00, 0xE0},
-	{0x04, CRL_REG_LEN_08BIT | CRL_REG_READ_AND_UPDATE, 0x80, 0xE0, 0xFD},
-	{0x37, CRL_REG_LEN_08BIT, 0x81, 0x44},
 };
 
 static struct crl_register_write_rep adv7481_hdmi_powerup_regset[] = {
@@ -756,7 +716,6 @@ static struct crl_mode_rep adv7481_hdmi_modes[] = {
 		.comp_items = 1,
 		.ctrl_data = &hdmi_ctrl_data_lanes[0],
 	},
-
 	{
 		.sd_rects_items = ARRAY_SIZE(adv7481_hdmi_480i_rects),
 		.sd_rects = adv7481_hdmi_480i_rects,
@@ -770,7 +729,6 @@ static struct crl_mode_rep adv7481_hdmi_modes[] = {
 		.comp_items = 1,
 		.ctrl_data = &hdmi_ctrl_data_lanes[2],
 	},
-
 	{
 		.sd_rects_items = ARRAY_SIZE(adv7481_hdmi_576p_rects),
 		.sd_rects = adv7481_hdmi_576p_rects,
@@ -860,6 +818,71 @@ static struct crl_csi_data_fmt adv7481_hdmi_crl_csi_data_fmt[] = {
 	},
 };
 
+static const char * const adv7481_hdmi_test_pattern_menu[] = {
+	"default",
+	"30fps",
+	"50fps",
+	"60fps",
+	"real",
+};
+
+static struct crl_register_write_rep adv7481_hdmi_test_pattern_default_mode[] = {
+	{0x03, CRL_REG_LEN_08BIT, 0x86, 0xE0},
+	{0x37, CRL_REG_LEN_08BIT, 0x81, 0x44},
+	{0x00, CRL_REG_LEN_08BIT, 0x00, 0xE0},
+};
+
+static struct crl_register_write_rep adv7481_hdmi_test_pattern_30fps_mode[] = {
+	{0x00, CRL_REG_LEN_08BIT, 0x00, 0xE0},
+	{0x03, CRL_REG_LEN_08BIT, 0xA6, 0xE0},
+	{0x04, CRL_REG_LEN_08BIT | CRL_REG_READ_AND_UPDATE, 0x80, 0xE0, 0xFD},
+	{0x37, CRL_REG_LEN_08BIT, 0x85, 0x44},
+};
+
+static struct crl_register_write_rep adv7481_hdmi_test_pattern_50fps_mode[] = {
+	{0x00, CRL_REG_LEN_08BIT, 0x00, 0xE0},
+	{0x03, CRL_REG_LEN_08BIT, 0x96, 0xE0},
+	{0x04, CRL_REG_LEN_08BIT | CRL_REG_READ_AND_UPDATE, 0x80, 0xE0, 0xFD},
+	{0x37, CRL_REG_LEN_08BIT, 0x85, 0x44},
+};
+
+static struct crl_register_write_rep adv7481_hdmi_test_pattern_60fps_mode[] = {
+	{0x00, CRL_REG_LEN_08BIT, 0x00, 0xE0},
+	{0x03, CRL_REG_LEN_08BIT, 0x86, 0xE0},
+	{0x04, CRL_REG_LEN_08BIT | CRL_REG_READ_AND_UPDATE, 0x80, 0xE0, 0xFD},
+	{0x37, CRL_REG_LEN_08BIT, 0x85, 0x44},
+};
+
+static struct crl_register_write_rep adv7481_hdmi_real_mode[] = {
+	{0x00, CRL_REG_LEN_DELAY, 0x05, 0x00},
+	{0x03, CRL_REG_LEN_08BIT, 0x00, 0xE0},
+	{0x04, CRL_REG_LEN_08BIT | CRL_REG_READ_AND_UPDATE, 0x00, 0xE0, 0xFD},
+	{0x37, CRL_REG_LEN_08BIT, 0x00, 0x44},
+};
+
+static struct crl_dep_reg_list adv7481_hdmi_test_pattern_fps_types_regs[] = {
+	{ CRL_DEP_CTRL_CONDITION_EQUAL,
+		{ CRL_DYNAMIC_VAL_OPERAND_TYPE_CONST, 0 },
+		ARRAY_SIZE(adv7481_hdmi_test_pattern_default_mode),
+		adv7481_hdmi_test_pattern_default_mode, 0, 0 },
+	{ CRL_DEP_CTRL_CONDITION_EQUAL,
+		{ CRL_DYNAMIC_VAL_OPERAND_TYPE_CONST, 1 },
+		ARRAY_SIZE(adv7481_hdmi_test_pattern_30fps_mode),
+		adv7481_hdmi_test_pattern_30fps_mode, 0, 0 },
+	{ CRL_DEP_CTRL_CONDITION_EQUAL,
+		{ CRL_DYNAMIC_VAL_OPERAND_TYPE_CONST, 2 },
+		ARRAY_SIZE(adv7481_hdmi_test_pattern_50fps_mode),
+		adv7481_hdmi_test_pattern_50fps_mode, 0, 0 },
+	{ CRL_DEP_CTRL_CONDITION_EQUAL,
+		{ CRL_DYNAMIC_VAL_OPERAND_TYPE_CONST, 3 },
+		ARRAY_SIZE(adv7481_hdmi_test_pattern_60fps_mode),
+		adv7481_hdmi_test_pattern_60fps_mode, 0, 0 },
+	{ CRL_DEP_CTRL_CONDITION_EQUAL,
+		{ CRL_DYNAMIC_VAL_OPERAND_TYPE_CONST, 4 },
+		ARRAY_SIZE(adv7481_hdmi_real_mode),
+		adv7481_hdmi_real_mode, 0, 0 },
+};
+
 static struct crl_v4l2_ctrl adv7481_hdmi_v4l2_ctrls[] = {
 	{
 		.sd_type = CRL_SUBDEV_TYPE_BINNER,
@@ -917,6 +940,25 @@ static struct crl_v4l2_ctrl adv7481_hdmi_v4l2_ctrls[] = {
 		.flags = 0,
 		.impact = CRL_IMPACTS_NO_IMPACT,
 	},
+	{
+		.sd_type = CRL_SUBDEV_TYPE_PIXEL_ARRAY,
+		.op_type = CRL_V4L2_CTRL_SET_OP,
+		.context = SENSOR_POWERED_ON,
+		.ctrl_id = V4L2_CID_TEST_PATTERN,
+		.name = "V4L2_CID_TEST_PATTERN",
+		.type = CRL_V4L2_CTRL_TYPE_MENU_ITEMS,
+		.data.v4l2_menu_items.menu = adv7481_hdmi_test_pattern_menu,
+		.data.v4l2_menu_items.size = ARRAY_SIZE(adv7481_hdmi_test_pattern_menu),
+		.impact = CRL_IMPACTS_NO_IMPACT,
+		.flags = V4L2_CTRL_FLAG_UPDATE,
+		.ctrl = 0,
+		.regs_items = 0,
+		.regs = 0,
+		.dep_items = 0,
+		.dep_ctrls = 0,
+		.crl_ctrl_dep_reg_list = ARRAY_SIZE(adv7481_hdmi_test_pattern_fps_types_regs),
+		.dep_regs = adv7481_hdmi_test_pattern_fps_types_regs,
+	},
 };
 
 int adv7481_sensor_init(struct i2c_client *);
-- 
2.7.4

