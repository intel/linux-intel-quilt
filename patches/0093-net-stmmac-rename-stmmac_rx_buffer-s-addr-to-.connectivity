From 43aaf1478a6e63092f087763c0d79b7fa4b9abe8 Mon Sep 17 00:00:00 2001
From: "Wong, Vincent Por Yin" <vincent.por.yin.wong@intel.com>
Date: Fri, 9 Aug 2019 14:12:46 +0800
Subject: [PATCH 093/104] net: stmmac: rename stmmac_rx_buffer's addr to
 dma_addr

This rename clarifies the purpose and usage of the variable as there
will be other addresses to be tracked by this struct.

Signed-off-by: Wong, Vincent Por Yin <vincent.por.yin.wong@intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/stmmac.h      |  2 +-
 drivers/net/ethernet/stmicro/stmmac/stmmac_main.c | 12 ++++++------
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac.h b/drivers/net/ethernet/stmicro/stmmac/stmmac.h
index e99e5ed615c2..c0fb8eb1fcb5 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac.h
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac.h
@@ -66,7 +66,7 @@ struct stmmac_tx_queue {
 
 struct stmmac_rx_buffer {
 	struct page *page;
-	dma_addr_t addr;
+	dma_addr_t dma_addr;
 };
 
 struct stmmac_rx_queue {
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index 060c107b807c..25e1f3671099 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -1240,8 +1240,8 @@ static int stmmac_init_rx_buffers(struct stmmac_priv *priv, struct dma_desc *p,
 	if (!buf->page)
 		return -ENOMEM;
 
-	buf->addr = page_pool_get_dma_addr(buf->page);
-	stmmac_set_desc_addr(priv, p, buf->addr);
+	buf->dma_addr = page_pool_get_dma_addr(buf->page);
+	stmmac_set_desc_addr(priv, p, buf->dma_addr);
 	if (priv->dma_buf_sz == BUF_SIZE_16KiB)
 		stmmac_init_desc3(priv, p);
 
@@ -3868,15 +3868,15 @@ static inline void stmmac_rx_refill(struct stmmac_priv *priv, u32 queue)
 				break;
 		}
 
-		buf->addr = page_pool_get_dma_addr(buf->page);
+		buf->dma_addr = page_pool_get_dma_addr(buf->page);
 
 		/* Sync whole allocation to device. This will invalidate old
 		 * data.
 		 */
-		dma_sync_single_for_device(priv->device, buf->addr, len,
+		dma_sync_single_for_device(priv->device, buf->dma_addr, len,
 					   DMA_FROM_DEVICE);
 
-		stmmac_set_desc_addr(priv, p, buf->addr);
+		stmmac_set_desc_addr(priv, p, buf->dma_addr);
 		stmmac_refill_desc3(priv, rx_q, p);
 
 		rx_q->rx_count_frames++;
@@ -4011,7 +4011,7 @@ static int stmmac_rx(struct stmmac_priv *priv, int limit, u32 queue)
 				continue;
 			}
 
-			dma_sync_single_for_cpu(priv->device, buf->addr,
+			dma_sync_single_for_cpu(priv->device, buf->dma_addr,
 						frame_len, DMA_FROM_DEVICE);
 			skb_copy_to_linear_data(skb, page_address(buf->page),
 						frame_len);
-- 
2.17.1

