From 6888d8c696691765da7b9043672023f37e2c79f7 Mon Sep 17 00:00:00 2001
From: "Li, Lili" <lili.li@intel.com>
Date: Mon, 2 Mar 2020 15:27:11 +0800
Subject: [PATCH] Revert "serial: 8250_port: remove legacy PM code"

This reverts commit 06a3e549f09b849d7941cc266a194d7a0060c822.
---
 drivers/tty/serial/8250/8250_port.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/tty/serial/8250/8250_port.c b/drivers/tty/serial/8250/8250_port.c
index f61444ae8ded..779692dad69e 100644
--- a/drivers/tty/serial/8250/8250_port.c
+++ b/drivers/tty/serial/8250/8250_port.c
@@ -580,12 +580,16 @@ EXPORT_SYMBOL_GPL(serial8250_clear_and_reinit_fifos);
 
 void serial8250_rpm_get(struct uart_8250_port *p)
 {
+	if (!(p->capabilities & UART_CAP_RPM))
+		return;
 	pm_runtime_get_sync(p->port.dev);
 }
 EXPORT_SYMBOL_GPL(serial8250_rpm_get);
 
 void serial8250_rpm_put(struct uart_8250_port *p)
 {
+	if (!(p->capabilities & UART_CAP_RPM))
+		return;
 	pm_runtime_mark_last_busy(p->port.dev);
 	pm_runtime_put_autosuspend(p->port.dev);
 }
@@ -669,6 +673,9 @@ void serial8250_rpm_get_tx(struct uart_8250_port *p)
 {
 	unsigned char rpm_active;
 
+	if (!(p->capabilities & UART_CAP_RPM))
+		return;
+
 	rpm_active = xchg(&p->rpm_tx_active, 1);
 	if (rpm_active)
 		return;
@@ -685,6 +692,9 @@ void serial8250_rpm_put_tx(struct uart_8250_port *p)
 {
 	unsigned char rpm_active;
 
+	if (!(p->capabilities & UART_CAP_RPM))
+		return;
+
 	rpm_active = xchg(&p->rpm_tx_active, 0);
 	if (!rpm_active)
 		return;
@@ -1747,6 +1757,8 @@ void serial8250_tx_chars(struct uart_8250_port *up)
 	 * HW can go idle. So we get here once again with empty FIFO and disable
 	 * the interrupt and RPM in __stop_tx()
 	 */
+	if (uart_circ_empty(xmit) && !(up->capabilities & UART_CAP_RPM))
+		__stop_tx(up);
 }
 EXPORT_SYMBOL_GPL(serial8250_tx_chars);
 
-- 
2.17.1

