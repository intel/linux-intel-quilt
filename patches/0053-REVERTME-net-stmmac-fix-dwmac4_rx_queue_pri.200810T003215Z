From 88770f8a7e0983427a7e52ec1b280f0da7e3b0e3 Mon Sep 17 00:00:00 2001
From: "Wong, Vincent Por Yin" <vincent.por.yin.wong@intel.com>
Date: Mon, 15 Jun 2020 13:12:12 +0800
Subject: [PATCH 53/78] REVERTME: net: stmmac: fix dwmac4_rx_queue_priority
 overwrite issue

If dwmac4_rx_queue_priority() is called on a queue for the second
time, it will overwrite any previous rx_queue_priority set,
effectively allowing only 1 VLAN priority to be specified on an
RX queue at a time. This was due to the value being overwritten by
the GMAC_RXQCTRL_PSRQX_MASK.

There's no need to use GMAC_RXQCTRL_PSRQX_MASK again, so we only
do it once by introducing a condition.

This is a REVERTME as the dwmac4_rx_queue_priority() may be used
by stmmac_mac_config_rx_queues_prio() via a setting in stmmac_pci.c
and a more compatible solution may be required, upon further
testing and (possibly) a tc_del_flow extension for rx queue priorities.

Signed-off-by: Wong, Vincent Por Yin <vincent.por.yin.wong@intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/dwmac4_core.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/dwmac4_core.c b/drivers/net/ethernet/stmicro/stmmac/dwmac4_core.c
index 06d98cab3c12..d3153dd8f876 100644
--- a/drivers/net/ethernet/stmicro/stmmac/dwmac4_core.c
+++ b/drivers/net/ethernet/stmicro/stmmac/dwmac4_core.c
@@ -143,7 +143,9 @@ static void dwmac4_rx_queue_priority(struct mac_device_info *hw,
 
 	value = readl(ioaddr + base_register);
 
-	value &= ~GMAC_RXQCTRL_PSRQX_MASK(queue);
+	if (!value)
+		value &= ~GMAC_RXQCTRL_PSRQX_MASK(queue);
+
 	value |= (prio << GMAC_RXQCTRL_PSRQX_SHIFT(queue)) &
 						GMAC_RXQCTRL_PSRQX_MASK(queue);
 	writel(value, ioaddr + base_register);
-- 
2.17.1

