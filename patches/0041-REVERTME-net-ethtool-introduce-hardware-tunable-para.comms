From bfabb1d143ff01b52dc4a76e8d8874623e2964c6 Mon Sep 17 00:00:00 2001
From: Ong Boon Leong <boon.leong.ong@intel.com>
Date: Sat, 14 Jul 2018 07:26:35 +0800
Subject: [PATCH 41/58] REVERTME: net: ethtool: introduce hardware tunable
 parameter for IEEE802.1 Qbu

This patch is kept here for IP validation purpose as the TSN framework
supports for IEEE 802.1Qbu is not defined yet.

'tx-fpe-afsz' is meant to change the non-final fragment size of preempted
frame. A smaller value here means express frame will be transmitted by
express MAC as soon as preempted MAC (pMAC) has collected the configured
fragment size, default to 64-byte fragment.

'tx-fpe-hadv' is meant to specify the time (in nano-seconds) for pMAC to
switch from release to hold state in advance.

'tx-fpe-radv' is meant to specify the time (in nano-seconds) for pMAC to
switch from hold to release state in advance.

Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
---
 include/uapi/linux/ethtool.h | 3 +++
 net/core/ethtool.c           | 6 ++++++
 2 files changed, 9 insertions(+)

diff --git a/include/uapi/linux/ethtool.h b/include/uapi/linux/ethtool.h
index 61adb85..a7a545d 100644
--- a/include/uapi/linux/ethtool.h
+++ b/include/uapi/linux/ethtool.h
@@ -230,6 +230,9 @@ enum tunable_id {
 	ETHTOOL_TX_EST_TILS,		/* EST: time interval left shift */
 	ETHTOOL_TX_EST_PTOV,		/* EST: PTP time offset */
 	ETHTOOL_TX_EST_CTOV,		/* EST: Current time offset */
+	ETHTOOL_TX_FPE_AFSZ,		/* FPE: Additional Frag Size */
+	ETHTOOL_TX_FPE_HADV,		/* FPE: Hold Advance */
+	ETHTOOL_TX_FPE_RADV,		/* FPE: Release Advance */
 	/*
 	 * Add your fresh new tunable attribute above and remember to update
 	 * tunable_strings[] in net/core/ethtool.c
diff --git a/net/core/ethtool.c b/net/core/ethtool.c
index d8d6b9d..af4424e 100644
--- a/net/core/ethtool.c
+++ b/net/core/ethtool.c
@@ -131,6 +131,9 @@ tunable_strings[__ETHTOOL_TUNABLE_COUNT][ETH_GSTRING_LEN] = {
 	[ETHTOOL_TX_EST_TILS]	= "tx-est-tils",
 	[ETHTOOL_TX_EST_PTOV]	= "tx-est-ptov",
 	[ETHTOOL_TX_EST_CTOV]	= "tx-est-ctov",
+	[ETHTOOL_TX_FPE_AFSZ]	= "tx-fpe-afsz",
+	[ETHTOOL_TX_FPE_HADV]	= "tx-fpe-hadv",
+	[ETHTOOL_TX_FPE_RADV]	= "tx-fpe-radv",
 };
 
 static const char
@@ -2314,6 +2317,9 @@ static int ethtool_tunable_valid(const struct ethtool_tunable *tuna)
 	case ETHTOOL_TX_EST_TILS:
 	case ETHTOOL_TX_EST_PTOV:
 	case ETHTOOL_TX_EST_CTOV:
+	case ETHTOOL_TX_FPE_AFSZ:
+	case ETHTOOL_TX_FPE_HADV:
+	case ETHTOOL_TX_FPE_RADV:
 		if (tuna->len != sizeof(u32) ||
 		    tuna->type_id != ETHTOOL_TUNABLE_U32)
 			return -EINVAL;
-- 
2.7.4

