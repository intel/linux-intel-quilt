From 0b45afa46200e8fded9854dd674a299842178ad2 Mon Sep 17 00:00:00 2001
From: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date: Thu, 19 Dec 2024 15:55:39 +0200
Subject: [PATCH 22/22] i3c: mipi-i3c-hci: Add extra checks for Intel specific
 ring resuming

Do Intel specific ring resuming only when ring is already stopped and
only after transfer error. Ring stop followed by run should be harmless
on non-Intel HW when ring is already stopped and resuming is perhaps
needless after ABORT command.

TODO:
Prior sending upstream squash this with
"i3c: mipi-i3c-hci: Add Intel specific quirk to ring resuming".

Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
---
 drivers/i3c/master/mipi-i3c-hci/dma.c | 23 +++++++++++++++--------
 1 file changed, 15 insertions(+), 8 deletions(-)

diff --git a/drivers/i3c/master/mipi-i3c-hci/dma.c b/drivers/i3c/master/mipi-i3c-hci/dma.c
index 1ef0b206f726..cf9514f84423 100644
--- a/drivers/i3c/master/mipi-i3c-hci/dma.c
+++ b/drivers/i3c/master/mipi-i3c-hci/dma.c
@@ -758,17 +758,24 @@ static bool hci_dma_irq_handler(struct i3c_hci *hci)
 			complete(&rh->op_done);
 
 		if (status & INTR_TRANSFER_ABORT) {
+			u32 ring_status;
+
 			dev_notice_ratelimited(&hci->master.dev,
 				"ring %d: Transfer Aborted\n", i);
 			mipi_i3c_hci_resume(hci);
-			/*
-			 * REVISIT: Ring stop followed by run is an Intel
-			 * specific required quirk on early MIPI I3C HCI HW
-			 * after resuming the controller.
-			 */
-			rh_reg_write(RING_CONTROL, RING_CTRL_ENABLE);
-			rh_reg_write(RING_CONTROL, RING_CTRL_ENABLE |
-						   RING_CTRL_RUN_STOP);
+			ring_status = rh_reg_read(RING_STATUS);
+			if (!(ring_status & RING_STATUS_RUNNING) &&
+			    status & INTR_TRANSFER_COMPLETION &&
+			    status & INTR_TRANSFER_ERR) {
+				/*
+				 * Ring stop followed by run is an Intel
+				 * specific required quirk after resuming
+				 * the controller.
+				 */
+				rh_reg_write(RING_CONTROL, RING_CTRL_ENABLE);
+				rh_reg_write(RING_CONTROL, RING_CTRL_ENABLE |
+							   RING_CTRL_RUN_STOP);
+			}
 		}
 		if (status & INTR_WARN_INS_STOP_MODE)
 			dev_warn_ratelimited(&hci->master.dev,
-- 
2.25.1

