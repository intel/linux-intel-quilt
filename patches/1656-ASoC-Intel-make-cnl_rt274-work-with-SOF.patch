From dc0402a10a42df5773eab71c43f95e165dc02003 Mon Sep 17 00:00:00 2001
From: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date: Thu, 17 May 2018 20:43:51 -0500
Subject: [PATCH 1656/2328] ASoC: Intel: make cnl_rt274 work with SOF

(0)fix alignment issues for upstream
(1)refine machine driver to make it work with sof
(2)disable DMIC for it is not ready now

Signed-off-by: Rander Wang <rander.wang@linux.intel.com>
Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Signed-off-by: Keyon Jie <yang.jie@linux.intel.com>
---
 sound/soc/intel/boards/cnl_rt274.c | 52 +++++++++++++++++++++-----------------
 1 file changed, 29 insertions(+), 23 deletions(-)

diff --git a/sound/soc/intel/boards/cnl_rt274.c b/sound/soc/intel/boards/cnl_rt274.c
index 9309e5b..38f4d78 100644
--- a/sound/soc/intel/boards/cnl_rt274.c
+++ b/sound/soc/intel/boards/cnl_rt274.c
@@ -69,7 +69,7 @@ static struct snd_soc_dai *cnl_get_codec_dai(struct snd_soc_card *card,
 }
 
 static int cnl_rt274_clock_control(struct snd_soc_dapm_widget *w,
-		struct snd_kcontrol *k, int  event)
+				   struct snd_kcontrol *k, int  event)
 {
 	struct snd_soc_dapm_context *dapm = w->dapm;
 	struct snd_soc_card *card = dapm->card;
@@ -129,8 +129,8 @@ static const struct snd_soc_dapm_widget cnl_rt274_widgets[] = {
 	SND_SOC_DAPM_MIC("Mic Jack", NULL),
 	SND_SOC_DAPM_MIC("SoC DMIC", NULL),
 	SND_SOC_DAPM_SUPPLY("Platform Clock", SND_SOC_NOPM, 0, 0,
-			cnl_rt274_clock_control, SND_SOC_DAPM_PRE_PMU |
-			SND_SOC_DAPM_POST_PMD),
+			    cnl_rt274_clock_control, SND_SOC_DAPM_PRE_PMU |
+			    SND_SOC_DAPM_POST_PMD),
 };
 
 static const struct snd_soc_pcm_stream dai_params_codec = {
@@ -141,16 +141,6 @@ static const struct snd_soc_pcm_stream dai_params_codec = {
 	.channels_max = 2,
 };
 
-static int cnl_dmic_fixup(struct snd_soc_pcm_runtime *rtd,
-				struct snd_pcm_hw_params *params)
-{
-	struct snd_interval *channels = hw_param_interval(params,
-						SNDRV_PCM_HW_PARAM_CHANNELS);
-	channels->min = channels->max = 2;
-
-	return 0;
-}
-
 static const struct snd_soc_dapm_route cnl_map[] = {
 	{"Headphone Jack", NULL, "HPO Pin"},
 	{"MIC", NULL, "Mic Jack"},
@@ -195,8 +185,9 @@ static int cnl_rt274_init(struct snd_soc_pcm_runtime *runtime)
 	struct snd_soc_dai *codec_dai = runtime->codec_dai;
 
 	ret = snd_soc_card_jack_new(runtime->card, "Headset",
-		SND_JACK_HEADSET, &cnl_headset,
-		cnl_headset_pins, ARRAY_SIZE(cnl_headset_pins));
+				    SND_JACK_HEADSET, &cnl_headset,
+				    cnl_headset_pins,
+				    ARRAY_SIZE(cnl_headset_pins));
 
 	if (ret)
 		return ret;
@@ -216,18 +207,20 @@ static int cnl_rt274_init(struct snd_soc_pcm_runtime *runtime)
 }
 
 static int cnl_be_fixup(struct snd_soc_pcm_runtime *rtd,
-			    struct snd_pcm_hw_params *params)
+			struct snd_pcm_hw_params *params)
 {
 	struct snd_interval *rate = hw_param_interval(params,
 			SNDRV_PCM_HW_PARAM_RATE);
 	struct snd_interval *channels = hw_param_interval(params,
 						SNDRV_PCM_HW_PARAM_CHANNELS);
 
-	rate->min = rate->max = CNL_BE_FIXUP_RATE;
-	channels->min = channels->max = 2;
+	rate->min = CNL_BE_FIXUP_RATE;
+	rate->max = CNL_BE_FIXUP_RATE;
+	channels->min = 2;
+	channels->max = 2;
 	snd_mask_none(hw_param_mask(params, SNDRV_PCM_HW_PARAM_FORMAT));
 	snd_mask_set(hw_param_mask(params, SNDRV_PCM_HW_PARAM_FORMAT),
-						SNDRV_PCM_FORMAT_S24_LE);
+		     SNDRV_PCM_FORMAT_S24_LE);
 
 	return 0;
 }
@@ -237,8 +230,19 @@ static const char pname[] = "0000:02:18.0";
 static const char cname[] = "rt274.0-001c";
 #else
 static const char pname[] = "0000:00:1f.3";
-static const char cname[] = "i2c-INT34C2:00";
 #endif
+static int cnl_dmic_fixup(struct snd_soc_pcm_runtime *rtd,
+			  struct snd_pcm_hw_params *params)
+{
+	struct snd_interval *channels = hw_param_interval(params,
+						SNDRV_PCM_HW_PARAM_CHANNELS);
+	channels->min = 2;
+	channels->max = 2;
+
+	return 0;
+}
+
+static const char cname[] = "i2c-INT34C2:00";
 
 struct snd_soc_dai_link cnl_rt274_msic_dailink[] = {
 	/* Trace Buffer DAI links */
@@ -312,7 +316,6 @@ struct snd_soc_dai_link cnl_rt274_msic_dailink[] = {
 		.cpu_dai_name = "SSP0 Pin",
 		.codec_name = cname,
 		.codec_dai_name = "rt274-aif1",
-		.platform_name = pname,
 		.be_hw_params_fixup = cnl_be_fixup,
 		.ignore_suspend = 1,
 		.no_pcm = 1,
@@ -328,7 +331,6 @@ struct snd_soc_dai_link cnl_rt274_msic_dailink[] = {
 		.cpu_dai_name = "DMIC01 Pin",
 		.codec_name = "dmic-codec",
 		.codec_dai_name = "dmic-hifi",
-		.platform_name = pname,
 		.ignore_suspend = 1,
 		.no_pcm = 1,
 		.dpcm_capture = 1,
@@ -380,6 +382,7 @@ struct snd_soc_dai_link cnl_rt274_msic_dailink[] = {
 	},
 };
 
+#if !IS_ENABLED(CONFIG_SND_SOC_SOF_INTEL)
 static int
 cnl_add_dai_link(struct snd_soc_card *card, struct snd_soc_dai_link *link)
 {
@@ -445,6 +448,7 @@ static int cnl_card_late_probe(struct snd_soc_card *card)
 
 	return hdac_hdmi_jack_port_init(codec, &card->dapm);
 }
+#endif
 
 /* SoC card */
 static struct snd_soc_card snd_soc_card_cnl = {
@@ -457,9 +461,11 @@ static struct snd_soc_card snd_soc_card_cnl = {
 	.num_dapm_routes = ARRAY_SIZE(cnl_map),
 	.controls = cnl_controls,
 	.num_controls = ARRAY_SIZE(cnl_controls),
-	.add_dai_link = cnl_add_dai_link,
 	.fully_routed = true,
+#if !IS_ENABLED(CONFIG_SND_SOC_SOF_INTEL)
+	.add_dai_link = cnl_add_dai_link,
 	.late_probe = cnl_card_late_probe,
+#endif
 };
 
 static int snd_cnl_rt274_mc_probe(struct platform_device *pdev)
-- 
2.7.4

