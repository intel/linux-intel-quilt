From 7f9c195e071c20959b557fb5277ff2f9f18ef12e Mon Sep 17 00:00:00 2001
From: Traian Schiau <traianx.schiau@intel.com>
Date: Tue, 3 Nov 2015 12:50:55 +0200
Subject: [PATCH 23/63] intel_th: Use saved nwsa only when msc is disabled

Use the saved nwsa only when msc is disabled, otherwise use the value
provided by MSCxNWSA register.
The nswa (next window start address) backup was introduced to have a
valid starting window for post capture dumping in case of in memory
tracing, but a regresion was introduced for "online" memory tracing
(eg. dvc).

Signed-off-by: Traian Schiau <traianx.schiau@intel.com>
---
 drivers/hwtracing/intel_th/msu.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/drivers/hwtracing/intel_th/msu.c b/drivers/hwtracing/intel_th/msu.c
index c179e7558c5b..70d41a0e2e0a 100644
--- a/drivers/hwtracing/intel_th/msu.c
+++ b/drivers/hwtracing/intel_th/msu.c
@@ -281,17 +281,25 @@ static struct msc_window *msc_oldest_window(struct msc *msc)
 {
 	struct msc_window *win;
 	unsigned int found = 0;
+	unsigned long nwsa;
 
 	if (list_empty(&msc->win_list))
 		return NULL;
 
+	if (msc->enabled) {
+		u32 reg = ioread32(msc->reg_base + REG_MSU_MSC0NWSA);
+
+		nwsa = (unsigned long)reg << PAGE_SHIFT;
+	} else {
+		nwsa = msc->nwsa;
+	}
 	/*
 	 * we might need a radix tree for this, depending on how
 	 * many windows a typical user would allocate; ideally it's
 	 * something like 2, in which case we're good
 	 */
 	list_for_each_entry(win, &msc->win_list, entry) {
-		if (win->block[0].addr == msc->nwsa)
+		if (win->block[0].addr == nwsa)
 			found++;
 
 		/* skip the empty ones */
-- 
2.19.1

