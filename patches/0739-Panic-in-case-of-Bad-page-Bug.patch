From 492f1323674839da7a7bf9c0c1e9549fcdaf516f Mon Sep 17 00:00:00 2001
From: Emmanuel Berthier <emmanuel.berthier@intel.com>
Date: Thu, 28 Jul 2016 15:47:23 +0300
Subject: [PATCH 0739/1214] Panic in case of Bad page Bug

Controled by CONFIG_DEBUG_PANIC_ON_BAD_PAGE config switch.

Signed-off-by: Emmanuel Berthier <emmanuel.berthier@intel.com>
---
 mm/Kconfig      | 6 ++++++
 mm/page_alloc.c | 4 ++++
 2 files changed, 10 insertions(+)

diff --git a/mm/Kconfig b/mm/Kconfig
index 036466b..f4afb048 100644
--- a/mm/Kconfig
+++ b/mm/Kconfig
@@ -604,6 +604,12 @@ config PGTABLE_MAPPING
 	  You can check speed with zsmalloc benchmark:
 	  https://github.com/spartacus06/zsmapbench
 
+config DEBUG_PANIC_ON_BAD_PAGE
+	bool "Panic on Bad Page"
+	default n
+	help
+	  Generate a panic in case of Bad Page error detection.
+
 config ZSMALLOC_STAT
 	bool "Export zsmalloc statistics"
 	depends on ZSMALLOC
diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 67b44b7..ccfa29d 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -634,6 +634,10 @@ static void bad_page(struct page *page, const char *reason,
 	/* Leave bad fields for debug, except PageBuddy could make trouble */
 	page_mapcount_reset(page); /* remove PageBuddy */
 	add_taint(TAINT_BAD_PAGE, LOCKDEP_NOW_UNRELIABLE);
+
+#ifdef CONFIG_DEBUG_PANIC_ON_BAD_PAGE
+	panic("Bad page");
+#endif
 }
 
 /*
-- 
2.7.4

