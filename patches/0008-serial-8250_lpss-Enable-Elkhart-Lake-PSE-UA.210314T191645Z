From 5e937468861e9b0a33864d3242533fd74e67e09b Mon Sep 17 00:00:00 2001
From: Raymond Tan <raymond.tan@intel.com>
Date: Thu, 28 May 2020 03:11:23 +0800
Subject: [PATCH 8/9] serial: 8250_lpss: Enable Elkhart Lake PSE UART with DMA
 capability

This patch enables Elkhart Lake PSE UART with DMA support.

Similar to BYT based platform, we do not check for DMA engine availability mainly
because on Elkhart Lake, the PSE DMA is ACPI enumerated to accommodate
for Windows shared DMA resource limitation.

In the event of unavailable PSE DMA engine or the channels have already been
claimed by other IOs, we expect channel request to fail during
serial8250_do_start(), thus falling back to PIO.

Signed-off-by: Raymond Tan <raymond.tan@intel.com>
---
 drivers/tty/serial/8250/8250_lpss.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/tty/serial/8250/8250_lpss.c b/drivers/tty/serial/8250/8250_lpss.c
index 13962fe8605a..a5d3b5f09635 100644
--- a/drivers/tty/serial/8250/8250_lpss.c
+++ b/drivers/tty/serial/8250/8250_lpss.c
@@ -180,6 +180,14 @@ static int byt_serial_setup(struct lpss8250 *lpss, struct uart_port *port)
 
 static int ehl_serial_setup(struct lpss8250 *lpss, struct uart_port *port)
 {
+	struct dw_dma_slave *param = &lpss->dma_param;
+	struct pci_dev *pdev = to_pci_dev(port->dev);
+
+	param->src_id = 0;
+	param->dst_id = 1;
+	param->dma_dev = &pdev->dev;
+	lpss->dma_maxburst = 8;
+
 	return 0;
 }
 
@@ -277,6 +285,8 @@ static int lpss8250_dma_setup(struct lpss8250 *lpss, struct uart_8250_port *port
 	if (!lpss->dma_param.dma_dev)
 		return 0;
 
+	pr_info("%s Enabling DMA for device %s, channel request happened during PORT is opened", __func__, dev_name(dev));
+
 	rx_param = devm_kzalloc(dev, sizeof(*rx_param), GFP_KERNEL);
 	if (!rx_param)
 		return -ENOMEM;
-- 
2.17.1

