From c72d1450d772e427eecf485ee2b2704eff3a179a Mon Sep 17 00:00:00 2001
From: Yu-cheng Yu <yu-cheng.yu@intel.com>
Date: Wed, 19 Aug 2020 14:47:14 -0700
Subject: [PATCH 42/43] x86/cet/shstk: Do WRMSR(MSR_IA32_PL3_SSP) after XRSTORS

Issue WRMSR(MSR_IA32_PL3_SSP) after updating PL3 SSP with XRSTORS for
clone, fork and vfork.
---
 arch/x86/include/asm/cet.h          |  1 +
 arch/x86/include/asm/fpu/internal.h | 14 ++++++++++++++
 arch/x86/kernel/cet.c               |  2 ++
 arch/x86/kernel/fpu/core.c          |  1 +
 4 files changed, 18 insertions(+)

diff --git a/arch/x86/include/asm/cet.h b/arch/x86/include/asm/cet.h
index cf0b77f88fd2..3dce813d8645 100644
--- a/arch/x86/include/asm/cet.h
+++ b/arch/x86/include/asm/cet.h
@@ -14,6 +14,7 @@ struct sc_ext;
 struct cet_status {
 	unsigned long	shstk_base;
 	unsigned long	shstk_size;
+	unsigned int	wrmsr_after_xrstors:1;
 	unsigned int	locked:1;
 	unsigned int	ibt_enabled:1;
 };
diff --git a/arch/x86/include/asm/fpu/internal.h b/arch/x86/include/asm/fpu/internal.h
index cd4249b37f45..64e2ec5fde68 100644
--- a/arch/x86/include/asm/fpu/internal.h
+++ b/arch/x86/include/asm/fpu/internal.h
@@ -73,6 +73,20 @@ static __always_inline __pure bool use_fxsr(void)
 	return static_cpu_has(X86_FEATURE_FXSR);
 }
 
+static inline void wrmsr_after_xrstors(void)
+{
+#ifdef CONFIG_X86_INTEL_SHADOW_STACK_USER
+	if (current->thread.cet.wrmsr_after_xrstors) {
+		struct cet_user_state *cet_user;
+		current->thread.cet.wrmsr_after_xrstors = 0;
+		cet_user = get_xsave_addr(&current->thread.fpu.state.xsave,
+					  XFEATURE_CET_USER);
+		if (cet_user)
+			wrmsrl(MSR_IA32_PL3_SSP, cet_user->user_ssp);
+	}
+#endif
+}
+
 /*
  * fpstate handling functions:
  */
diff --git a/arch/x86/kernel/cet.c b/arch/x86/kernel/cet.c
index 604ff64158b7..7c9804886341 100644
--- a/arch/x86/kernel/cet.c
+++ b/arch/x86/kernel/cet.c
@@ -209,6 +209,8 @@ int cet_setup_thread_shstk(struct task_struct *tsk, unsigned long clone_flags)
 	if (!cet->shstk_size)
 		return 0;
 
+	cet->wrmsr_after_xrstors = 1;
+
 	if ((clone_flags & (CLONE_VFORK | CLONE_VM)) != CLONE_VM)
 		return 0;
 
diff --git a/arch/x86/kernel/fpu/core.c b/arch/x86/kernel/fpu/core.c
index eb86a2b831b1..a68182f1f29c 100644
--- a/arch/x86/kernel/fpu/core.c
+++ b/arch/x86/kernel/fpu/core.c
@@ -403,6 +403,7 @@ void switch_fpu_return(void)
 		return;
 
 	__fpregs_load_activate();
+	wrmsr_after_xrstors();
 }
 EXPORT_SYMBOL_GPL(switch_fpu_return);
 
-- 
2.27.0

