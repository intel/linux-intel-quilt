From 17fbc3fb4851b53d47843ca120c17384f619a943 Mon Sep 17 00:00:00 2001
From: Yonghua Huang <yonghua.huang@intel.com>
Date: Thu, 22 Feb 2018 23:13:21 +0800
Subject: [PATCH 1115/2367] [sos] rename 'cwp_*' header file in VHM

  - cwp_vhm_ioreq.h --> acrn_vhm_ioreq.h
  - cwp_hv_defs.h   --> acrn_hv_defs.h
  - cwp_common.h    --> acrn_common.h
  - cwp_vhm_mm.h    --> acrn_vhm_mm.h

Change-Id: Ic83bd7ddb308658eeb6570ebc26a59d8c564baaf
Tracked-On:226938
Signed-off-by: Yonghua Huang <yonghua.huang@intel.com>
Reviewed-on: https://android.intel.com/619631
---
 Documentation/virtual/cwp/vhm.rst  |   4 +-
 drivers/char/vhm/vhm_dev.c         |   6 +-
 drivers/cwp/sbuf.c                 |   2 +-
 drivers/gpu/drm/i915/gvt/cwpgt.c   |   8 +-
 drivers/vbs/vq.c                   |   2 +-
 drivers/vhm/vhm_hypercall.c        |   2 +-
 drivers/vhm/vhm_ioreq.c            |   4 +-
 drivers/vhm/vhm_mm.c               |   4 +-
 drivers/vhm/vhm_msi.c              |   2 +-
 drivers/vhm/vhm_vm_mngt.c          |   6 +-
 include/linux/vbs/vbs.h            |   4 +-
 include/linux/vhm/acrn_common.h    | 209 +++++++++++++++++++++++++++++++++++++
 include/linux/vhm/acrn_hv_defs.h   | 183 ++++++++++++++++++++++++++++++++
 include/linux/vhm/acrn_vhm_ioreq.h | 192 ++++++++++++++++++++++++++++++++++
 include/linux/vhm/acrn_vhm_mm.h    | 202 +++++++++++++++++++++++++++++++++++
 include/linux/vhm/cwp_common.h     | 209 -------------------------------------
 include/linux/vhm/cwp_hv_defs.h    | 183 --------------------------------
 include/linux/vhm/cwp_vhm_ioreq.h  | 192 ----------------------------------
 include/linux/vhm/cwp_vhm_mm.h     | 202 -----------------------------------
 include/linux/vhm/vhm_ioctl_defs.h |   2 +-
 20 files changed, 809 insertions(+), 809 deletions(-)
 create mode 100644 include/linux/vhm/acrn_common.h
 create mode 100644 include/linux/vhm/acrn_hv_defs.h
 create mode 100644 include/linux/vhm/acrn_vhm_ioreq.h
 create mode 100644 include/linux/vhm/acrn_vhm_mm.h
 delete mode 100644 include/linux/vhm/cwp_common.h
 delete mode 100644 include/linux/vhm/cwp_hv_defs.h
 delete mode 100644 include/linux/vhm/cwp_vhm_ioreq.h
 delete mode 100644 include/linux/vhm/cwp_vhm_mm.h

diff --git a/Documentation/virtual/cwp/vhm.rst b/Documentation/virtual/cwp/vhm.rst
index 215947c..a201fc7 100644
--- a/Documentation/virtual/cwp/vhm.rst
+++ b/Documentation/virtual/cwp/vhm.rst
@@ -8,7 +8,7 @@ Clearwater Pass (CWP) Project.
 APIs:
 -----
 
-.. kernel-doc:: include/linux/vhm/cwp_vhm_ioreq.h
-.. kernel-doc:: include/linux/vhm/cwp_vhm_mm.h
+.. kernel-doc:: include/linux/vhm/acrn_vhm_ioreq.h
+.. kernel-doc:: include/linux/vhm/acrn_vhm_mm.h
 .. kernel-doc:: include/linux/vhm/vhm_ioctl_defs.h
 .. kernel-doc:: include/linux/vhm/vhm_vm_mngt.h
diff --git a/drivers/char/vhm/vhm_dev.c b/drivers/char/vhm/vhm_dev.c
index 1bdde44..86f1afb 100644
--- a/drivers/char/vhm/vhm_dev.c
+++ b/drivers/char/vhm/vhm_dev.c
@@ -77,10 +77,10 @@
 #include <linux/pci.h>
 #include <linux/list.h>
 
-#include <linux/vhm/cwp_hv_defs.h>
+#include <linux/vhm/acrn_hv_defs.h>
 #include <linux/vhm/vhm_ioctl_defs.h>
-#include <linux/vhm/cwp_vhm_ioreq.h>
-#include <linux/vhm/cwp_vhm_mm.h>
+#include <linux/vhm/acrn_vhm_ioreq.h>
+#include <linux/vhm/acrn_vhm_mm.h>
 #include <linux/vhm/vhm_vm_mngt.h>
 #include <linux/vhm/vhm_hypercall.h>
 
diff --git a/drivers/cwp/sbuf.c b/drivers/cwp/sbuf.c
index cd38248..a358232 100644
--- a/drivers/cwp/sbuf.c
+++ b/drivers/cwp/sbuf.c
@@ -57,7 +57,7 @@
 
 #include <linux/gfp.h>
 #include <asm/pgtable.h>
-#include <linux/vhm/cwp_hv_defs.h>
+#include <linux/vhm/acrn_hv_defs.h>
 #include <linux/vhm/vhm_hypercall.h>
 #include "sbuf.h"
 
diff --git a/drivers/gpu/drm/i915/gvt/cwpgt.c b/drivers/gpu/drm/i915/gvt/cwpgt.c
index 490e0f8..f3b96f4 100644
--- a/drivers/gpu/drm/i915/gvt/cwpgt.c
+++ b/drivers/gpu/drm/i915/gvt/cwpgt.c
@@ -34,10 +34,10 @@
 #include <linux/wait.h>
 #include <linux/sched.h>
 
-#include <linux/vhm/cwp_hv_defs.h>
-#include <linux/vhm/cwp_common.h>
-#include <linux/vhm/cwp_vhm_ioreq.h>
-#include <linux/vhm/cwp_vhm_mm.h>
+#include <linux/vhm/acrn_hv_defs.h>
+#include <linux/vhm/acrn_common.h>
+#include <linux/vhm/acrn_vhm_ioreq.h>
+#include <linux/vhm/acrn_vhm_mm.h>
 #include <linux/vhm/vhm_vm_mngt.h>
 
 #include <i915_drv.h>
diff --git a/drivers/vbs/vq.c b/drivers/vbs/vq.c
index 635c4bd..e8435a1 100644
--- a/drivers/vbs/vq.c
+++ b/drivers/vbs/vq.c
@@ -63,7 +63,7 @@
 #include <linux/module.h>
 #include <linux/vbs/vq.h>
 #include <linux/vbs/vbs.h>
-#include <linux/vhm/cwp_vhm_mm.h>
+#include <linux/vhm/acrn_vhm_mm.h>
 
 /* helper function for remote memory map */
 void * paddr_guest2host(struct ctx *ctx, uintptr_t gaddr, size_t len)
diff --git a/drivers/vhm/vhm_hypercall.c b/drivers/vhm/vhm_hypercall.c
index 235c6b2..44fd8a2 100644
--- a/drivers/vhm/vhm_hypercall.c
+++ b/drivers/vhm/vhm_hypercall.c
@@ -49,7 +49,7 @@
  *
  */
 #include <linux/types.h>
-#include <linux/vhm/cwp_hv_defs.h>
+#include <linux/vhm/acrn_hv_defs.h>
 #include <linux/vhm/vhm_hypercall.h>
 
 inline long hcall_get_api_version(unsigned long api_version)
diff --git a/drivers/vhm/vhm_ioreq.c b/drivers/vhm/vhm_ioreq.c
index 74427bc..5c5a00a 100644
--- a/drivers/vhm/vhm_ioreq.c
+++ b/drivers/vhm/vhm_ioreq.c
@@ -60,8 +60,8 @@
 #include <linux/mm.h>
 #include <linux/poll.h>
 #include <linux/delay.h>
-#include <linux/vhm/cwp_common.h>
-#include <linux/vhm/cwp_vhm_ioreq.h>
+#include <linux/vhm/acrn_common.h>
+#include <linux/vhm/acrn_vhm_ioreq.h>
 #include <linux/vhm/vhm_vm_mngt.h>
 #include <linux/vhm/vhm_hypercall.h>
 
diff --git a/drivers/vhm/vhm_mm.c b/drivers/vhm/vhm_mm.c
index 7a3978d..e35b7b2 100644
--- a/drivers/vhm/vhm_mm.c
+++ b/drivers/vhm/vhm_mm.c
@@ -71,8 +71,8 @@
 #include <linux/io.h>
 
 #include <linux/vhm/vhm_ioctl_defs.h>
-#include <linux/vhm/cwp_hv_defs.h>
-#include <linux/vhm/cwp_vhm_mm.h>
+#include <linux/vhm/acrn_hv_defs.h>
+#include <linux/vhm/acrn_vhm_mm.h>
 #include <linux/vhm/vhm_vm_mngt.h>
 #include <linux/vhm/vhm_hypercall.h>
 
diff --git a/drivers/vhm/vhm_msi.c b/drivers/vhm/vhm_msi.c
index 05e166b..83db860 100644
--- a/drivers/vhm/vhm_msi.c
+++ b/drivers/vhm/vhm_msi.c
@@ -53,7 +53,7 @@
 
 #include <linux/msi.h>
 #include <linux/pci.h>
-#include <linux/vhm/cwp_hv_defs.h>
+#include <linux/vhm/acrn_hv_defs.h>
 #include <linux/vhm/vhm_hypercall.h>
 
 #include "../pci/pci.h"
diff --git a/drivers/vhm/vhm_vm_mngt.c b/drivers/vhm/vhm_vm_mngt.c
index 100435d..ea0be4b 100644
--- a/drivers/vhm/vhm_vm_mngt.c
+++ b/drivers/vhm/vhm_vm_mngt.c
@@ -56,10 +56,10 @@
 #include <linux/slab.h>
 #include <linux/init.h>
 #include <asm/processor.h>
-#include <linux/vhm/cwp_hv_defs.h>
+#include <linux/vhm/acrn_hv_defs.h>
 #include <linux/vhm/vhm_ioctl_defs.h>
-#include <linux/vhm/cwp_vhm_ioreq.h>
-#include <linux/vhm/cwp_vhm_mm.h>
+#include <linux/vhm/acrn_vhm_ioreq.h>
+#include <linux/vhm/acrn_vhm_mm.h>
 #include <linux/vhm/vhm_hypercall.h>
 
 LIST_HEAD(vhm_vm_list);
diff --git a/include/linux/vbs/vbs.h b/include/linux/vbs/vbs.h
index 415d637..58457d6 100644
--- a/include/linux/vbs/vbs.h
+++ b/include/linux/vbs/vbs.h
@@ -63,8 +63,8 @@
 #define _VBS_H_
 
 #include <linux/vbs/vbs_common_if.h>
-#include <linux/vhm/cwp_common.h>
-#include <linux/vhm/cwp_vhm_ioreq.h>
+#include <linux/vhm/acrn_common.h>
+#include <linux/vhm/acrn_vhm_ioreq.h>
 
 /**
  * enum IORangeType - type of registers to be handled in VBS-K
diff --git a/include/linux/vhm/acrn_common.h b/include/linux/vhm/acrn_common.h
new file mode 100644
index 00000000..f400e06
--- /dev/null
+++ b/include/linux/vhm/acrn_common.h
@@ -0,0 +1,209 @@
+/*
+ * common definition
+ *
+ * This file is provided under a dual BSD/GPLv2 license.  When using or
+ * redistributing this file, you may do so under either license.
+ *
+ * GPL LICENSE SUMMARY
+ *
+ * Copyright (c) 2017 Intel Corporation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of version 2 of the GNU General Public License as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * BSD LICENSE
+ *
+ * Copyright (C) 2017 Intel Corporation. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ *   * Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ *   * Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in
+ *     the documentation and/or other materials provided with the
+ *     distribution.
+ *   * Neither the name of Intel Corporation nor the names of its
+ *     contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
+#ifndef CWP_COMMON_H
+#define CWP_COMMON_H
+
+/*
+ * Common structures for CWP/VHM/DM
+ */
+
+/*
+ * IO request
+ */
+#define VHM_REQUEST_MAX 16
+
+#define REQ_STATE_PENDING	0
+#define REQ_STATE_SUCCESS	1
+#define REQ_STATE_PROCESSING	2
+#define REQ_STATE_FAILED	-1
+
+#define REQ_PORTIO	0
+#define REQ_MMIO	1
+#define REQ_PCICFG	2
+#define REQ_WP		3
+
+#define REQUEST_READ	0
+#define REQUEST_WRITE	1
+
+struct mmio_request {
+	uint32_t direction;
+	uint32_t reserved;
+	int64_t address;
+	int64_t size;
+	int64_t value;
+} __attribute__((aligned(8)));
+
+struct pio_request {
+	uint32_t direction;
+	uint32_t reserved;
+	int64_t address;
+	int64_t size;
+	int32_t value;
+} __attribute__((aligned(8)));
+
+struct pci_request {
+	uint32_t direction;
+	uint32_t reserved[3];/* need keep same header fields with pio_request */
+	int64_t size;
+	int32_t value;
+	int32_t bus;
+	int32_t dev;
+	int32_t func;
+	int32_t reg;
+} __attribute__((aligned(8)));
+
+/* vhm_request are 256Bytes aligned */
+struct vhm_request {
+	/* offset: 0bytes - 63bytes */
+	union {
+		uint32_t type;
+		int32_t reserved0[16];
+	};
+	/* offset: 64bytes-127bytes */
+	union {
+		struct pio_request pio_request;
+		struct pci_request pci_request;
+		struct mmio_request mmio_request;
+		int64_t reserved1[8];
+	} reqs;
+
+	/* True: valid req which need VHM to process.
+	 * CWP write, VHM read only
+	 **/
+	int32_t valid;
+
+	/* the client which is distributed to handle this request */
+	int32_t client;
+
+	/* 1: VHM had processed and success
+	 *  0: VHM had not yet processed
+	 * -1: VHM failed to process. Invalid request
+	 * VHM write, CWP read only
+	 **/
+	int32_t processed;
+} __attribute__((aligned(256)));
+
+struct vhm_request_buffer {
+	union {
+		struct vhm_request req_queue[VHM_REQUEST_MAX];
+		int8_t reserved[4096];
+	};
+} __attribute__((aligned(4096)));
+
+/* Common API params */
+struct cwp_create_vm {
+	int32_t vmid;	/* OUT: return vmid to VHM. Keep it first field */
+	uint32_t vcpu_num;	/* IN: VM vcpu number */
+	uint8_t	 GUID[16];	/* IN: GUID of this vm */
+	uint8_t	 secure_world_enabled;/* IN: whether Secure World is enabled */
+	uint8_t  reserved[31];	/* Reserved for future use */
+} __attribute__((aligned(8)));
+
+struct cwp_create_vcpu {
+	uint32_t vcpu_id;	/* IN: vcpu id */
+	uint32_t pcpu_id;	/* IN: pcpu id */
+} __attribute__((aligned(8)));
+
+struct cwp_set_ioreq_buffer {
+	uint64_t req_buf;			/* IN: gpa of per VM request_buffer*/
+} __attribute__((aligned(8)));
+
+/*
+ * intr type
+ * IOAPIC: inject interrupt to IOAPIC
+ * ISA: inject interrupt to both PIC and IOAPIC
+ */
+#define	CWP_INTR_TYPE_ISA	0
+#define	CWP_INTR_TYPE_IOAPIC	1
+
+/* For ISA, PIC, IOAPIC etc */
+struct cwp_irqline {
+	uint32_t intr_type;
+	uint32_t reserved;
+	uint64_t pic_irq;        /* IN: for ISA type */
+	uint64_t ioapic_irq;    /* IN: for IOAPIC type, -1 don't inject */
+} __attribute__((aligned(8)));
+
+/* For MSI type inject */
+struct cwp_msi_entry {
+	uint64_t msi_addr;	/* IN: addr[19:12] with dest vcpu id */
+	uint64_t msi_data;	/* IN: data[7:0] with vector */
+} __attribute__((aligned(8)));
+
+/* For NMI inject */
+struct cwp_nmi_entry {
+	int64_t vcpuid;		/* IN: -1 means vcpu0 */
+} __attribute__((aligned(8)));
+
+struct cwp_vm_pci_msix_remap {
+	uint16_t virt_bdf;	/* IN: Device virtual BDF# */
+	uint16_t phys_bdf;	/* IN: Device physical BDF# */
+	uint16_t msi_ctl;		/* IN: PCI MSI/x cap control data */
+	uint16_t reserved;
+	uint64_t msi_addr;		/* IN/OUT: msi address to fix */
+	uint32_t msi_data;		/* IN/OUT: msi data to fix */
+	int32_t msix;			/* IN: 0 - MSI, 1 - MSI-X */
+	int32_t msix_entry_index;	/* IN: MSI-X the entry table index */
+	/* IN: Vector Control for MSI-X Entry, field defined in MSIX spec */
+	uint32_t vector_ctl;
+} __attribute__((aligned(8)));
+
+/* It's designed to support passing DM config data pointer, based on it,
+ * hypervisor would parse then pass DM defined configration to GUEST vcpu
+ * when booting guest VM.
+ * the address 0xd0000 here is designed by DM, as it arranged all memory
+ * layout below 1M, DM should make sure there is no overlap for the address
+ * 0xd0000 usage.
+ */
+#define GUEST_CFG_OFFSET 	0xd0000
+
+#endif /* CWP_COMMON_H */
diff --git a/include/linux/vhm/acrn_hv_defs.h b/include/linux/vhm/acrn_hv_defs.h
new file mode 100644
index 00000000..636922d
--- /dev/null
+++ b/include/linux/vhm/acrn_hv_defs.h
@@ -0,0 +1,183 @@
+/*
+ * hypercall definition
+ *
+ * This file is provided under a dual BSD/GPLv2 license.  When using or
+ * redistributing this file, you may do so under either license.
+ *
+ * GPL LICENSE SUMMARY
+ *
+ * Copyright (c) 2017 Intel Corporation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of version 2 of the GNU General Public License as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * BSD LICENSE
+ *
+ * Copyright (C) 2017 Intel Corporation. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ *   * Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ *   * Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in
+ *     the documentation and/or other materials provided with the
+ *     distribution.
+ *   * Neither the name of Intel Corporation nor the names of its
+ *     contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
+#ifndef CWP_HV_DEFS_H
+#define CWP_HV_DEFS_H
+
+/*
+ * Common structures for CWP/VHM/DM
+ */
+#include "acrn_common.h"
+
+/*
+ * Common structures for HV/VHM
+ */
+
+#define _HC_ID(x, y) (((x)<<24)|(y))
+
+#define HC_ID 0x80UL
+
+/* general */
+#define HC_ID_GEN_BASE               0x0UL
+#define HC_GET_API_VERSION          _HC_ID(HC_ID, HC_ID_GEN_BASE + 0x00)
+
+/* VM management */
+#define HC_ID_VM_BASE               0x10UL
+#define HC_CREATE_VM                _HC_ID(HC_ID, HC_ID_VM_BASE + 0x00)
+#define HC_DESTROY_VM               _HC_ID(HC_ID, HC_ID_VM_BASE + 0x01)
+#define HC_START_VM                 _HC_ID(HC_ID, HC_ID_VM_BASE + 0x02)
+#define HC_PAUSE_VM                 _HC_ID(HC_ID, HC_ID_VM_BASE + 0x03)
+#define HC_CREATE_VCPU              _HC_ID(HC_ID, HC_ID_VM_BASE + 0x04)
+
+/* IRQ and Interrupts */
+#define HC_ID_IRQ_BASE              0x20UL
+#define HC_ASSERT_IRQLINE           _HC_ID(HC_ID, HC_ID_IRQ_BASE + 0x00)
+#define HC_DEASSERT_IRQLINE         _HC_ID(HC_ID, HC_ID_IRQ_BASE + 0x01)
+#define HC_PULSE_IRQLINE            _HC_ID(HC_ID, HC_ID_IRQ_BASE + 0x02)
+#define HC_INJECT_MSI               _HC_ID(HC_ID, HC_ID_IRQ_BASE + 0x03)
+
+/* DM ioreq management */
+#define HC_ID_IOREQ_BASE            0x30UL
+#define HC_SET_IOREQ_BUFFER         _HC_ID(HC_ID, HC_ID_IOREQ_BASE + 0x00)
+#define HC_NOTIFY_REQUEST_FINISH    _HC_ID(HC_ID, HC_ID_IOREQ_BASE + 0x01)
+
+/* Guest memory management */
+#define HC_ID_MEM_BASE              0x40UL
+#define HC_VM_SET_MEMMAP            _HC_ID(HC_ID, HC_ID_MEM_BASE + 0x00)
+#define HC_VM_GPA2HPA               _HC_ID(HC_ID, HC_ID_MEM_BASE + 0x01)
+
+/* PCI assignment*/
+#define HC_ID_PCI_BASE              0x50UL
+#define HC_ASSIGN_PTDEV             _HC_ID(HC_ID, HC_ID_PCI_BASE + 0x00)
+#define HC_DEASSIGN_PTDEV           _HC_ID(HC_ID, HC_ID_PCI_BASE + 0x01)
+#define HC_VM_PCI_MSIX_REMAP        _HC_ID(HC_ID, HC_ID_PCI_BASE + 0x02)
+#define HC_SET_PTDEV_INTR_INFO      _HC_ID(HC_ID, HC_ID_PCI_BASE + 0x03)
+#define HC_RESET_PTDEV_INTR_INFO    _HC_ID(HC_ID, HC_ID_PCI_BASE + 0x04)
+
+/* DEBUG */
+#define HC_ID_DBG_BASE              0x60UL
+#define HC_SETUP_SBUF               _HC_ID(HC_ID, HC_ID_DBG_BASE + 0x00)
+
+#define CWP_DOM0_VMID (0UL)
+#define CWP_INVALID_VMID (-1)
+#define CWP_INVALID_HPA (-1UL)
+
+/* Generic memory attributes */
+#define	MEM_ACCESS_READ                 0x00000001
+#define	MEM_ACCESS_WRITE                0x00000002
+#define	MEM_ACCESS_EXEC	                0x00000004
+#define	MEM_ACCESS_RWX			(MEM_ACCESS_READ | MEM_ACCESS_WRITE | \
+						MEM_ACCESS_EXEC)
+#define MEM_ACCESS_RIGHT_MASK           0x00000007
+#define	MEM_TYPE_WB                     0x00000040
+#define	MEM_TYPE_WT                     0x00000080
+#define	MEM_TYPE_UC                     0x00000100
+#define	MEM_TYPE_WC                     0x00000200
+#define	MEM_TYPE_WP                     0x00000400
+#define MEM_TYPE_MASK                   0x000007C0
+
+struct vm_set_memmap {
+#define MAP_MEM		0
+#define MAP_MMIO	1
+#define MAP_UNMAP	2
+	uint32_t type;
+	uint32_t reserved;
+
+	/* IN: beginning guest GPA to map */
+	uint64_t remote_gpa;
+
+	/* IN: VM0's GPA which foreign gpa will be mapped to */
+	uint64_t vm0_gpa;
+
+	/* IN: length of the range */
+	uint64_t length;
+
+	/* IN: mem attr */
+	uint32_t prot;
+} __attribute__((aligned(8)));
+
+struct sbuf_setup_param {
+	uint32_t pcpu_id;
+	uint32_t sbuf_id;
+	uint64_t gpa;
+} __attribute__((aligned(8)));
+
+struct vm_gpa2hpa {
+	uint64_t gpa;		/* IN: gpa to translation */
+	uint64_t hpa;		/* OUT: -1 means invalid gpa */
+} __attribute__((aligned(8)));
+
+struct hc_ptdev_irq {
+#define IRQ_INTX 0
+#define IRQ_MSI 1
+#define IRQ_MSIX 2
+	uint32_t type;
+	uint16_t virt_bdf;	/* IN: Device virtual BDF# */
+	uint16_t phys_bdf;	/* IN: Device physical BDF# */
+	union {
+		struct {
+			uint32_t virt_pin;	/* IN: virtual IOAPIC pin */
+			uint32_t phys_pin;	/* IN: physical IOAPIC pin */
+			uint32_t pic_pin;	/* IN: pin from PIC? */
+		} intx;
+		struct {
+			/* IN: vector count of MSI/MSIX */
+			uint32_t vector_cnt;
+		} msix;
+	};
+} __attribute__((aligned(8)));
+
+struct hc_api_version {
+	uint32_t major_version;
+	uint32_t minor_version;
+} __attribute__((aligned(8)));
+
+#endif /* CWP_HV_DEFS_H */
diff --git a/include/linux/vhm/acrn_vhm_ioreq.h b/include/linux/vhm/acrn_vhm_ioreq.h
new file mode 100644
index 00000000..a159ab9
--- /dev/null
+++ b/include/linux/vhm/acrn_vhm_ioreq.h
@@ -0,0 +1,192 @@
+/*
+ * virtio and hyperviosr service module (VHM): ioreq multi client feature
+ *
+ * This file is provided under a dual BSD/GPLv2 license.  When using or
+ * redistributing this file, you may do so under either license.
+ *
+ * GPL LICENSE SUMMARY
+ *
+ * Copyright (c) 2017 Intel Corporation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of version 2 of the GNU General Public License as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * BSD LICENSE
+ *
+ * Copyright (C) 2017 Intel Corporation. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ *   * Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ *   * Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in
+ *     the documentation and/or other materials provided with the
+ *     distribution.
+ *   * Neither the name of Intel Corporation nor the names of its
+ *     contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * Jason Chen CJ <jason.cj.chen@intel.com>
+ *
+ */
+
+/**
+ * @file acrn_vhm_ioreq.h
+ *
+ * @brief Virtio and Hypervisor Module(VHM) ioreq APIs
+ */
+
+#ifndef __CWP_VHM_IOREQ_H__
+#define __CWP_VHM_IOREQ_H__
+
+#include <linux/poll.h>
+#include <linux/vhm/vhm_vm_mngt.h>
+
+typedef	int (*ioreq_handler_t)(int client_id, int req);
+
+/**
+ * cwp_ioreq_create_client - create ioreq client
+ *
+ * @vmid: ID to identify guest
+ * @handler: ioreq_handler of ioreq client
+ *           If client want request handled in client thread context, set
+ *           this parameter to NULL. If client want request handled out of
+ *           client thread context, set handler function pointer of its own.
+ *           VHM will create kernel thread and call handler to handle request
+ *
+ * @name: the name of ioreq client
+ *
+ * Return: client id on success, <0 on error
+ */
+int cwp_ioreq_create_client(unsigned long vmid, ioreq_handler_t handler,
+	char *name);
+
+/**
+ * cwp_ioreq_destroy_client - destroy ioreq client
+ *
+ * @client_id: client id to identify ioreq client
+ *
+ * Return:
+ */
+void cwp_ioreq_destroy_client(int client_id);
+
+/**
+ * cwp_ioreq_add_iorange - add iorange monitored by ioreq client
+ *
+ * @client_id: client id to identify ioreq client
+ * @type: iorange type
+ * @start: iorange start address
+ * @end: iorange end address
+ *
+ * Return: 0 on success, <0 on error
+ */
+int cwp_ioreq_add_iorange(int client_id, uint32_t type,
+	long start, long end);
+
+/**
+ * cwp_ioreq_del_iorange - del iorange monitored by ioreq client
+ *
+ * @client_id: client id to identify ioreq client
+ * @type: iorange type
+ * @start: iorange start address
+ * @end: iorange end address
+ *
+ * Return: 0 on success, <0 on error
+ */
+int cwp_ioreq_del_iorange(int client_id, uint32_t type,
+	long start, long end);
+
+/**
+ * cwp_ioreq_get_reqbuf - get request buffer
+ * request buffer is shared by all clients in one guest
+ *
+ * @client_id: client id to identify ioreq client
+ *
+ * Return: pointer to request buffer, NULL on error
+ */
+struct vhm_request *cwp_ioreq_get_reqbuf(int client_id);
+
+/**
+ * cwp_ioreq_attach_client - start handle request for ioreq client
+ * If request is handled out of client thread context, this function is
+ * only called once to be ready to handle new request.
+ *
+ * If request is handled in client thread context, this function must
+ * be called every time after the previous request handling is completed
+ * to be ready to handle new request.
+ *
+ * @client_id: client id to identify ioreq client
+ * @check_kthread_stop: whether check current kthread should be stopped
+ *
+ * Return: 0 on success, <0 on error, 1 if ioreq client is destroying
+ */
+int cwp_ioreq_attach_client(int client_id, bool check_kthread_stop);
+
+/**
+ * cwp_ioreq_distribute_request - deliver request to corresponding client
+ *
+ * @vm: pointer to guest
+ *
+ * Return: 0 always
+ */
+int cwp_ioreq_distribute_request(struct vhm_vm *vm);
+
+/**
+ * cwp_ioreq_complete_request - notify guest request handling is completed
+ *
+ * @client_id: client id to identify ioreq client
+ * @vcpu: identify request submitter
+ *
+ * Return: 0 on success, <0 on error
+ */
+int cwp_ioreq_complete_request(int client_id, uint64_t vcpu);
+
+/**
+ * cwp_ioreq_intercept_bdf - set intercept bdf info of ioreq client
+ *
+ * @client_id: client id to identify ioreq client
+ * @bus: bus number
+ * @dev: device number
+ * @func: function number
+ *
+ * Return:
+ */
+void cwp_ioreq_intercept_bdf(int client_id, int bus, int dev, int func);
+
+/**
+ * cwp_ioreq_unintercept_bdf - clear intercept bdf info of ioreq client
+ *
+ * @client_id: client id to identify ioreq client
+ *
+ * Return:
+ */
+void cwp_ioreq_unintercept_bdf(int client_id);
+
+/* IOReq APIs */
+int cwp_ioreq_init(struct vhm_vm *vm, unsigned long vma);
+void cwp_ioreq_free(struct vhm_vm *vm);
+int cwp_ioreq_create_fallback_client(unsigned long vmid, char *name);
+unsigned int vhm_dev_poll(struct file *filep, poll_table *wait);
+
+#endif
diff --git a/include/linux/vhm/acrn_vhm_mm.h b/include/linux/vhm/acrn_vhm_mm.h
new file mode 100644
index 00000000..d3d17ce
--- /dev/null
+++ b/include/linux/vhm/acrn_vhm_mm.h
@@ -0,0 +1,202 @@
+/*
+ * virtio and hyperviosr service module (VHM): memory map
+ *
+ * This file is provided under a dual BSD/GPLv2 license.  When using or
+ * redistributing this file, you may do so under either license.
+ *
+ * GPL LICENSE SUMMARY
+ *
+ * Copyright (c) 2017 Intel Corporation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of version 2 of the GNU General Public License as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * BSD LICENSE
+ *
+ * Copyright (C) 2017 Intel Corporation. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ *   * Redistributions of source code must retain the above copyright
+ *     notice, this list of conditions and the following disclaimer.
+ *   * Redistributions in binary form must reproduce the above copyright
+ *     notice, this list of conditions and the following disclaimer in
+ *     the documentation and/or other materials provided with the
+ *     distribution.
+ *   * Neither the name of Intel Corporation nor the names of its
+ *     contributors may be used to endorse or promote products derived
+ *     from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ * Jason Chen CJ <jason.cj.chen@intel.com>
+ *
+ */
+
+/**
+ * @file acrn_vhm_mm.h
+ *
+ * @brief Virtio and Hypervisor Module memory manager APIs
+ */
+
+#ifndef __CWP_VHM_MM_H__
+#define __CWP_VHM_MM_H__
+
+#include <linux/vhm/vhm_ioctl_defs.h>
+#include <linux/vhm/vhm_vm_mngt.h>
+
+/**
+ * cwp_hpa2gpa - physical address conversion
+ *
+ * convert host physical address (hpa) to guest physical address (gpa)
+ * gpa and hpa is 1:1 mapping for service OS
+ *
+ * @hpa: host physical address
+ *
+ * Return: guest physical address
+ */
+static inline unsigned long  cwp_hpa2gpa(unsigned long hpa)
+{
+	return hpa;
+}
+
+/**
+ * map_guest_phys - map guest physical address
+ *
+ * to SOS kernel virtual address
+ *
+ * @vmid: guest vmid
+ * @uos_phy: phsical address in guest
+ * @size: the memory size mapped
+ *
+ * Return: SOS kernel virtual address, NULL on error
+ */
+void *map_guest_phys(unsigned long vmid, u64 uos_phys, size_t size);
+
+/**
+ * unmap_guest_phys - unmap guest physical address
+ *
+ * @vmid: guest vmid
+ * @uos_phy: phsical address in guest
+ *
+ * Return: 0 on success, <0 for error.
+ */
+int unmap_guest_phys(unsigned long vmid, u64 uos_phys);
+
+/**
+ * set_mmio_map - map mmio EPT mapping between UOS gpa and SOS gpa
+ *
+ * @vmid: guest vmid
+ * @guest_gpa: gpa of UOS
+ * @host_gpa: gpa of SOS
+ * @len: memory mapped length
+ * @mem_type: memory mapping type. Possilble value could be:
+ *                    MEM_TYPE_WB
+ *                    MEM_TYPE_WT
+ *                    MEM_TYPE_UC
+ *                    MEM_TYPE_WC
+ *                    MEM_TYPE_WP
+ * @mem_access_right: memory mapping access. Possible value could be:
+ *                    MEM_ACCESS_READ
+ *                    MEM_ACCESS_WRITE
+ *                    MEM_ACCESS_EXEC
+ *                    MEM_ACCESS_RWX
+ *
+ * Return: 0 on success, <0 for error.
+ */
+int set_mmio_map(unsigned long vmid, unsigned long guest_gpa,
+	unsigned long host_gpa, unsigned long len,
+	unsigned int mem_type, unsigned int mem_access_right);
+
+/**
+ * unset_mmio_map - unmap mmio mapping between UOS gpa and SOS gpa
+ *
+ * @vmid: guest vmid
+ * @guest_gpa: gpa of UOS
+ * @host_gpa: gpa of SOS
+ * @len: memory mapped length
+ *
+ * Return: 0 on success, <0 for error.
+ */
+int unset_mmio_map(unsigned long vmid, unsigned long guest_gpa,
+	unsigned long host_gpa, unsigned long len);
+
+/**
+ * update_memmap_attr - update mmio EPT mapping between UOS gpa and SOS gpa
+ *
+ * @vmid: guest vmid
+ * @guest_gpa: gpa of UOS
+ * @host_gpa: gpa of SOS
+ * @len: memory mapped length
+ * @mem_type: memory mapping type. Possilble value could be:
+ *                    MEM_TYPE_WB
+ *                    MEM_TYPE_WT
+ *                    MEM_TYPE_UC
+ *                    MEM_TYPE_WC
+ *                    MEM_TYPE_WP
+ * @mem_access_right: memory mapping access. Possible value could be:
+ *                    MEM_ACCESS_READ
+ *                    MEM_ACCESS_WRITE
+ *                    MEM_ACCESS_EXEC
+ *                    MEM_ACCESS_RWX
+ *
+ * Return: 0 on success, <0 for error.
+ */
+int update_memmap_attr(unsigned long vmid, unsigned long guest_gpa,
+	unsigned long host_gpa, unsigned long len,
+	unsigned int mem_type, unsigned int mem_access_right);
+
+int vhm_dev_mmap(struct file *file, struct vm_area_struct *vma);
+
+int check_guest_mem(struct vhm_vm *vm);
+
+/**
+ * free_guest_mem - free memory of guest
+ *
+ * @vm: pointer to guest vm
+ *
+ * Return:
+ */
+void free_guest_mem(struct vhm_vm *vm);
+
+/**
+ * alloc_guest_memseg - alloc memory of guest according to pre-defined
+ * memory segment info
+ *
+ * @vm: pointer to guest vm
+ * @memseg: pointer to guest memory segment info
+ *
+ * Return:
+ */
+int alloc_guest_memseg(struct vhm_vm *vm, struct vm_memseg *memseg);
+
+/**
+ * map_guest_memseg - map EPT mmapping of memory of guest according to
+ * pre-defined memory mapping info
+ *
+ * @vm: pointer to guest vm
+ * @memmap: pointer to guest memory mapping info
+ *
+ * Return:
+ */
+int map_guest_memseg(struct vhm_vm *vm, struct vm_memmap *memmap);
+
+#endif
diff --git a/include/linux/vhm/cwp_common.h b/include/linux/vhm/cwp_common.h
deleted file mode 100644
index f400e06..00000000
--- a/include/linux/vhm/cwp_common.h
+++ /dev/null
@@ -1,209 +0,0 @@
-/*
- * common definition
- *
- * This file is provided under a dual BSD/GPLv2 license.  When using or
- * redistributing this file, you may do so under either license.
- *
- * GPL LICENSE SUMMARY
- *
- * Copyright (c) 2017 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of version 2 of the GNU General Public License as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * General Public License for more details.
- *
- * BSD LICENSE
- *
- * Copyright (C) 2017 Intel Corporation. All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *   * Neither the name of Intel Corporation nor the names of its
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- *
- */
-
-#ifndef CWP_COMMON_H
-#define CWP_COMMON_H
-
-/*
- * Common structures for CWP/VHM/DM
- */
-
-/*
- * IO request
- */
-#define VHM_REQUEST_MAX 16
-
-#define REQ_STATE_PENDING	0
-#define REQ_STATE_SUCCESS	1
-#define REQ_STATE_PROCESSING	2
-#define REQ_STATE_FAILED	-1
-
-#define REQ_PORTIO	0
-#define REQ_MMIO	1
-#define REQ_PCICFG	2
-#define REQ_WP		3
-
-#define REQUEST_READ	0
-#define REQUEST_WRITE	1
-
-struct mmio_request {
-	uint32_t direction;
-	uint32_t reserved;
-	int64_t address;
-	int64_t size;
-	int64_t value;
-} __attribute__((aligned(8)));
-
-struct pio_request {
-	uint32_t direction;
-	uint32_t reserved;
-	int64_t address;
-	int64_t size;
-	int32_t value;
-} __attribute__((aligned(8)));
-
-struct pci_request {
-	uint32_t direction;
-	uint32_t reserved[3];/* need keep same header fields with pio_request */
-	int64_t size;
-	int32_t value;
-	int32_t bus;
-	int32_t dev;
-	int32_t func;
-	int32_t reg;
-} __attribute__((aligned(8)));
-
-/* vhm_request are 256Bytes aligned */
-struct vhm_request {
-	/* offset: 0bytes - 63bytes */
-	union {
-		uint32_t type;
-		int32_t reserved0[16];
-	};
-	/* offset: 64bytes-127bytes */
-	union {
-		struct pio_request pio_request;
-		struct pci_request pci_request;
-		struct mmio_request mmio_request;
-		int64_t reserved1[8];
-	} reqs;
-
-	/* True: valid req which need VHM to process.
-	 * CWP write, VHM read only
-	 **/
-	int32_t valid;
-
-	/* the client which is distributed to handle this request */
-	int32_t client;
-
-	/* 1: VHM had processed and success
-	 *  0: VHM had not yet processed
-	 * -1: VHM failed to process. Invalid request
-	 * VHM write, CWP read only
-	 **/
-	int32_t processed;
-} __attribute__((aligned(256)));
-
-struct vhm_request_buffer {
-	union {
-		struct vhm_request req_queue[VHM_REQUEST_MAX];
-		int8_t reserved[4096];
-	};
-} __attribute__((aligned(4096)));
-
-/* Common API params */
-struct cwp_create_vm {
-	int32_t vmid;	/* OUT: return vmid to VHM. Keep it first field */
-	uint32_t vcpu_num;	/* IN: VM vcpu number */
-	uint8_t	 GUID[16];	/* IN: GUID of this vm */
-	uint8_t	 secure_world_enabled;/* IN: whether Secure World is enabled */
-	uint8_t  reserved[31];	/* Reserved for future use */
-} __attribute__((aligned(8)));
-
-struct cwp_create_vcpu {
-	uint32_t vcpu_id;	/* IN: vcpu id */
-	uint32_t pcpu_id;	/* IN: pcpu id */
-} __attribute__((aligned(8)));
-
-struct cwp_set_ioreq_buffer {
-	uint64_t req_buf;			/* IN: gpa of per VM request_buffer*/
-} __attribute__((aligned(8)));
-
-/*
- * intr type
- * IOAPIC: inject interrupt to IOAPIC
- * ISA: inject interrupt to both PIC and IOAPIC
- */
-#define	CWP_INTR_TYPE_ISA	0
-#define	CWP_INTR_TYPE_IOAPIC	1
-
-/* For ISA, PIC, IOAPIC etc */
-struct cwp_irqline {
-	uint32_t intr_type;
-	uint32_t reserved;
-	uint64_t pic_irq;        /* IN: for ISA type */
-	uint64_t ioapic_irq;    /* IN: for IOAPIC type, -1 don't inject */
-} __attribute__((aligned(8)));
-
-/* For MSI type inject */
-struct cwp_msi_entry {
-	uint64_t msi_addr;	/* IN: addr[19:12] with dest vcpu id */
-	uint64_t msi_data;	/* IN: data[7:0] with vector */
-} __attribute__((aligned(8)));
-
-/* For NMI inject */
-struct cwp_nmi_entry {
-	int64_t vcpuid;		/* IN: -1 means vcpu0 */
-} __attribute__((aligned(8)));
-
-struct cwp_vm_pci_msix_remap {
-	uint16_t virt_bdf;	/* IN: Device virtual BDF# */
-	uint16_t phys_bdf;	/* IN: Device physical BDF# */
-	uint16_t msi_ctl;		/* IN: PCI MSI/x cap control data */
-	uint16_t reserved;
-	uint64_t msi_addr;		/* IN/OUT: msi address to fix */
-	uint32_t msi_data;		/* IN/OUT: msi data to fix */
-	int32_t msix;			/* IN: 0 - MSI, 1 - MSI-X */
-	int32_t msix_entry_index;	/* IN: MSI-X the entry table index */
-	/* IN: Vector Control for MSI-X Entry, field defined in MSIX spec */
-	uint32_t vector_ctl;
-} __attribute__((aligned(8)));
-
-/* It's designed to support passing DM config data pointer, based on it,
- * hypervisor would parse then pass DM defined configration to GUEST vcpu
- * when booting guest VM.
- * the address 0xd0000 here is designed by DM, as it arranged all memory
- * layout below 1M, DM should make sure there is no overlap for the address
- * 0xd0000 usage.
- */
-#define GUEST_CFG_OFFSET 	0xd0000
-
-#endif /* CWP_COMMON_H */
diff --git a/include/linux/vhm/cwp_hv_defs.h b/include/linux/vhm/cwp_hv_defs.h
deleted file mode 100644
index 52f164c..00000000
--- a/include/linux/vhm/cwp_hv_defs.h
+++ /dev/null
@@ -1,183 +0,0 @@
-/*
- * hypercall definition
- *
- * This file is provided under a dual BSD/GPLv2 license.  When using or
- * redistributing this file, you may do so under either license.
- *
- * GPL LICENSE SUMMARY
- *
- * Copyright (c) 2017 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of version 2 of the GNU General Public License as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * General Public License for more details.
- *
- * BSD LICENSE
- *
- * Copyright (C) 2017 Intel Corporation. All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *   * Neither the name of Intel Corporation nor the names of its
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- *
- */
-
-#ifndef CWP_HV_DEFS_H
-#define CWP_HV_DEFS_H
-
-/*
- * Common structures for CWP/VHM/DM
- */
-#include "cwp_common.h"
-
-/*
- * Common structures for HV/VHM
- */
-
-#define _HC_ID(x, y) (((x)<<24)|(y))
-
-#define HC_ID 0x80UL
-
-/* general */
-#define HC_ID_GEN_BASE               0x0UL
-#define HC_GET_API_VERSION          _HC_ID(HC_ID, HC_ID_GEN_BASE + 0x00)
-
-/* VM management */
-#define HC_ID_VM_BASE               0x10UL
-#define HC_CREATE_VM                _HC_ID(HC_ID, HC_ID_VM_BASE + 0x00)
-#define HC_DESTROY_VM               _HC_ID(HC_ID, HC_ID_VM_BASE + 0x01)
-#define HC_START_VM                 _HC_ID(HC_ID, HC_ID_VM_BASE + 0x02)
-#define HC_PAUSE_VM                 _HC_ID(HC_ID, HC_ID_VM_BASE + 0x03)
-#define HC_CREATE_VCPU              _HC_ID(HC_ID, HC_ID_VM_BASE + 0x04)
-
-/* IRQ and Interrupts */
-#define HC_ID_IRQ_BASE              0x20UL
-#define HC_ASSERT_IRQLINE           _HC_ID(HC_ID, HC_ID_IRQ_BASE + 0x00)
-#define HC_DEASSERT_IRQLINE         _HC_ID(HC_ID, HC_ID_IRQ_BASE + 0x01)
-#define HC_PULSE_IRQLINE            _HC_ID(HC_ID, HC_ID_IRQ_BASE + 0x02)
-#define HC_INJECT_MSI               _HC_ID(HC_ID, HC_ID_IRQ_BASE + 0x03)
-
-/* DM ioreq management */
-#define HC_ID_IOREQ_BASE            0x30UL
-#define HC_SET_IOREQ_BUFFER         _HC_ID(HC_ID, HC_ID_IOREQ_BASE + 0x00)
-#define HC_NOTIFY_REQUEST_FINISH    _HC_ID(HC_ID, HC_ID_IOREQ_BASE + 0x01)
-
-/* Guest memory management */
-#define HC_ID_MEM_BASE              0x40UL
-#define HC_VM_SET_MEMMAP            _HC_ID(HC_ID, HC_ID_MEM_BASE + 0x00)
-#define HC_VM_GPA2HPA               _HC_ID(HC_ID, HC_ID_MEM_BASE + 0x01)
-
-/* PCI assignment*/
-#define HC_ID_PCI_BASE              0x50UL
-#define HC_ASSIGN_PTDEV             _HC_ID(HC_ID, HC_ID_PCI_BASE + 0x00)
-#define HC_DEASSIGN_PTDEV           _HC_ID(HC_ID, HC_ID_PCI_BASE + 0x01)
-#define HC_VM_PCI_MSIX_REMAP        _HC_ID(HC_ID, HC_ID_PCI_BASE + 0x02)
-#define HC_SET_PTDEV_INTR_INFO      _HC_ID(HC_ID, HC_ID_PCI_BASE + 0x03)
-#define HC_RESET_PTDEV_INTR_INFO    _HC_ID(HC_ID, HC_ID_PCI_BASE + 0x04)
-
-/* DEBUG */
-#define HC_ID_DBG_BASE              0x60UL
-#define HC_SETUP_SBUF               _HC_ID(HC_ID, HC_ID_DBG_BASE + 0x00)
-
-#define CWP_DOM0_VMID (0UL)
-#define CWP_INVALID_VMID (-1)
-#define CWP_INVALID_HPA (-1UL)
-
-/* Generic memory attributes */
-#define	MEM_ACCESS_READ                 0x00000001
-#define	MEM_ACCESS_WRITE                0x00000002
-#define	MEM_ACCESS_EXEC	                0x00000004
-#define	MEM_ACCESS_RWX			(MEM_ACCESS_READ | MEM_ACCESS_WRITE | \
-						MEM_ACCESS_EXEC)
-#define MEM_ACCESS_RIGHT_MASK           0x00000007
-#define	MEM_TYPE_WB                     0x00000040
-#define	MEM_TYPE_WT                     0x00000080
-#define	MEM_TYPE_UC                     0x00000100
-#define	MEM_TYPE_WC                     0x00000200
-#define	MEM_TYPE_WP                     0x00000400
-#define MEM_TYPE_MASK                   0x000007C0
-
-struct vm_set_memmap {
-#define MAP_MEM		0
-#define MAP_MMIO	1
-#define MAP_UNMAP	2
-	uint32_t type;
-	uint32_t reserved;
-
-	/* IN: beginning guest GPA to map */
-	uint64_t remote_gpa;
-
-	/* IN: VM0's GPA which foreign gpa will be mapped to */
-	uint64_t vm0_gpa;
-
-	/* IN: length of the range */
-	uint64_t length;
-
-	/* IN: mem attr */
-	uint32_t prot;
-} __attribute__((aligned(8)));
-
-struct sbuf_setup_param {
-	uint32_t pcpu_id;
-	uint32_t sbuf_id;
-	uint64_t gpa;
-} __attribute__((aligned(8)));
-
-struct vm_gpa2hpa {
-	uint64_t gpa;		/* IN: gpa to translation */
-	uint64_t hpa;		/* OUT: -1 means invalid gpa */
-} __attribute__((aligned(8)));
-
-struct hc_ptdev_irq {
-#define IRQ_INTX 0
-#define IRQ_MSI 1
-#define IRQ_MSIX 2
-	uint32_t type;
-	uint16_t virt_bdf;	/* IN: Device virtual BDF# */
-	uint16_t phys_bdf;	/* IN: Device physical BDF# */
-	union {
-		struct {
-			uint32_t virt_pin;	/* IN: virtual IOAPIC pin */
-			uint32_t phys_pin;	/* IN: physical IOAPIC pin */
-			uint32_t pic_pin;	/* IN: pin from PIC? */
-		} intx;
-		struct {
-			/* IN: vector count of MSI/MSIX */
-			uint32_t vector_cnt;
-		} msix;
-	};
-} __attribute__((aligned(8)));
-
-struct hc_api_version {
-	uint32_t major_version;
-	uint32_t minor_version;
-} __attribute__((aligned(8)));
-
-#endif /* CWP_HV_DEFS_H */
diff --git a/include/linux/vhm/cwp_vhm_ioreq.h b/include/linux/vhm/cwp_vhm_ioreq.h
deleted file mode 100644
index 1f24e24..00000000
--- a/include/linux/vhm/cwp_vhm_ioreq.h
+++ /dev/null
@@ -1,192 +0,0 @@
-/*
- * virtio and hyperviosr service module (VHM): ioreq multi client feature
- *
- * This file is provided under a dual BSD/GPLv2 license.  When using or
- * redistributing this file, you may do so under either license.
- *
- * GPL LICENSE SUMMARY
- *
- * Copyright (c) 2017 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of version 2 of the GNU General Public License as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * General Public License for more details.
- *
- * BSD LICENSE
- *
- * Copyright (C) 2017 Intel Corporation. All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *   * Neither the name of Intel Corporation nor the names of its
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- *
- * Jason Chen CJ <jason.cj.chen@intel.com>
- *
- */
-
-/**
- * @file cwp_vhm_ioreq.h
- *
- * @brief Virtio and Hypervisor Module(VHM) ioreq APIs
- */
-
-#ifndef __CWP_VHM_IOREQ_H__
-#define __CWP_VHM_IOREQ_H__
-
-#include <linux/poll.h>
-#include <linux/vhm/vhm_vm_mngt.h>
-
-typedef	int (*ioreq_handler_t)(int client_id, int req);
-
-/**
- * cwp_ioreq_create_client - create ioreq client
- *
- * @vmid: ID to identify guest
- * @handler: ioreq_handler of ioreq client
- *           If client want request handled in client thread context, set
- *           this parameter to NULL. If client want request handled out of
- *           client thread context, set handler function pointer of its own.
- *           VHM will create kernel thread and call handler to handle request
- *
- * @name: the name of ioreq client
- *
- * Return: client id on success, <0 on error
- */
-int cwp_ioreq_create_client(unsigned long vmid, ioreq_handler_t handler,
-	char *name);
-
-/**
- * cwp_ioreq_destroy_client - destroy ioreq client
- *
- * @client_id: client id to identify ioreq client
- *
- * Return:
- */
-void cwp_ioreq_destroy_client(int client_id);
-
-/**
- * cwp_ioreq_add_iorange - add iorange monitored by ioreq client
- *
- * @client_id: client id to identify ioreq client
- * @type: iorange type
- * @start: iorange start address
- * @end: iorange end address
- *
- * Return: 0 on success, <0 on error
- */
-int cwp_ioreq_add_iorange(int client_id, uint32_t type,
-	long start, long end);
-
-/**
- * cwp_ioreq_del_iorange - del iorange monitored by ioreq client
- *
- * @client_id: client id to identify ioreq client
- * @type: iorange type
- * @start: iorange start address
- * @end: iorange end address
- *
- * Return: 0 on success, <0 on error
- */
-int cwp_ioreq_del_iorange(int client_id, uint32_t type,
-	long start, long end);
-
-/**
- * cwp_ioreq_get_reqbuf - get request buffer
- * request buffer is shared by all clients in one guest
- *
- * @client_id: client id to identify ioreq client
- *
- * Return: pointer to request buffer, NULL on error
- */
-struct vhm_request *cwp_ioreq_get_reqbuf(int client_id);
-
-/**
- * cwp_ioreq_attach_client - start handle request for ioreq client
- * If request is handled out of client thread context, this function is
- * only called once to be ready to handle new request.
- *
- * If request is handled in client thread context, this function must
- * be called every time after the previous request handling is completed
- * to be ready to handle new request.
- *
- * @client_id: client id to identify ioreq client
- * @check_kthread_stop: whether check current kthread should be stopped
- *
- * Return: 0 on success, <0 on error, 1 if ioreq client is destroying
- */
-int cwp_ioreq_attach_client(int client_id, bool check_kthread_stop);
-
-/**
- * cwp_ioreq_distribute_request - deliver request to corresponding client
- *
- * @vm: pointer to guest
- *
- * Return: 0 always
- */
-int cwp_ioreq_distribute_request(struct vhm_vm *vm);
-
-/**
- * cwp_ioreq_complete_request - notify guest request handling is completed
- *
- * @client_id: client id to identify ioreq client
- * @vcpu: identify request submitter
- *
- * Return: 0 on success, <0 on error
- */
-int cwp_ioreq_complete_request(int client_id, uint64_t vcpu);
-
-/**
- * cwp_ioreq_intercept_bdf - set intercept bdf info of ioreq client
- *
- * @client_id: client id to identify ioreq client
- * @bus: bus number
- * @dev: device number
- * @func: function number
- *
- * Return:
- */
-void cwp_ioreq_intercept_bdf(int client_id, int bus, int dev, int func);
-
-/**
- * cwp_ioreq_unintercept_bdf - clear intercept bdf info of ioreq client
- *
- * @client_id: client id to identify ioreq client
- *
- * Return:
- */
-void cwp_ioreq_unintercept_bdf(int client_id);
-
-/* IOReq APIs */
-int cwp_ioreq_init(struct vhm_vm *vm, unsigned long vma);
-void cwp_ioreq_free(struct vhm_vm *vm);
-int cwp_ioreq_create_fallback_client(unsigned long vmid, char *name);
-unsigned int vhm_dev_poll(struct file *filep, poll_table *wait);
-
-#endif
diff --git a/include/linux/vhm/cwp_vhm_mm.h b/include/linux/vhm/cwp_vhm_mm.h
deleted file mode 100644
index c22dc29..00000000
--- a/include/linux/vhm/cwp_vhm_mm.h
+++ /dev/null
@@ -1,202 +0,0 @@
-/*
- * virtio and hyperviosr service module (VHM): memory map
- *
- * This file is provided under a dual BSD/GPLv2 license.  When using or
- * redistributing this file, you may do so under either license.
- *
- * GPL LICENSE SUMMARY
- *
- * Copyright (c) 2017 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of version 2 of the GNU General Public License as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * General Public License for more details.
- *
- * BSD LICENSE
- *
- * Copyright (C) 2017 Intel Corporation. All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- *   * Redistributions of source code must retain the above copyright
- *     notice, this list of conditions and the following disclaimer.
- *   * Redistributions in binary form must reproduce the above copyright
- *     notice, this list of conditions and the following disclaimer in
- *     the documentation and/or other materials provided with the
- *     distribution.
- *   * Neither the name of Intel Corporation nor the names of its
- *     contributors may be used to endorse or promote products derived
- *     from this software without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- *
- * Jason Chen CJ <jason.cj.chen@intel.com>
- *
- */
-
-/**
- * @file cwp_vhm_mm.h
- *
- * @brief Virtio and Hypervisor Module memory manager APIs
- */
-
-#ifndef __CWP_VHM_MM_H__
-#define __CWP_VHM_MM_H__
-
-#include <linux/vhm/vhm_ioctl_defs.h>
-#include <linux/vhm/vhm_vm_mngt.h>
-
-/**
- * cwp_hpa2gpa - physical address conversion
- *
- * convert host physical address (hpa) to guest physical address (gpa)
- * gpa and hpa is 1:1 mapping for service OS
- *
- * @hpa: host physical address
- *
- * Return: guest physical address
- */
-static inline unsigned long  cwp_hpa2gpa(unsigned long hpa)
-{
-	return hpa;
-}
-
-/**
- * map_guest_phys - map guest physical address
- *
- * to SOS kernel virtual address
- *
- * @vmid: guest vmid
- * @uos_phy: phsical address in guest
- * @size: the memory size mapped
- *
- * Return: SOS kernel virtual address, NULL on error
- */
-void *map_guest_phys(unsigned long vmid, u64 uos_phys, size_t size);
-
-/**
- * unmap_guest_phys - unmap guest physical address
- *
- * @vmid: guest vmid
- * @uos_phy: phsical address in guest
- *
- * Return: 0 on success, <0 for error.
- */
-int unmap_guest_phys(unsigned long vmid, u64 uos_phys);
-
-/**
- * set_mmio_map - map mmio EPT mapping between UOS gpa and SOS gpa
- *
- * @vmid: guest vmid
- * @guest_gpa: gpa of UOS
- * @host_gpa: gpa of SOS
- * @len: memory mapped length
- * @mem_type: memory mapping type. Possilble value could be:
- *                    MEM_TYPE_WB
- *                    MEM_TYPE_WT
- *                    MEM_TYPE_UC
- *                    MEM_TYPE_WC
- *                    MEM_TYPE_WP
- * @mem_access_right: memory mapping access. Possible value could be:
- *                    MEM_ACCESS_READ
- *                    MEM_ACCESS_WRITE
- *                    MEM_ACCESS_EXEC
- *                    MEM_ACCESS_RWX
- *
- * Return: 0 on success, <0 for error.
- */
-int set_mmio_map(unsigned long vmid, unsigned long guest_gpa,
-	unsigned long host_gpa, unsigned long len,
-	unsigned int mem_type, unsigned int mem_access_right);
-
-/**
- * unset_mmio_map - unmap mmio mapping between UOS gpa and SOS gpa
- *
- * @vmid: guest vmid
- * @guest_gpa: gpa of UOS
- * @host_gpa: gpa of SOS
- * @len: memory mapped length
- *
- * Return: 0 on success, <0 for error.
- */
-int unset_mmio_map(unsigned long vmid, unsigned long guest_gpa,
-	unsigned long host_gpa, unsigned long len);
-
-/**
- * update_memmap_attr - update mmio EPT mapping between UOS gpa and SOS gpa
- *
- * @vmid: guest vmid
- * @guest_gpa: gpa of UOS
- * @host_gpa: gpa of SOS
- * @len: memory mapped length
- * @mem_type: memory mapping type. Possilble value could be:
- *                    MEM_TYPE_WB
- *                    MEM_TYPE_WT
- *                    MEM_TYPE_UC
- *                    MEM_TYPE_WC
- *                    MEM_TYPE_WP
- * @mem_access_right: memory mapping access. Possible value could be:
- *                    MEM_ACCESS_READ
- *                    MEM_ACCESS_WRITE
- *                    MEM_ACCESS_EXEC
- *                    MEM_ACCESS_RWX
- *
- * Return: 0 on success, <0 for error.
- */
-int update_memmap_attr(unsigned long vmid, unsigned long guest_gpa,
-	unsigned long host_gpa, unsigned long len,
-	unsigned int mem_type, unsigned int mem_access_right);
-
-int vhm_dev_mmap(struct file *file, struct vm_area_struct *vma);
-
-int check_guest_mem(struct vhm_vm *vm);
-
-/**
- * free_guest_mem - free memory of guest
- *
- * @vm: pointer to guest vm
- *
- * Return:
- */
-void free_guest_mem(struct vhm_vm *vm);
-
-/**
- * alloc_guest_memseg - alloc memory of guest according to pre-defined
- * memory segment info
- *
- * @vm: pointer to guest vm
- * @memseg: pointer to guest memory segment info
- *
- * Return:
- */
-int alloc_guest_memseg(struct vhm_vm *vm, struct vm_memseg *memseg);
-
-/**
- * map_guest_memseg - map EPT mmapping of memory of guest according to
- * pre-defined memory mapping info
- *
- * @vm: pointer to guest vm
- * @memmap: pointer to guest memory mapping info
- *
- * Return:
- */
-int map_guest_memseg(struct vhm_vm *vm, struct vm_memmap *memmap);
-
-#endif
diff --git a/include/linux/vhm/vhm_ioctl_defs.h b/include/linux/vhm/vhm_ioctl_defs.h
index 64c35d8..c10ff99 100644
--- a/include/linux/vhm/vhm_ioctl_defs.h
+++ b/include/linux/vhm/vhm_ioctl_defs.h
@@ -53,7 +53,7 @@
 #define	_VHM_IOCTL_DEFS_H_
 
 /* Commmon structures for CWP/VHM/DM */
-#include "cwp_common.h"
+#include "acrn_common.h"
 
 /*
  * Commmon IOCTL ID defination for VHM/DM
-- 
2.7.4

