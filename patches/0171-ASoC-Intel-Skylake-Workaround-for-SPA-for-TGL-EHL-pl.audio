From 51024093bffcfea9199f109da0afe26ea351a91c Mon Sep 17 00:00:00 2001
From: Mateusz Gorski <mateusz.gorski@intel.com>
Date: Fri, 9 Aug 2019 10:44:20 +0200
Subject: [PATCH 171/193] ASoC: Intel: Skylake: Workaround for SPA for TGL/EHL
 platforms

For cAVS 2.5 platforms we are no longer able to control powering up/down
DSP cores higher that core0, it is now done in firmware. Workaround patch
to adjust our power flow for these platforms.

Change-Id: I06d1fd47c84c2fb648357f6400036fa7e7fb079f
Signed-off-by: Mateusz Gorski <mateusz.gorski@intel.com>
Reviewed-on:
Reviewed-by: Slawinski, AmadeuszX <amadeuszx.slawinski@intel.com>
Tested-by: gkblditp <gkblditp@intel.com>
Reviewed-by: Rojewski, Cezary <cezary.rojewski@intel.com>
---
 include/sound/hda_codec.h             |  2 ++
 sound/soc/intel/skylake/cnl-sst-dsp.c | 11 +++++++++++
 2 files changed, 13 insertions(+)

diff --git a/include/sound/hda_codec.h b/include/sound/hda_codec.h
index 9a0393cf024c..9083e88c619f 100644
--- a/include/sound/hda_codec.h
+++ b/include/sound/hda_codec.h
@@ -20,6 +20,8 @@
 
 #define IS_BXT(pci) ((pci)->vendor == 0x8086 && (pci)->device == 0x5a98)
 #define IS_CFL(pci) ((pci)->vendor == 0x8086 && (pci)->device == 0xa348)
+#define IS_EHL(pci) ((pci)->vendor == 0x8086 && (pci)->device == 0x4b55)
+#define IS_TGL(pci) ((pci)->vendor == 0x8086 && (pci)->device == 0xa0c8)
 
 /*
  * Structures
diff --git a/sound/soc/intel/skylake/cnl-sst-dsp.c b/sound/soc/intel/skylake/cnl-sst-dsp.c
index 48b465939ef8..9430950a5e37 100644
--- a/sound/soc/intel/skylake/cnl-sst-dsp.c
+++ b/sound/soc/intel/skylake/cnl-sst-dsp.c
@@ -17,6 +17,7 @@
 #include "../common/sst-dsp-priv.h"
 #include "cnl-sst-dsp.h"
 #include "skl.h"
+#include <linux/pci.h>
 
 /* various timeout values */
 #define CNL_DSP_PU_TO		50
@@ -141,6 +142,11 @@ static int cnl_dsp_core_power_down(struct sst_dsp *ctx, unsigned int core_mask)
 int cnl_dsp_enable_core(struct sst_dsp *ctx, unsigned int core_mask)
 {
 	int ret;
+	struct skl_dev *skl = ctx->thread_context;
+
+	if ((IS_EHL(skl->pci) || IS_TGL(skl->pci)) &&
+			core_mask != SKL_DSP_CORE0_MASK)
+		return 0;
 
 	/* power up */
 	ret = cnl_dsp_core_power_up(ctx, core_mask);
@@ -156,6 +162,11 @@ int cnl_dsp_enable_core(struct sst_dsp *ctx, unsigned int core_mask)
 int cnl_dsp_disable_core(struct sst_dsp *ctx, unsigned int core_mask)
 {
 	int ret;
+	struct skl_dev *skl = ctx->thread_context;
+
+	if ((IS_EHL(skl->pci) || IS_TGL(skl->pci)) &&
+			core_mask != SKL_DSP_CORE0_MASK)
+		return 0;
 
 	ret = cnl_dsp_reset_core(ctx, core_mask);
 	if (ret < 0) {
-- 
2.17.1

