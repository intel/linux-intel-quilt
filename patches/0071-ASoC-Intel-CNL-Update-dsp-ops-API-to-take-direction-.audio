From d6413efebb29394dac95367795095e8cb4c97d3a Mon Sep 17 00:00:00 2001
From: Sanyog Kale <sanyog.r.kale@intel.com>
Date: Sun, 2 Jul 2017 11:30:20 +0530
Subject: [PATCH 071/193] ASoC: Intel: CNL: Update dsp ops API to take
 direction as input parameter

This patch removes hardcoding of audio stream direction inside dsp ops.
Instead it is passed as input parameter of dsp ops.

Change-Id: I2655b5ab36e1e1868a827d8b945daad82479990f
Signed-off-by: Sanyog Kale <sanyog.r.kale@intel.com>
---
 sound/soc/intel/skylake/bxt-sst.c      | 28 +++++++++++++++++---------
 sound/soc/intel/skylake/cnl-sst.c      | 15 +++++++++-----
 sound/soc/intel/skylake/skl-messages.c | 16 +++++++--------
 sound/soc/intel/skylake/skl-sst-dsp.h  |  8 ++++----
 4 files changed, 41 insertions(+), 26 deletions(-)

diff --git a/sound/soc/intel/skylake/bxt-sst.c b/sound/soc/intel/skylake/bxt-sst.c
index 66c787005d20..7ab04a7fcc25 100644
--- a/sound/soc/intel/skylake/bxt-sst.c
+++ b/sound/soc/intel/skylake/bxt-sst.c
@@ -61,7 +61,8 @@ bxt_load_library(struct sst_dsp *ctx, struct skl_lib_info *linfo, int lib_count)
 			goto load_library_failed;
 
 		stream_tag = skl_dsp_prepare(ctx->dev, 0x40,
-					stripped_fw.size, &dmab);
+					stripped_fw.size, &dmab,
+					SNDRV_PCM_STREAM_PLAYBACK);
 		if (stream_tag <= 0) {
 			dev_err(ctx->dev, "Lib prepare DMA err: %x\n",
 					stream_tag);
@@ -72,14 +73,17 @@ bxt_load_library(struct sst_dsp *ctx, struct skl_lib_info *linfo, int lib_count)
 		dma_id = stream_tag - 1;
 		memcpy(dmab.area, stripped_fw.data, stripped_fw.size);
 
-		skl_dsp_trigger(ctx->dev, true, stream_tag);
+		skl_dsp_trigger(ctx->dev, true, stream_tag,
+						SNDRV_PCM_STREAM_PLAYBACK);
 		ret = skl_sst_ipc_load_library(&skl->ipc, dma_id, i, true);
 		if (ret < 0)
 			dev_err(ctx->dev, "IPC Load Lib for %s fail: %d\n",
 					linfo[i].name, ret);
 
-		skl_dsp_trigger(ctx->dev, false, stream_tag);
-		skl_dsp_cleanup(ctx->dev, &dmab, stream_tag);
+		skl_dsp_trigger(ctx->dev, false, stream_tag,
+						SNDRV_PCM_STREAM_PLAYBACK);
+		skl_dsp_cleanup(ctx->dev, &dmab, stream_tag,
+						SNDRV_PCM_STREAM_PLAYBACK);
 	}
 
 	return ret;
@@ -100,7 +104,8 @@ static int sst_bxt_prepare_fw(struct sst_dsp *ctx,
 {
 	int stream_tag, ret;
 
-	stream_tag = skl_dsp_prepare(ctx->dev, 0x40, fwsize, &ctx->dmab);
+	stream_tag = skl_dsp_prepare(ctx->dev, 0x40, fwsize, &ctx->dmab,
+						SNDRV_PCM_STREAM_PLAYBACK);
 	if (stream_tag <= 0) {
 		dev_err(ctx->dev, "Failed to prepare DMA FW loading err: %x\n",
 				stream_tag);
@@ -161,7 +166,9 @@ static int sst_bxt_prepare_fw(struct sst_dsp *ctx,
 	return stream_tag;
 
 base_fw_load_failed:
-	skl_dsp_cleanup(ctx->dev, &ctx->dmab, stream_tag);
+	skl_dsp_cleanup(ctx->dev, &ctx->dmab, stream_tag,
+						SNDRV_PCM_STREAM_PLAYBACK);
+
 	skl_dsp_core_power_down(ctx, SKL_DSP_CORE_MASK(1));
 	skl_dsp_disable_core(ctx, SKL_DSP_CORE0_MASK);
 	return ret;
@@ -171,12 +178,15 @@ static int sst_transfer_fw_host_dma(struct sst_dsp *ctx, int stream_tag)
 {
 	int ret;
 
-	skl_dsp_trigger(ctx->dev, true, stream_tag);
+	skl_dsp_trigger(ctx->dev, true, stream_tag,
+						SNDRV_PCM_STREAM_PLAYBACK);
 	ret = sst_dsp_register_poll(ctx, BXT_ADSP_FW_STATUS, SKL_FW_STS_MASK,
 			BXT_ROM_INIT, BXT_BASEFW_TIMEOUT, "Firmware boot");
 
-	skl_dsp_trigger(ctx->dev, false, stream_tag);
-	skl_dsp_cleanup(ctx->dev, &ctx->dmab, stream_tag);
+	skl_dsp_trigger(ctx->dev, false, stream_tag,
+						SNDRV_PCM_STREAM_PLAYBACK);
+	skl_dsp_cleanup(ctx->dev, &ctx->dmab, stream_tag,
+						SNDRV_PCM_STREAM_PLAYBACK);
 
 	return ret;
 }
diff --git a/sound/soc/intel/skylake/cnl-sst.c b/sound/soc/intel/skylake/cnl-sst.c
index 840bc09a0309..afb34a594508 100644
--- a/sound/soc/intel/skylake/cnl-sst.c
+++ b/sound/soc/intel/skylake/cnl-sst.c
@@ -48,7 +48,8 @@ static int cnl_prepare_fw(struct sst_dsp *ctx, const void *fwdata, u32 fwsize)
 
 	int ret, stream_tag;
 
-	stream_tag = skl_dsp_prepare(ctx->dev, 0x40, fwsize, &ctx->dmab);
+	stream_tag = skl_dsp_prepare(ctx->dev, 0x40, fwsize, &ctx->dmab,
+						SNDRV_PCM_STREAM_PLAYBACK);
 	if (stream_tag <= 0) {
 		dev_err(ctx->dev, "dma prepare failed: 0%#x\n", stream_tag);
 		return stream_tag;
@@ -83,7 +84,8 @@ static int cnl_prepare_fw(struct sst_dsp *ctx, const void *fwdata, u32 fwsize)
 	return stream_tag;
 
 base_fw_load_failed:
-	skl_dsp_cleanup(ctx->dev, &ctx->dmab, stream_tag);
+	skl_dsp_cleanup(ctx->dev, &ctx->dmab, stream_tag,
+						SNDRV_PCM_STREAM_PLAYBACK);
 	cnl_dsp_disable_core(ctx, SKL_DSP_CORE0_MASK);
 
 	return ret;
@@ -93,13 +95,16 @@ static int sst_transfer_fw_host_dma(struct sst_dsp *ctx, int stream_tag)
 {
 	int ret;
 
-	skl_dsp_trigger(ctx->dev, true, stream_tag);
+	skl_dsp_trigger(ctx->dev, true, stream_tag,
+						SNDRV_PCM_STREAM_PLAYBACK);
 	ret = sst_dsp_register_poll(ctx, CNL_ADSP_FW_STATUS, CNL_FW_STS_MASK,
 				    CNL_FW_INIT, CNL_BASEFW_TIMEOUT,
 				    "firmware boot");
 
-	skl_dsp_trigger(ctx->dev, false, stream_tag);
-	skl_dsp_cleanup(ctx->dev, &ctx->dmab, stream_tag);
+	skl_dsp_trigger(ctx->dev, false, stream_tag,
+						SNDRV_PCM_STREAM_PLAYBACK);
+	skl_dsp_cleanup(ctx->dev, &ctx->dmab, stream_tag,
+						SNDRV_PCM_STREAM_PLAYBACK);
 
 	return ret;
 }
diff --git a/sound/soc/intel/skylake/skl-messages.c b/sound/soc/intel/skylake/skl-messages.c
index f14a8aa3d316..69e679f2e515 100644
--- a/sound/soc/intel/skylake/skl-messages.c
+++ b/sound/soc/intel/skylake/skl-messages.c
@@ -70,7 +70,7 @@ static int skl_dsp_setup_spib(struct device *dev, unsigned int size,
 }
 
 int skl_dsp_prepare(struct device *dev, unsigned int format,
-			unsigned int size, struct snd_dma_buffer *dmab)
+		unsigned int size, struct snd_dma_buffer *dmab, int direction)
 {
 	struct hdac_bus *bus = dev_get_drvdata(dev);
 	struct hdac_ext_stream *estream;
@@ -82,7 +82,8 @@ int skl_dsp_prepare(struct device *dev, unsigned int format,
 		return -ENODEV;
 
 	memset(&substream, 0, sizeof(substream));
-	substream.stream = SNDRV_PCM_STREAM_PLAYBACK;
+
+	substream.stream = direction;
 
 	estream = snd_hdac_ext_stream_assign(bus, &substream,
 					HDAC_EXT_STREAM_TYPE_HOST);
@@ -101,7 +102,8 @@ int skl_dsp_prepare(struct device *dev, unsigned int format,
 	return stream->stream_tag;
 }
 
-int skl_dsp_trigger(struct device *dev, bool start, int stream_tag)
+int skl_dsp_trigger(struct device *dev, bool start, int stream_tag,
+		int direction)
 {
 	struct hdac_bus *bus = dev_get_drvdata(dev);
 	struct hdac_stream *stream;
@@ -109,8 +111,7 @@ int skl_dsp_trigger(struct device *dev, bool start, int stream_tag)
 	if (!bus)
 		return -ENODEV;
 
-	stream = snd_hdac_get_stream(bus,
-		SNDRV_PCM_STREAM_PLAYBACK, stream_tag);
+	stream = snd_hdac_get_stream(bus, direction, stream_tag);
 	if (!stream)
 		return -EINVAL;
 
@@ -120,7 +121,7 @@ int skl_dsp_trigger(struct device *dev, bool start, int stream_tag)
 }
 
 int skl_dsp_cleanup(struct device *dev,
-		struct snd_dma_buffer *dmab, int stream_tag)
+		struct snd_dma_buffer *dmab, int stream_tag, int direction)
 {
 	struct hdac_bus *bus = dev_get_drvdata(dev);
 	struct hdac_stream *stream;
@@ -129,8 +130,7 @@ int skl_dsp_cleanup(struct device *dev,
 	if (!bus)
 		return -ENODEV;
 
-	stream = snd_hdac_get_stream(bus,
-		SNDRV_PCM_STREAM_PLAYBACK, stream_tag);
+	stream = snd_hdac_get_stream(bus, direction, stream_tag);
 	if (!stream)
 		return -EINVAL;
 
diff --git a/sound/soc/intel/skylake/skl-sst-dsp.h b/sound/soc/intel/skylake/skl-sst-dsp.h
index bb2ccb0f449e..1d6c072efba6 100644
--- a/sound/soc/intel/skylake/skl-sst-dsp.h
+++ b/sound/soc/intel/skylake/skl-sst-dsp.h
@@ -143,7 +143,6 @@ struct skl_dsp_fw_ops {
 	unsigned int (*get_fw_errcode)(struct sst_dsp *ctx);
 	int (*load_mod)(struct sst_dsp *ctx, u16 mod_id, u8 *mod_name);
 	int (*unload_mod)(struct sst_dsp *ctx, u16 mod_id);
-
 };
 
 struct adsp_module_config {
@@ -187,10 +186,11 @@ int skl_alloc_dma_buf(struct device *dev,
 		struct snd_dma_buffer *dmab, size_t size);
 int skl_free_dma_buf(struct device *dev, struct snd_dma_buffer *dmab);
 int skl_dsp_prepare(struct device *dev, unsigned int format,
-		unsigned int size, struct snd_dma_buffer *dmab);
-int skl_dsp_trigger(struct device *dev, bool start, int stream_tag);
+		unsigned int size, struct snd_dma_buffer *dmab, int direction);
+int skl_dsp_trigger(struct device *dev, bool start, int stream_tag,
+		int direction);
 int skl_dsp_cleanup(struct device *dev, struct snd_dma_buffer *dmab,
-		int stream_tag);
+		int stream_tag, int direction);
 
 void skl_cldma_process_intr(struct sst_dsp *ctx);
 void skl_cldma_int_disable(struct sst_dsp *ctx);
-- 
2.17.1

