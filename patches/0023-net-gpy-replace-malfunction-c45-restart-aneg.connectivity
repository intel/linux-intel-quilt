From a965b603148f72b922cb87e0fa33f41705435c5a Mon Sep 17 00:00:00 2001
From: Voon Weifeng <weifeng.voon@intel.com>
Date: Wed, 27 May 2020 15:20:41 +0800
Subject: [PATCH 23/40] net: gpy: replace malfunction c45 restart aneg

Mirrored MMD register are not functioning. It is forced to use the standard
MDIO register instead. Hence, replacing c45 restart aneg function with
c22 STD restart aneg function. In addition, removing all workaround
configuration due to this malfunctioning c45 register.

Signed-off-by: Voon Weifeng <weifeng.voon@intel.com>
---
 drivers/net/phy/intel-gpy.c | 54 +------------------------------------
 1 file changed, 1 insertion(+), 53 deletions(-)

diff --git a/drivers/net/phy/intel-gpy.c b/drivers/net/phy/intel-gpy.c
index ff78879c82f5..7d39f9996d07 100644
--- a/drivers/net/phy/intel-gpy.c
+++ b/drivers/net/phy/intel-gpy.c
@@ -96,59 +96,7 @@ static int gpy_config_aneg(struct phy_device *phydev)
 	if (ret > 0)
 		changed = true;
 
-	ret = phy_read_mmd(phydev, MDIO_MMD_VEND1, GPY_VSPEC1_SGMII_STS);
-
-	if (linkmode_test_bit(ETHTOOL_LINK_MODE_2500baseT_Full_BIT,
-			      phydev->advertising)) {
-		/* For SGMII 2.5Gbps link, MAC side SGMII will turn off
-		 * autoneg as not all PHY supports autoneg for 2.5Gbps.
-		 * GPY211 will disable autoneg by toggling the BIT12
-		 */
-		if ((ret & GPY_SGMII_ANOK) && (!(ret & GPY_SGMII_LS))) {
-			phy_modify_mmd_changed(phydev, MDIO_MMD_VEND1,
-					       GPY_VSPEC1_SGMII_CTRL,
-					       GPY_SGMII_ANEN,
-					       GPY_SGMII_ANEN);
-			phy_clear_bits_mmd(phydev, MDIO_MMD_VEND1,
-					   GPY_VSPEC1_SGMII_CTRL,
-					   GPY_SGMII_ANEN);
-
-			/* If the SGMII link is not at 2.5Gbps mode,
-			 * restart the TPI link by toggling TPI
-			 * autoneg bit. As the SGMII buad rate will
-			 * follow the TPI link
-			 */
-			if ((ret & GPY_SGMII_DR_MASK) != GPY_SGMII_DR_2500)
-				genphy_c45_an_disable_aneg(phydev);
-
-			changed = true;
-		}
-	} else {
-		/* For SGMII 10/100/1000Mbps link, enable the SGMII
-		 * autoneg by toggling the BIT12
-		 */
-		if (ret & GPY_SGMII_ANOK || (!(ret & GPY_SGMII_LS))) {
-			phy_clear_bits_mmd(phydev, MDIO_MMD_VEND1,
-					   GPY_VSPEC1_SGMII_CTRL,
-					   GPY_SGMII_ANEN);
-			phy_modify_mmd_changed(phydev, MDIO_MMD_VEND1,
-					       GPY_VSPEC1_SGMII_CTRL,
-					       GPY_SGMII_ANEN,
-					       GPY_SGMII_ANEN);
-
-			/* If the SGMII link is not at 10/100/1000Mbps,
-			 * restart the TPI link by toggling TPI
-			 * autoneg bit. As the SGMII buad rate will
-			 * follow the TPI link
-			 */
-			if ((ret & GPY_SGMII_DR_MASK) == GPY_SGMII_DR_2500)
-				genphy_c45_an_disable_aneg(phydev);
-
-			changed = true;
-		}
-	}
-
-	return genphy_c45_check_and_restart_aneg(phydev, changed);
+	return changed ? genphy_restart_aneg(phydev) : 0;
 }
 
 static int gpy_ack_interrupt(struct phy_device *phydev)
-- 
2.27.0

