From 2c583f303742d3ea817d1fd286d785c6a5fae0fe Mon Sep 17 00:00:00 2001
From: Angel Krastev <akrastev@mm-sol.com>
Date: Mon, 27 Sep 2021 20:30:13 +0300
Subject: [PATCH 066/109] media: kmb-imx412: Add 3280x2464 2-lane mode

Add 2-lane ULL mode with resolution 3280x2464@25fps 10bpp

Signed-off-by: Angel Krastev <akrastev@mm-sol.com>
---
 drivers/media/i2c/kmb-imx412.c | 261 ++++++++++++++++++++++++++++++++-
 1 file changed, 260 insertions(+), 1 deletion(-)

diff --git a/drivers/media/i2c/kmb-imx412.c b/drivers/media/i2c/kmb-imx412.c
index 7dbb7e0a1881..83609ea25c8a 100644
--- a/drivers/media/i2c/kmb-imx412.c
+++ b/drivers/media/i2c/kmb-imx412.c
@@ -125,6 +125,7 @@
 #define KMB_IMX412_LINK_FREQ_1200MHz	1200000000
 #define KMB_IMX412_LINK_FREQ_1452MHz	1452000000
 #define KMB_IMX412_LINK_FREQ_1260MHz	1260000000
+#define KMB_IMX412_LINK_FREQ_1424MHz	1424000000
 
 #define KMB_IMX412_FPS_NUMERATOR	(1 << 8)
 #define KMB_IMX412_2DOL_GET_1ST_MAX_EXP(x)	\
@@ -293,7 +294,8 @@ static const s64 link_freq[] = {
 	KMB_IMX412_LINK_FREQ_2100MHz,
 	KMB_IMX412_LINK_FREQ_1200MHz,
 	KMB_IMX412_LINK_FREQ_1452MHz,
-	KMB_IMX412_LINK_FREQ_1260MHz
+	KMB_IMX412_LINK_FREQ_1260MHz,
+	KMB_IMX412_LINK_FREQ_1424MHz
 };
 
 /* Sensor mode registers */
@@ -1429,6 +1431,241 @@ static const struct kmb_imx412_reg mode_1920x1080_2L_12b_regs[] = {
 	{0xBCF1, 0x00},
 };
 
+static const struct kmb_imx412_reg mode_3280x2464_ULL_2L_10b_regs[] = {
+	{0x0100, 0x00},
+	{0x0136, 0x18},
+	{0x0137, 0x00},
+	{0x3C7E, 0x0F},
+	{0x3C7F, 0x02},
+	{0x38A8, 0x1F},
+	{0x38A9, 0xFF},
+	{0x38AA, 0x1F},
+	{0x38AB, 0xFF},
+	{0x55D4, 0x00},
+	{0x55D5, 0x00},
+	{0x55D6, 0x07},
+	{0x55D7, 0xFF},
+	{0x55E8, 0x07},
+	{0x55E9, 0xFF},
+	{0x55EA, 0x00},
+	{0x55EB, 0x00},
+	{0x575C, 0x07},
+	{0x575D, 0xFF},
+	{0x575E, 0x00},
+	{0x575F, 0x00},
+	{0x5764, 0x00},
+	{0x5765, 0x00},
+	{0x5766, 0x07},
+	{0x5767, 0xFF},
+	{0x5974, 0x04},
+	{0x5975, 0x01},
+	{0x5F10, 0x09},
+	{0x5F11, 0x92},
+	{0x5F12, 0x32},
+	{0x5F13, 0x72},
+	{0x5F14, 0x16},
+	{0x5F15, 0xBA},
+	{0x5F17, 0x13},
+	{0x5F18, 0x24},
+	{0x5F19, 0x60},
+	{0x5F1A, 0xE3},
+	{0x5F1B, 0xAD},
+	{0x5F1C, 0x74},
+	{0x5F2D, 0x25},
+	{0x5F5C, 0xD0},
+	{0x6A22, 0x00},
+	{0x6A23, 0x1D},
+	{0x7BA8, 0x00},
+	{0x7BA9, 0x00},
+	{0x886B, 0x00},
+	{0x9002, 0x0A},
+	{0x9004, 0x1A},
+	{0x9214, 0x93},
+	{0x9215, 0x69},
+	{0x9216, 0x93},
+	{0x9217, 0x6B},
+	{0x9218, 0x93},
+	{0x9219, 0x6D},
+	{0x921A, 0x57},
+	{0x921B, 0x58},
+	{0x921C, 0x57},
+	{0x921D, 0x59},
+	{0x921E, 0x57},
+	{0x921F, 0x5A},
+	{0x9220, 0x57},
+	{0x9221, 0x5B},
+	{0x9222, 0x93},
+	{0x9223, 0x02},
+	{0x9224, 0x93},
+	{0x9225, 0x03},
+	{0x9226, 0x93},
+	{0x9227, 0x04},
+	{0x9228, 0x93},
+	{0x9229, 0x05},
+	{0x922A, 0x98},
+	{0x922B, 0x21},
+	{0x922C, 0xB2},
+	{0x922D, 0xDB},
+	{0x922E, 0xB2},
+	{0x922F, 0xDC},
+	{0x9230, 0xB2},
+	{0x9231, 0xDD},
+	{0x9232, 0xB2},
+	{0x9233, 0xE1},
+	{0x9234, 0xB2},
+	{0x9235, 0xE2},
+	{0x9236, 0xB2},
+	{0x9237, 0xE3},
+	{0x9238, 0xB7},
+	{0x9239, 0xB9},
+	{0x923A, 0xB7},
+	{0x923B, 0xBB},
+	{0x923C, 0xB7},
+	{0x923D, 0xBC},
+	{0x923E, 0xB7},
+	{0x923F, 0xC5},
+	{0x9240, 0xB7},
+	{0x9241, 0xC7},
+	{0x9242, 0xB7},
+	{0x9243, 0xC9},
+	{0x9244, 0x98},
+	{0x9245, 0x56},
+	{0x9246, 0x98},
+	{0x9247, 0x55},
+	{0x9380, 0x00},
+	{0x9381, 0x62},
+	{0x9382, 0x00},
+	{0x9383, 0x56},
+	{0x9384, 0x00},
+	{0x9385, 0x52},
+	{0x9388, 0x00},
+	{0x9389, 0x55},
+	{0x938A, 0x00},
+	{0x938B, 0x55},
+	{0x938C, 0x00},
+	{0x938D, 0x41},
+	{0x5078, 0x01},
+	{0x0112, 0x0A},
+	{0x0113, 0x0A},
+	{0x0114, 0x01},
+	{0x0342, 0x23},
+	{0x0343, 0x40},
+	{0x0340, 0x09},
+	{0x0341, 0xDC},
+	{0x3210, 0x00},
+	{0x0344, 0x00},
+	{0x0345, 0x00},
+	{0x0346, 0x01},
+	{0x0347, 0x20},
+	{0x0348, 0x0F},
+	{0x0349, 0xD7},
+	{0x034A, 0x0A},
+	{0x034B, 0xBF},
+	{0x00E3, 0x00},
+	{0x00E4, 0x00},
+	{0x00E5, 0x01},
+	{0x00FC, 0x0A},
+	{0x00FD, 0x0A},
+	{0x00FE, 0x0A},
+	{0x00FF, 0x0A},
+	{0xE013, 0x00},
+	{0x0220, 0x00},
+	{0x0221, 0x11},
+	{0x0381, 0x01},
+	{0x0383, 0x01},
+	{0x0385, 0x01},
+	{0x0387, 0x01},
+	{0x0900, 0x00},
+	{0x0901, 0x11},
+	{0x0902, 0x00},
+	{0x3140, 0x02},
+	{0x3241, 0x11},
+	{0x3250, 0x03},
+	{0x3E10, 0x00},
+	{0x3E11, 0x00},
+	{0x3F0D, 0x00},
+	{0x3F42, 0x00},
+	{0x3F43, 0x00},
+	{0x0401, 0x00},
+	{0x0404, 0x00},
+	{0x0405, 0x10},
+	{0x0408, 0x01},
+	{0x0409, 0x84},
+	{0x040A, 0x00},
+	{0x040B, 0x00},
+	{0x040C, 0x0C},
+	{0x040D, 0xD0},
+	{0x040E, 0x09},
+	{0x040F, 0xA0},
+	{0x034C, 0x0C},
+	{0x034D, 0xD0},
+	{0x034E, 0x09},
+	{0x034F, 0xA0},
+	{0x0301, 0x05},
+	{0x0303, 0x02},
+	{0x0305, 0x03},
+	{0x0306, 0x00},
+	{0x0307, 0xB2},
+	{0x0309, 0x0A},
+	{0x030B, 0x01},
+	{0x030D, 0x02},
+	{0x030E, 0x01},
+	{0x030F, 0x5E},
+	{0x0310, 0x00},
+	{0x0820, 0x0B},
+	{0x0821, 0x20},
+	{0x0822, 0x00},
+	{0x0823, 0x00},
+	{0x3E20, 0x01},
+	{0x3E37, 0x00},
+	{0x3F50, 0x00},
+	{0x3F56, 0x01},
+	{0x3F57, 0x7D},
+	{0x3C0A, 0x5A},
+	{0x3C0B, 0x55},
+	{0x3C0C, 0x28},
+	{0x3C0D, 0x07},
+	{0x3C0E, 0xFF},
+	{0x3C0F, 0x00},
+	{0x3C10, 0x00},
+	{0x3C11, 0x02},
+	{0x3C12, 0x00},
+	{0x3C13, 0x03},
+	{0x3C14, 0x00},
+	{0x3C15, 0x00},
+	{0x3C16, 0x0C},
+	{0x3C17, 0x0C},
+	{0x3C18, 0x0C},
+	{0x3C19, 0x0A},
+	{0x3C1A, 0x0A},
+	{0x3C1B, 0x0A},
+	{0x3C1C, 0x00},
+	{0x3C1D, 0x00},
+	{0x3C1E, 0x00},
+	{0x3C1F, 0x00},
+	{0x3C20, 0x00},
+	{0x3C21, 0x00},
+	{0x3C22, 0x3F},
+	{0x3C23, 0x0A},
+	{0x3E35, 0x01},
+	{0x3F4A, 0x03},
+	{0x3F4B, 0xBF},
+	{0x3F26, 0x00},
+	{0x0202, 0x09},
+	{0x0203, 0xC6},
+	{0x0204, 0x00},
+	{0x0205, 0x00},
+	{0x020E, 0x01},
+	{0x020F, 0x00},
+	{0x0210, 0x01},
+	{0x0211, 0x00},
+	{0x0212, 0x01},
+	{0x0213, 0x00},
+	{0x0214, 0x01},
+	{0x0215, 0x00},
+	{0xBCF1, 0x00},
+};
+
 static const struct kmb_imx412_reg mode_4056x3040_2DOL_1452_regs[] = {
 	{0x0100, 0x00},
 	{0x0136, 0x18},
@@ -1988,6 +2225,28 @@ static const struct kmb_imx412_mode supported_modes[] = {
 			.num_of_regs = ARRAY_SIZE(mode_1920x1080_2L_12b_regs),
 			.regs = mode_1920x1080_2L_12b_regs,
 		},
+	},
+	{
+		.width = 3280,
+		.height = 2464,
+		.ppln = 4512,
+		.lpfr[0] = 2524,
+		.skip_lines = 0,
+		.pclk = 284800000,
+		.code = MEDIA_BUS_FMT_SRGGB10_1X10,
+		.num_lanes = 2,
+		.link_freq_idx = 4,
+		.fps = {
+			.def = 25 * KMB_IMX412_FPS_NUMERATOR,
+			.max = 25 * KMB_IMX412_FPS_NUMERATOR,
+			.min = 10 * KMB_IMX412_FPS_NUMERATOR,
+			.step = 5 * KMB_IMX412_FPS_NUMERATOR,
+		},
+		.reg_list = {
+			.num_of_regs
+				= ARRAY_SIZE(mode_3280x2464_ULL_2L_10b_regs),
+			.regs = mode_3280x2464_ULL_2L_10b_regs,
+		},
 	}
 };
 
-- 
2.25.1

