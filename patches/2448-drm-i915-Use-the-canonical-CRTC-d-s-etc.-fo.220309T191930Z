From edbf2cc45f7c69e0b5ff9297c1f93d1123deb366 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ville=20Syrj=C3=A4l=C3=A4?= <ville.syrjala@linux.intel.com>
Date: Fri, 29 Nov 2019 20:54:32 +0200
Subject: [PATCH 2448/4530] drm/i915: Use the canonical [CRTC:%d:%s]/etc.
 format in i915_display_info
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Use the canonical "[CRTC:%d:%s]" format for the obj id/name
in the debugfs display_info dump. Everyone should already be
familiar with the format since it's used in the debug logs
extensively.

Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20191129185434.25549-8-ville.syrjala@linux.intel.com
Reviewed-by: Ramalingam C <ramalingam.c@intel.com>
---
 drivers/gpu/drm/i915/i915_debugfs.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_debugfs.c b/drivers/gpu/drm/i915/i915_debugfs.c
index 3bf7d4e2f940..4dffbff1b8bd 100644
--- a/drivers/gpu/drm/i915/i915_debugfs.c
+++ b/drivers/gpu/drm/i915/i915_debugfs.c
@@ -2385,11 +2385,11 @@ static void intel_encoder_info(struct seq_file *m,
 	struct drm_device *dev = &dev_priv->drm;
 	struct intel_connector *connector;
 
-	seq_printf(m, "\tencoder %d: type: %s, connectors:\n",
+	seq_printf(m, "\t[ENCODER:%d:%s]: connectors:\n",
 		   encoder->base.base.id, encoder->base.name);
 
 	for_each_connector_on_encoder(dev, &encoder->base, connector)
-		seq_printf(m, "\t\tconnector %d: type: %s\n",
+		seq_printf(m, "\t\t[CONNECTOR:%d:%s]\n",
 			   connector->base.base.id, connector->base.name);
 }
 
@@ -2478,7 +2478,7 @@ static void intel_connector_info(struct seq_file *m,
 	struct intel_encoder *intel_encoder = intel_connector->encoder;
 	struct drm_display_mode *mode;
 
-	seq_printf(m, "connector %d: type %s, status: %s\n",
+	seq_printf(m, "[CONNECTOR:%d:%s]: status: %s\n",
 		   connector->base.id, connector->name,
 		   drm_get_connector_status_name(connector->status));
 
@@ -2585,8 +2585,8 @@ static void intel_plane_info(struct seq_file *m, struct intel_crtc *crtc)
 		plane_rotation(rot_str, sizeof(rot_str),
 			       plane_state->uapi.rotation);
 
-		seq_printf(m, "\t--Plane id %d: type=%s, fb=%d,%s,%dx%d, src=" DRM_RECT_FP_FMT ", dst=" DRM_RECT_FMT ", rotation=%s\n",
-			   plane->base.base.id,
+		seq_printf(m, "\t[PLANE:%d:%s]: type=%s, fb=%d,%s,%dx%d, src=" DRM_RECT_FP_FMT ", dst=" DRM_RECT_FMT ", rotation=%s\n",
+			   plane->base.base.id, plane->base.name,
 			   plane_type(plane->base.type),
 			   fb ? fb->base.id : 0,
 			   fb ? format_name.str : "n/a",
@@ -2631,8 +2631,8 @@ static void intel_crtc_info(struct seq_file *m, struct intel_crtc *crtc)
 	const struct intel_crtc_state *crtc_state =
 		to_intel_crtc_state(crtc->base.state);
 
-	seq_printf(m, "CRTC %d: pipe: %c, active=%s, (size=%dx%d), dither=%s, bpp=%d\n",
-		   crtc->base.base.id, pipe_name(crtc->pipe),
+	seq_printf(m, "[CRTC:%d:%s]: active=%s, (size=%dx%d), dither=%s, bpp=%d\n",
+		   crtc->base.base.id, crtc->base.name,
 		   yesno(crtc_state->hw.active),
 		   crtc_state->pipe_src_w, crtc_state->pipe_src_h,
 		   yesno(crtc_state->dither), crtc_state->pipe_bpp);
-- 
2.17.1

