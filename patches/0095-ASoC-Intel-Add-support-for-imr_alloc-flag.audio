From 2c02fc9cc7e40e8f8395b85e5114093ef94d37c0 Mon Sep 17 00:00:00 2001
From: Gustaw Lewandowski <gustaw.lewandowski@intel.com>
Date: Wed, 21 Nov 2018 17:31:11 +0100
Subject: [PATCH 095/165] ASoC: Intel: Add support for imr_alloc flag

Add new flag imr_alloc to skl_machine_pdata for enable
imr buffer allocation for given platform needed for
presilicon validation on FPGA.

Change-Id: I64c5680be37c9cb1265877411be78b9049afebcf
Signed-off-by: Gustaw Lewandowski <gustaw.lewandowski@intel.com>
---
 sound/soc/intel/common/sst-dsp-priv.h |  1 +
 sound/soc/intel/skylake/cnl-sst.c     | 50 +++++++++++++++++++++++++++
 sound/soc/intel/skylake/skl.c         |  6 ++--
 sound/soc/intel/skylake/skl.h         |  1 +
 4 files changed, 56 insertions(+), 2 deletions(-)

diff --git a/sound/soc/intel/common/sst-dsp-priv.h b/sound/soc/intel/common/sst-dsp-priv.h
index 242a1c262e4b..71ba1043af7e 100644
--- a/sound/soc/intel/common/sst-dsp-priv.h
+++ b/sound/soc/intel/common/sst-dsp-priv.h
@@ -321,6 +321,7 @@ struct sst_dsp {
 	u32 intr_status;
 	const struct firmware *fw;
 	struct snd_dma_buffer dmab;
+	struct snd_dma_buffer imr_buf;
 };
 
 /* Size optimised DRAM/IRAM memcpy */
diff --git a/sound/soc/intel/skylake/cnl-sst.c b/sound/soc/intel/skylake/cnl-sst.c
index 97a83915fb5e..93b6bae0f3f5 100644
--- a/sound/soc/intel/skylake/cnl-sst.c
+++ b/sound/soc/intel/skylake/cnl-sst.c
@@ -29,6 +29,7 @@
 #include <linux/device.h>
 #include <asm/set_memory.h>
 #include <asm/cacheflush.h>
+#include <sound/soc-acpi.h>
 
 #include "../common/sst-dsp.h"
 #include "../common/sst-dsp-priv.h"
@@ -36,6 +37,7 @@
 #include "cnl-sst-dsp.h"
 #include "skl-sst-dsp.h"
 #include "skl-sst-ipc.h"
+#include "skl-topology.h"
 
 #define CNL_FW_ROM_INIT		0x1
 #define CNL_FW_INIT		0x5
@@ -54,10 +56,56 @@
 #define CNL_ADSP_FW_HDR_OFFSET	0x2000
 #define CNL_ROM_CTRL_DMA_ID	0x9
 
+#define CNL_IMR_MEMSIZE					0x400000
+#define CNL_IMR_PAGES	((CNL_IMR_MEMSIZE + PAGE_SIZE - 1) >> PAGE_SHIFT)
+#define HDA_ADSP_REG_ADSPCS_IMR_CACHED_TLB_START	0x100
+#define HDA_ADSP_REG_ADSPCS_IMR_UNCACHED_TLB_START	0x200
+#define HDA_ADSP_REG_ADSPCS_IMR_SIZE			0x8
+
+/* Needed for presilicon platform based on FPGA */
+static int cnl_alloc_imr(struct sst_dsp *ctx)
+{
+	if (ctx->dsp_ops.alloc_dma_buf(ctx->dev, &ctx->imr_buf,
+	     CNL_IMR_MEMSIZE) < 0) {
+		dev_err(ctx->dev, "Alloc imr buffer failed\n");
+		return -ENOMEM;
+	}
+
+	set_memory_uc((unsigned long)ctx->imr_buf.area, CNL_IMR_PAGES);
+	writeq(virt_to_phys(ctx->imr_buf.area) + 1,
+		 ctx->addr.shim + HDA_ADSP_REG_ADSPCS_IMR_CACHED_TLB_START);
+	writeq(virt_to_phys(ctx->imr_buf.area) + 1,
+		 ctx->addr.shim + HDA_ADSP_REG_ADSPCS_IMR_UNCACHED_TLB_START);
+
+	writel(CNL_IMR_MEMSIZE, ctx->addr.shim
+		+ HDA_ADSP_REG_ADSPCS_IMR_CACHED_TLB_START
+		+ HDA_ADSP_REG_ADSPCS_IMR_SIZE);
+	writel(CNL_IMR_MEMSIZE, ctx->addr.shim
+		+ HDA_ADSP_REG_ADSPCS_IMR_UNCACHED_TLB_START
+		+ HDA_ADSP_REG_ADSPCS_IMR_SIZE);
+
+	memset(ctx->imr_buf.area, 0, CNL_IMR_MEMSIZE);
+
+	return 0;
+}
+
+static inline void cnl_free_imr(struct sst_dsp *ctx)
+{
+	ctx->dsp_ops.free_dma_buf(ctx->dev, &ctx->imr_buf);
+}
+
 static int cnl_prepare_fw(struct sst_dsp *ctx, const void *fwdata, u32 fwsize)
 {
 
 	int ret, stream_tag;
+	struct skl *skl = get_skl_ctx(ctx->dev);
+	struct skl_machine_pdata *pdata = (struct skl_machine_pdata *)
+						skl->mach->pdata;
+	if (pdata && pdata->imr_alloc) {
+		ret = cnl_alloc_imr(ctx);
+		if (ret < 0)
+			return ret;
+	}
 
 	stream_tag = ctx->dsp_ops.prepare(ctx->dev, 0x40, fwsize, &ctx->dmab,
 						SNDRV_PCM_STREAM_PLAYBACK);
@@ -100,6 +148,8 @@ static int cnl_prepare_fw(struct sst_dsp *ctx, const void *fwdata, u32 fwsize)
 	ctx->dsp_ops.cleanup(ctx->dev, &ctx->dmab, stream_tag,
 						SNDRV_PCM_STREAM_PLAYBACK);
 	cnl_dsp_disable_core(ctx, SKL_DSP_CORE0_MASK);
+	if (pdata && pdata->imr_alloc)
+		cnl_free_imr(ctx);
 
 	return ret;
 }
diff --git a/sound/soc/intel/skylake/skl.c b/sound/soc/intel/skylake/skl.c
index 8b520bc9b676..cd51f769506b 100644
--- a/sound/soc/intel/skylake/skl.c
+++ b/sound/soc/intel/skylake/skl.c
@@ -538,7 +538,10 @@ static int skl_find_machine(struct skl *skl, void *driver_data)
 {
 	struct hdac_bus *bus = skl_to_bus(skl);
 	struct snd_soc_acpi_mach *mach = driver_data;
-	struct skl_machine_pdata *pdata;
+	struct skl_machine_pdata *pdata = mach->pdata;
+
+	if (pdata && pdata->imr_alloc)
+		goto out;
 
 	mach = snd_soc_acpi_find_machine(mach);
 	if (!mach) {
@@ -552,7 +555,6 @@ static int skl_find_machine(struct skl *skl, void *driver_data)
 
 	skl->mach = mach;
 	skl->fw_name = mach->fw_filename;
-	pdata = mach->pdata;
 
 	if (pdata) {
 		skl->use_tplg_pcm = pdata->use_tplg_pcm;
diff --git a/sound/soc/intel/skylake/skl.h b/sound/soc/intel/skylake/skl.h
index 6f6bab0dad05..54c145afcb86 100644
--- a/sound/soc/intel/skylake/skl.h
+++ b/sound/soc/intel/skylake/skl.h
@@ -176,6 +176,7 @@ struct skl_dma_params {
 
 struct skl_machine_pdata {
 	bool use_tplg_pcm; /* use dais and dai links from topology */
+	bool imr_alloc;
 };
 
 struct skl_dsp_ops {
-- 
2.17.1

