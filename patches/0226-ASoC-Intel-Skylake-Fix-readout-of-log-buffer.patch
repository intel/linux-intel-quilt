From da2bbe44340e263075cb600a02e247fcc812b009 Mon Sep 17 00:00:00 2001
From: Dominik Bozek <dominikx.bozek@intel.com>
Date: Mon, 26 Nov 2018 11:40:27 +0100
Subject: [PATCH 226/292] ASoC: Intel: Skylake: Fix readout of log buffer

Access to periphery must be done with readl/writel.

Change-Id: I3fc2388dcfc98e023c59e5dbf38bb179df173f8d
Signed-off-by: Dominik Bozek <dominikx.bozek@intel.com>
Reviewed-on:
Reviewed-by: Slawinski, AmadeuszX <amadeuszx.slawinski@intel.com>
Reviewed-by: Lewandowski, Gustaw <gustaw.lewandowski@intel.com>
---
 sound/soc/intel/skylake/skl-sst-ipc.c   | 10 +++-------
 sound/soc/intel/skylake/skl-sst-utils.c | 15 +++++----------
 2 files changed, 8 insertions(+), 17 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-sst-ipc.c b/sound/soc/intel/skylake/skl-sst-ipc.c
index 0c40a7adf454..963be20f132b 100644
--- a/sound/soc/intel/skylake/skl-sst-ipc.c
+++ b/sound/soc/intel/skylake/skl-sst-ipc.c
@@ -477,7 +477,6 @@ static void
 skl_process_log_buffer(struct sst_dsp *sst, struct skl_ipc_header header)
 {
 	int core, size;
-	u32 *ptr;
 	u8 __iomem *base;
 	u32 write, read;
 
@@ -497,21 +496,18 @@ skl_process_log_buffer(struct sst_dsp *sst, struct skl_ipc_header header)
 	base = (u8 __iomem *)sst->trace_wind.addr;
 	/* move to the source dsp tracing window */
 	base += (core * size);
-	ptr = (u32 *) base;
-	read = ptr[0];
-	write = ptr[1];
+	read = readl(base);
+	write = readl(base + 4);
 	if (write > read) {
 		skl_dsp_write_log(sst, (base + 8 + read),
 					core, (write - read));
-		/* read pointer */
-		ptr[0] += write - read;
 	} else {
 		skl_dsp_write_log(sst, (base + 8 + read),
 					core, size - 8 - read);
 		skl_dsp_write_log(sst, (base + 8),
 					core, write);
-		ptr[0] = write;
 	}
+	writel(write, base);
 	skl_dsp_put_log_buff(sst, core);
 }
 
diff --git a/sound/soc/intel/skylake/skl-sst-utils.c b/sound/soc/intel/skylake/skl-sst-utils.c
index 64251ce0f86c..297a49ab693b 100644
--- a/sound/soc/intel/skylake/skl-sst-utils.c
+++ b/sound/soc/intel/skylake/skl-sst-utils.c
@@ -321,13 +321,11 @@ static int skl_check_ext_excep_data_avail(struct skl_sst *ctx, int idx)
 	u32 size = ctx->dsp->trace_wind.size/ctx->dsp->trace_wind.nr_dsp;
 	u8 *base = (u8 __force*)ctx->dsp->trace_wind.addr;
 	u32 read, write;
-	u32 *ptr;
 
 	/* move to the source dsp tracing window */
         base += (idx * size);
-        ptr = (u32 *) base;
-        read = ptr[0];
-        write = ptr[1];
+	read = readl(base);
+	write = readl(base + 4);
 
 	if (write == read)
 		return 0;
@@ -349,13 +347,11 @@ static void skl_read_ext_exception_data(struct skl_sst *ctx, int idx,
 	u8 *base = (u8 __force*)ctx->dsp->trace_wind.addr;
 	u32 read, write;
 	int offset = *sz_ext_dump;
-	u32 *ptr;
 
 	/* move to the current core's tracing window */
 	base += (idx * size);
-	ptr = (u32 *) base;
-	read = ptr[0];
-	write = ptr[1];
+	read = readl(base);
+	write = readl(base + 4);
 
 	/* in case of read = write, just return */
 	if (read == write)
@@ -367,7 +363,6 @@ static void skl_read_ext_exception_data(struct skl_sst *ctx, int idx,
 				(write - read));
 		*sz_ext_dump = offset + write - read;
 		/* advance read pointer */
-		ptr[0] += write - read;
 	} else {
 		/* wrap around condition - copy till the end */
 		memcpy_fromio((ext_core_dump + offset),
@@ -381,8 +376,8 @@ static void skl_read_ext_exception_data(struct skl_sst *ctx, int idx,
 			(const void __iomem *) (base + 8), write);
 		*sz_ext_dump = offset + write;
 		/* update the read pointer */
-		ptr[0] = write;
 	}
+	writel(write, base);
 }
 
 int skl_dsp_crash_dump_read(struct skl_sst *ctx, int stack_size)
-- 
2.21.0

