From 945ccbcbf6ef88361a945f1d858a76fdf71da64e Mon Sep 17 00:00:00 2001
From: Zhou Furong <furong.zhou@intel.com>
Date: Thu, 24 Sep 2020 14:29:22 +0800
Subject: [PATCH 96/96] This is hotfix for pks compile error

Signed-off-by: Zhou Furong <furong.zhou@intel.com>
---
 arch/x86/include/asm/pkeys.h | 2 ++
 arch/x86/mm/fault.c          | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/arch/x86/include/asm/pkeys.h b/arch/x86/include/asm/pkeys.h
index 371ee72ae365..3c9956464d5e 100644
--- a/arch/x86/include/asm/pkeys.h
+++ b/arch/x86/include/asm/pkeys.h
@@ -48,6 +48,7 @@ static inline int arch_override_mprotect_pkey(struct vm_area_struct *vma,
 extern int __arch_set_user_pkey_access(struct task_struct *tsk, int pkey,
 		unsigned long init_val);
 
+#ifdef CONFIG_ARCH_HAS_PKEYS
 #define ARCH_VM_PKEY_FLAGS (VM_PKEY_BIT0 | VM_PKEY_BIT1 | VM_PKEY_BIT2 | VM_PKEY_BIT3)
 
 #define mm_pkey_allocation_map(mm)	(mm->context.pkey_allocation_map)
@@ -135,6 +136,7 @@ static inline int vma_pkey(struct vm_area_struct *vma)
 
 	return (vma->vm_flags & vma_pkey_mask) >> VM_PKEY_SHIFT;
 }
+#endif
 
 u32 update_pkey_val(u32 pk_reg, int pkey, unsigned int flags);
 
diff --git a/arch/x86/mm/fault.c b/arch/x86/mm/fault.c
index 741cf4c0aeea..416f0ecc21b6 100644
--- a/arch/x86/mm/fault.c
+++ b/arch/x86/mm/fault.c
@@ -553,8 +553,10 @@ show_fault_oops(struct pt_regs *regs, unsigned long error_code, unsigned long ad
 		 (error_code & X86_PF_PK)    ? "protection keys violation" :
 					       "permissions violation");
 
+#ifdef CONFIG_ARCH_HAS_PKEYS
 	if (irq_state && (error_code & X86_PF_PK))
 		pr_alert("PKRS: 0x%x\n", irq_state->pkrs);
+#endif
 
 	if (!(error_code & X86_PF_USER) && user_mode(regs)) {
 		struct desc_ptr idt, gdt;
-- 
2.27.0

