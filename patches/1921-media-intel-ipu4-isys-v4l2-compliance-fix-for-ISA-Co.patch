From 6f076cfcfc4ea23faf32678fad2f59addc23494c Mon Sep 17 00:00:00 2001
From: Yong Zhi <yong.zhi@intel.com>
Date: Wed, 28 Feb 2018 17:35:19 -0600
Subject: [PATCH 1921/2328] media: intel-ipu4: isys: v4l2-compliance fix for
 ISA Config node

Message for Open Source:
Fix v4l2-compliance fails on "Intel IPU4 ISA config" and
"Intel IPU4 ISA 3A stats" video nodes.

Message for Internal:
[Issue/Feature] v4l2-compliance -d /dev/video15

"fail: G_OUTPUT not supported for an output device"
"test VIDIOC_G/S/ENUMOUTPUT: FAIL"

"fail: Video Output Multiplanar cap set,
      but no Video Output Multiplanar formats defined"
"test VIDIOC_ENUM_FMT/FRAMESIZES/FRAMEINTERVALS: FAIL"

"fail: !pix_mp.width || !pix_mp.height"
"fail: pixelformat 63347069 (ip4c) not reported by ENUM_FMT...."
"fail: pix.field == V4L2_FIELD_ANY"
"test VIDIOC_G_FMT: FAIL"

"fail: colorspace >= 0xff"
"fail: testColorspace(pix_mp.pixelformat, pix_mp.colorspace, ..)"
"fail: v4l2-test-formats.cpp(466): !pfmt.sizeimage"
"fail: Video Output Multiplanar is valid,
       but TRY_FMT failed to return a format"
"test VIDIOC_TRY_FMT: FAIL"

(Same test results observed for "ISA 3A" node)
[Root Cause/Changes] Missing implementation, invalid sizeimage
can lead to buffer overflow.

Change-Id: Ide89d8c0b3e5488d7d433f02c20fc56ced07f137
Signed-off-by: Yong Zhi <yong.zhi@intel.com>
Signed-off-by: Meng Wei <wei.meng@intel.com>
---
 drivers/media/pci/intel/ipu4/ipu4-isys-isa.c | 84 +++++++++++++++++++++++++---
 1 file changed, 77 insertions(+), 7 deletions(-)

diff --git a/drivers/media/pci/intel/ipu4/ipu4-isys-isa.c b/drivers/media/pci/intel/ipu4/ipu4-isys-isa.c
index 2270ee04..3bc6510 100644
--- a/drivers/media/pci/intel/ipu4/ipu4-isys-isa.c
+++ b/drivers/media/pci/intel/ipu4/ipu4-isys-isa.c
@@ -113,15 +113,27 @@ isa_config_try_fmt_vid_out_mplane(struct ipu_isys_video *av,
 
 	mpix->plane_fmt[ISA_CFG_BUF_PLANE_PG].bytesperline = 0;
 	mpix->plane_fmt[ISA_CFG_BUF_PLANE_PG].sizeimage =
-	    ALIGN(max_t(u32, sizeof(struct ia_css_process_group_light),
-			mpix->plane_fmt[ISA_CFG_BUF_PLANE_PG].sizeimage),
-		  av->isys->line_align);
+		ALIGN(clamp(mpix->plane_fmt[ISA_CFG_BUF_PLANE_PG].sizeimage,
+			    (u32)sizeof(struct ia_css_process_group_light),
+			    UINT_MAX - av->isys->line_align),
+		      av->isys->line_align);
 
 	mpix->plane_fmt[ISA_CFG_BUF_PLANE_DATA].bytesperline = 0;
 	mpix->plane_fmt[ISA_CFG_BUF_PLANE_DATA].sizeimage =
-	    ALIGN(max(1U,
-		      mpix->plane_fmt[ISA_CFG_BUF_PLANE_DATA].sizeimage),
-		  av->isys->line_align);
+		ALIGN(clamp(mpix->plane_fmt[ISA_CFG_BUF_PLANE_DATA].sizeimage,
+			    1U, UINT_MAX - av->isys->line_align),
+		       av->isys->line_align);
+
+	memset(mpix->plane_fmt[ISA_CFG_BUF_PLANE_PG].reserved, 0,
+	       sizeof(mpix->plane_fmt[ISA_CFG_BUF_PLANE_PG].reserved));
+	memset(mpix->plane_fmt[ISA_CFG_BUF_PLANE_DATA].reserved, 0,
+	       sizeof(mpix->plane_fmt[ISA_CFG_BUF_PLANE_DATA].reserved));
+
+	mpix->colorspace = V4L2_COLORSPACE_RAW;
+	mpix->xfer_func = V4L2_XFER_FUNC_DEFAULT;
+	mpix->ycbcr_enc = V4L2_YCBCR_ENC_DEFAULT;
+	mpix->quantization = V4L2_QUANTIZATION_DEFAULT;
+	mpix->field = V4L2_FIELD_NONE;
 
 	return pfmt;
 }
@@ -149,13 +161,61 @@ static int isa_config_vidioc_try_fmt_vid_out_mplane(struct file *file, void *fh,
 	return 0;
 }
 
+static int vidioc_enum_output(struct file *file, void *fh,
+			      struct v4l2_output *output)
+{
+	if (output->index > 0)
+		return -EINVAL;
+
+	strlcpy(output->name, "camera", sizeof(output->name));
+	output->type = V4L2_INPUT_TYPE_CAMERA;
+
+	return 0;
+}
+
+static int vidioc_g_output(struct file *file, void *fh, unsigned int *output)
+{
+	*output = 0;
+
+	return 0;
+}
+
+static int vidioc_s_output(struct file *file, void *fh, unsigned int output)
+{
+	return output ? -EINVAL : 0;
+}
+
+static int vidioc_enum_input(struct file *file, void *fh,
+			     struct v4l2_input *input)
+{
+	if (input->index > 0)
+		return -EINVAL;
+	strlcpy(input->name, "camera", sizeof(input->name));
+	input->type = V4L2_INPUT_TYPE_CAMERA;
+
+	return 0;
+}
+
+static int vidioc_g_input(struct file *file, void *fh, unsigned int *input)
+{
+	*input = 0;
+
+	return 0;
+}
+
+static int vidioc_s_input(struct file *file, void *fh, unsigned int input)
+{
+	return input ? -EINVAL : 0;
+}
+
 static const struct v4l2_ioctl_ops isa_config_ioctl_ops = {
 	.vidioc_querycap = ipu_isys_vidioc_querycap,
-	.vidioc_enum_fmt_vid_cap = ipu_isys_vidioc_enum_fmt,
+	.vidioc_enum_fmt_vid_out_mplane = ipu_isys_vidioc_enum_fmt,
 	.vidioc_g_fmt_vid_out_mplane = isa_config_vidioc_g_fmt_vid_out_mplane,
 	.vidioc_s_fmt_vid_out_mplane = isa_config_vidioc_s_fmt_vid_out_mplane,
 	.vidioc_try_fmt_vid_out_mplane =
 	    isa_config_vidioc_try_fmt_vid_out_mplane,
+	.vidioc_enum_fmt_vid_cap_mplane = ipu_isys_vidioc_enum_fmt,
 	.vidioc_g_fmt_vid_cap_mplane = isa_config_vidioc_g_fmt_vid_out_mplane,
 	.vidioc_s_fmt_vid_cap_mplane = isa_config_vidioc_s_fmt_vid_out_mplane,
 	.vidioc_try_fmt_vid_cap_mplane =
@@ -169,6 +229,12 @@ static const struct v4l2_ioctl_ops isa_config_ioctl_ops = {
 	.vidioc_streamon = vb2_ioctl_streamon,
 	.vidioc_streamoff = vb2_ioctl_streamoff,
 	.vidioc_expbuf = vb2_ioctl_expbuf,
+	.vidioc_enum_output = vidioc_enum_output,
+	.vidioc_g_output = vidioc_g_output,
+	.vidioc_s_output = vidioc_s_output,
+	.vidioc_enum_input = vidioc_enum_input,
+	.vidioc_g_input = vidioc_g_input,
+	.vidioc_s_input = vidioc_s_input,
 };
 
 static const struct v4l2_subdev_core_ops isa_sd_core_ops = {
@@ -982,6 +1048,8 @@ int ipu_isys_isa_init(struct ipu_isys_isa *isa,
 		 IPU_ISYS_ENTITY_PREFIX " ISA config");
 	isa->av_config.isys = isys;
 	isa->av_config.pfmts = isa_config_pfmts;
+	isa->av_config.mpix.width = fmt.format.width;
+	isa->av_config.mpix.height = fmt.format.height;
 	isa->av_config.try_fmt_vid_mplane = isa_config_try_fmt_vid_out_mplane;
 	isa->av_config.prepare_firmware_stream_cfg =
 	    isa_prepare_firmware_stream_cfg_param;
@@ -1009,6 +1077,8 @@ int ipu_isys_isa_init(struct ipu_isys_isa *isa,
 		 IPU_ISYS_ENTITY_PREFIX " ISA 3A stats");
 	isa->av_3a.isys = isys;
 	isa->av_3a.pfmts = isa_config_pfmts;
+	isa->av_3a.mpix.width = fmt.format.width;
+	isa->av_3a.mpix.height = fmt.format.height;
 	isa->av_3a.try_fmt_vid_mplane = isa_config_try_fmt_vid_out_mplane;
 	isa->av_3a.prepare_firmware_stream_cfg =
 	    isa_prepare_firmware_stream_cfg_param;
-- 
2.7.4

