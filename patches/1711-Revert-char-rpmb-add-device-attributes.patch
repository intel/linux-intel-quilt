From f4e2e683d25be0acbeda8aceeeaf23082dd9c40e Mon Sep 17 00:00:00 2001
From: Tomas Winkler <tomas.winkler@intel.com>
Date: Thu, 31 May 2018 23:24:46 +0300
Subject: [PATCH 1711/2328] Revert "char: rpmb: add device attributes"

This reverts commit 61ed35e0a7bf46fbf98119087de57a4f61e0cc66.

Change-Id: I9721b69ef206e5c984706c8a0ae8f2a94c3280f5
---
 Documentation/ABI/testing/sysfs-class-rpmb | 27 -----------
 drivers/char/rpmb/core.c                   | 72 ------------------------------
 2 files changed, 99 deletions(-)

diff --git a/Documentation/ABI/testing/sysfs-class-rpmb b/Documentation/ABI/testing/sysfs-class-rpmb
index 75d7065..23a31be 100644
--- a/Documentation/ABI/testing/sysfs-class-rpmb
+++ b/Documentation/ABI/testing/sysfs-class-rpmb
@@ -18,30 +18,3 @@ Contact:	Tomas Winkler <tomas.winkler@intel.com>
 Description:
 		The /sys/class/rpmb/rpmbN directory is created for
 		each RPMB registered device.
-
-What:		/sys/class/rpmb/rpmbN/type
-Date:		Jun 2017
-KernelVersion:	4.12
-Contact:	Tomas Winkler <tomas.winkler@intel.com>
-Description:
-		The /sys/class/rpmb/rpmbN/type file contains device
-		underlaying storage type technology: EMMC, UFS, SIM.
-
-What:		/sys/class/rpmb/rpmbN/id
-Date:		Jun 2017
-KernelVersion:	4.12
-Contact:	Tomas Winkler <tomas.winkler@intel.com>
-Description:
-		The /sys/class/rpmb/rpmbN/id file contains unique device id
-		in a binary form as defined by underlying storage device.
-		In case of multiple RPMB devices a user can determine correct
-		device.
-		The content can be parsed according the storage device type.
-
-What:		/sys/class/rpmb/rpmbN/reliable_wr_cnt
-Date:		Jun 2017
-KernelVersion:	4.12
-Contact:	Tomas Winkler <tomas.winkler@intel.com>
-Description:
-		The /sys/class/rpmb/rpmbN/reliable_wr_cnt file contains
-		number of blocks that can be reliable written in a single request.
diff --git a/drivers/char/rpmb/core.c b/drivers/char/rpmb/core.c
index 7c0ceed..1bdb5e6 100644
--- a/drivers/char/rpmb/core.c
+++ b/drivers/char/rpmb/core.c
@@ -375,76 +375,6 @@ struct rpmb_dev *rpmb_dev_find_by_device(struct device *parent)
 }
 EXPORT_SYMBOL_GPL(rpmb_dev_find_by_device);
 
-static ssize_t type_show(struct device *dev,
-			 struct device_attribute *attr, char *buf)
-{
-	struct rpmb_dev *rdev = to_rpmb_dev(dev);
-	ssize_t ret;
-
-	switch (rdev->ops->type) {
-	case RPMB_TYPE_EMMC:
-		ret = sprintf(buf, "EMMC\n");
-		break;
-	case RPMB_TYPE_UFS:
-		ret = sprintf(buf, "UFS\n");
-		break;
-	case RPMB_TYPE_SIM:
-		ret = sprintf(buf, "SIM\n");
-		break;
-	default:
-		ret = sprintf(buf, "UNKNOWN\n");
-		break;
-	}
-
-	return ret;
-}
-static DEVICE_ATTR_RO(type);
-
-static ssize_t id_read(struct file *file, struct kobject *kobj,
-		       struct bin_attribute *attr, char *buf,
-		       loff_t off, size_t count)
-{
-	struct device *dev = kobj_to_dev(kobj);
-	struct rpmb_dev *rdev = to_rpmb_dev(dev);
-	size_t sz = min_t(size_t, rdev->ops->dev_id_len, PAGE_SIZE);
-
-	if (!rdev->ops->dev_id)
-		return 0;
-
-	return memory_read_from_buffer(buf, count, &off, rdev->ops->dev_id, sz);
-}
-static BIN_ATTR_RO(id, 0);
-
-static ssize_t reliable_wr_cnt_show(struct device *dev,
-				    struct device_attribute *attr, char *buf)
-{
-	struct rpmb_dev *rdev = to_rpmb_dev(dev);
-
-	return sprintf(buf, "%u\n", rdev->ops->reliable_wr_cnt);
-}
-static DEVICE_ATTR_RO(reliable_wr_cnt);
-
-static struct attribute *rpmb_attrs[] = {
-	&dev_attr_type.attr,
-	&dev_attr_reliable_wr_cnt.attr,
-	NULL,
-};
-
-static struct bin_attribute *rpmb_bin_attributes[] = {
-	&bin_attr_id,
-	NULL,
-};
-
-static struct attribute_group rpmb_attr_group = {
-	.attrs = rpmb_attrs,
-	.bin_attrs = rpmb_bin_attributes,
-};
-
-static const struct attribute_group *rpmb_attr_groups[] = {
-	&rpmb_attr_group,
-	NULL
-};
-
 /**
  * rpmb_dev_unregister - unregister RPMB partition from the RPMB subsystem
  *
@@ -514,8 +444,6 @@ struct rpmb_dev *rpmb_dev_register(struct device *dev,
 	dev_set_name(&rdev->dev, "rpmb%d", id);
 	rdev->dev.class = &rpmb_class;
 	rdev->dev.parent = dev;
-	rdev->dev.groups = rpmb_attr_groups;
-
 	ret = device_register(&rdev->dev);
 	if (ret)
 		goto exit;
-- 
2.7.4

