From 8532b08b337c6e72bfb0973893db82c43b37e44d Mon Sep 17 00:00:00 2001
From: Fei Jiang <fei.jiang@intel.com>
Date: Mon, 25 Jun 2018 13:32:54 +0800
Subject: [PATCH 2003/2328] drm/i915/gvt: cache mfn when gfn is same to avoid
 redundant gfn_to_mfn

ppgtt_populate_shadow_page_by_guest_entry => ppgtt_populate_shadow_page:
	for_each_present_guest_entry(spt, &ge, i) {
		ret = gtt_entry_p2m(vgpu, &ge, &se);
			ppgtt_set_shadow_entry(spt, &se, i);
		}
When ppgtt shadow page is allocated in upper stack, before set every shadow
entry, we need iterate 4K/8 times to call gtt_entry_p2m for every entry in
one shadow page, while in gtt_entry_p2m, gfn for every entry is same, so we
can optimize to avoid calling intel_gvt_hypervisor_gfn_to_mfn by saving gfn
for first entry.

Signed-off-by: Fei Jiang <fei.jiang@intel.com>
---
 drivers/gpu/drm/i915/gvt/gtt.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/gvt/gtt.c b/drivers/gpu/drm/i915/gvt/gtt.c
index 4148506..0844af4 100644
--- a/drivers/gpu/drm/i915/gvt/gtt.c
+++ b/drivers/gpu/drm/i915/gvt/gtt.c
@@ -516,6 +516,7 @@ static int gtt_entry_p2m(struct intel_vgpu *vgpu, struct intel_gvt_gtt_entry *p,
 {
 	struct intel_gvt_gtt_pte_ops *ops = vgpu->gvt->gtt.pte_ops;
 	unsigned long gfn, mfn;
+	static unsigned long saved_gfn, saved_mfn;
 
 	*m = *p;
 
@@ -524,13 +525,19 @@ static int gtt_entry_p2m(struct intel_vgpu *vgpu, struct intel_gvt_gtt_entry *p,
 
 	gfn = ops->get_pfn(p);
 
-	mfn = intel_gvt_hypervisor_gfn_to_mfn(vgpu, gfn);
+	if (gfn != saved_gfn)
+		mfn = intel_gvt_hypervisor_gfn_to_mfn(vgpu, gfn);
+	else
+		mfn = saved_mfn;
+
 	if (mfn == INTEL_GVT_INVALID_ADDR) {
 		gvt_vgpu_err("fail to translate gfn: 0x%lx\n", gfn);
 		return -ENXIO;
 	}
 
 	ops->set_pfn(m, mfn);
+	saved_gfn = gfn;
+	saved_mfn = mfn;
 	return 0;
 }
 
-- 
2.7.4

