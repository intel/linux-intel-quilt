From 47ac29551b3643788bcdccc0ec9f75b90ca9e8f1 Mon Sep 17 00:00:00 2001
From: Tomas Winkler <tomas.winkler@intel.com>
Date: Wed, 4 Jan 2017 14:14:21 +0200
Subject: [PATCH 13/65] scsi: ufs: revamp string descriptor reading

Define new a type: uc_string_id for easier string
handling and less casting. Reduce number or string
copies in price of a dynamic allocation.
In addition drop usage of variable length array (VLA)
as it's not considered to be safe.

V9: Fix memory corruption.

Change-Id: Ieda6a4b68e60b8a2d8a2d93a371ff5396dec989b
Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
---
 drivers/scsi/ufs/ufs-sysfs.c |  2 +-
 drivers/scsi/ufs/ufs.h       |  2 +-
 drivers/scsi/ufs/ufshcd.c    | 20 ++++++++++----------
 drivers/scsi/ufs/ufshcd.h    |  4 ++--
 4 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/drivers/scsi/ufs/ufs-sysfs.c b/drivers/scsi/ufs/ufs-sysfs.c
index 0926b1c0c3f7..98a18fa3b04f 100644
--- a/drivers/scsi/ufs/ufs-sysfs.c
+++ b/drivers/scsi/ufs/ufs-sysfs.c
@@ -570,7 +570,7 @@ static ssize_t _name##_show(struct device *dev,				\
 	struct ufs_hba *hba = dev_get_drvdata(dev);			\
 	int ret;							\
 	int desc_len = QUERY_DESC_MAX_SIZE;				\
-	u8 *desc_buf;							\
+	char *desc_buf;							\
 									\
 	desc_buf = kzalloc(QUERY_DESC_MAX_SIZE, GFP_ATOMIC);		\
 	if (!desc_buf)                                                  \
diff --git a/drivers/scsi/ufs/ufs.h b/drivers/scsi/ufs/ufs.h
index ed54eac4e6d7..ee93ba19c78f 100644
--- a/drivers/scsi/ufs/ufs.h
+++ b/drivers/scsi/ufs/ufs.h
@@ -552,7 +552,7 @@ struct ufs_dev_desc {
 	u8 subclass;
 	u32 min_uma_sz;
 	u16 wmanufacturerid;
-	u8 *model;
+	char *model;
 };
 
 /**
diff --git a/drivers/scsi/ufs/ufshcd.c b/drivers/scsi/ufs/ufshcd.c
index 35767da207de..86a00f2349dd 100644
--- a/drivers/scsi/ufs/ufshcd.c
+++ b/drivers/scsi/ufs/ufshcd.c
@@ -3153,7 +3153,7 @@ int ufshcd_read_desc_param(struct ufs_hba *hba,
 			   enum desc_idn desc_id,
 			   int desc_index,
 			   u8 param_offset,
-			   u8 *param_read_buf,
+			   void *param_read_buf,
 			   u8 param_size)
 {
 	int ret;
@@ -3253,7 +3253,7 @@ struct uc_string_id {
 } __packed;
 
 /* replace non-printable or non-ASCII characters with spaces */
-static inline char ufshcd_remove_non_printable(u8 ch)
+static inline char blank_non_printable(char ch)
 {
 	return (ch >= 0x20 && ch <= 0x7e) ? ch : ' ';
 }
@@ -3267,16 +3267,15 @@ static inline char ufshcd_remove_non_printable(u8 ch)
  * @ascii: if true convert from unicode to ascii characters
  *         null terminated string.
  *
- * Return:
- * *      string size on success.
- * *      -ENOMEM: on allocation failure
- * *      -EINVAL: on a wrong parameter
+ * Return: string size on success.
+ *         -ENOMEM: on allocation failure
+ *         -EINVAL: on a wrong parameter
  */
 int ufshcd_read_string_desc(struct ufs_hba *hba, u8 desc_index,
-			    u8 **buf, bool ascii)
+			    char **buf, bool ascii)
 {
 	struct uc_string_id *uc_str;
-	u8 *str;
+	char *str;
 	int ret;
 
 	if (!buf)
@@ -3324,16 +3323,17 @@ int ufshcd_read_string_desc(struct ufs_hba *hba, u8 desc_index,
 
 		/* replace non-printable or non-ASCII characters with spaces */
 		for (i = 0; i < ret; i++)
-			str[i] = ufshcd_remove_non_printable(str[i]);
+			str[i] = blank_non_printable(str[i]);
 
 		str[ret++] = '\0';
 
 	} else {
-		str = kmemdup(uc_str, uc_str->len, GFP_KERNEL);
+		str = kzalloc(uc_str->len, GFP_KERNEL);
 		if (!str) {
 			ret = -ENOMEM;
 			goto out;
 		}
+		memcpy(str, uc_str, uc_str->len);
 		ret = uc_str->len;
 	}
 out:
diff --git a/drivers/scsi/ufs/ufshcd.h b/drivers/scsi/ufs/ufshcd.h
index 3b9a3b56c6b9..4eee863b83f3 100644
--- a/drivers/scsi/ufs/ufshcd.h
+++ b/drivers/scsi/ufs/ufshcd.h
@@ -916,7 +916,7 @@ int ufshcd_read_desc_param(struct ufs_hba *hba,
 			   enum desc_idn desc_id,
 			   int desc_index,
 			   u8 param_offset,
-			   u8 *param_read_buf,
+			   void *param_read_buf,
 			   u8 param_size);
 int __ufshcd_query_attr(struct ufs_hba *hba, enum query_opcode opcode,
 		      enum attr_idn idn, u8 index, u8 selector, u32 *attr_val,
@@ -929,7 +929,7 @@ int ufshcd_query_flag(struct ufs_hba *hba, enum query_opcode opcode,
 #define SD_ASCII_STD true
 #define SD_RAW false
 int ufshcd_read_string_desc(struct ufs_hba *hba, u8 desc_index,
-			    u8 **buf, bool ascii);
+			    char **buf, bool ascii);
 
 int ufshcd_hold(struct ufs_hba *hba, bool async);
 void ufshcd_release(struct ufs_hba *hba);
-- 
2.17.1

