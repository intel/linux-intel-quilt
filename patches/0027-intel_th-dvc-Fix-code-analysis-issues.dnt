From dec81f6644c469bd607b4de4dc6fc771e99db3be Mon Sep 17 00:00:00 2001
From: Traian Schiau <traianx.schiau@intel.com>
Date: Wed, 11 May 2016 10:22:36 +0300
Subject: [PATCH 27/63] intel_th-dvc: Fix code analysis issues

Fix some issues like possible NULL dereferencing, possible memory
leaks and invalid conditions, flagged by the code analysis tools.

Signed-off-by: Traian Schiau <traianx.schiau@intel.com>
---
 drivers/hwtracing/intel_th/msu-dvc.c | 35 +++++++++++++++++-----------
 1 file changed, 22 insertions(+), 13 deletions(-)

diff --git a/drivers/hwtracing/intel_th/msu-dvc.c b/drivers/hwtracing/intel_th/msu-dvc.c
index b8c700125ef7..8e5b245e64a9 100644
--- a/drivers/hwtracing/intel_th/msu-dvc.c
+++ b/drivers/hwtracing/intel_th/msu-dvc.c
@@ -432,14 +432,14 @@ static int mdd_setup_transfer_data(struct msu_dvc_dev *mdd)
 	}
 
 	mdd->tdata.block_count = msc_max_blocks(mdd->th_dev);
-	if (mdd->tdata.block_count <= 0) {
+	if (mdd->tdata.block_count == 0) {
 		mdd_err(mdd, "Invalid block count %zu\n",
 			mdd->tdata.block_count);
 		goto err;
 	}
 
 	mdd->tdata.block_size = msc_block_max_size(mdd->th_dev);
-	if (mdd->tdata.block_size <= 0) {
+	if (mdd->tdata.block_size == 0) {
 		mdd_err(mdd, "Invalid block size %zu\n", mdd->tdata.block_size);
 		goto err;
 	}
@@ -670,19 +670,24 @@ static int mdd_proc_trimmed_blocks(struct msu_dvc_dev *mdd, int nents)
 
 	for_each_sg(mdd->tdata.sg_raw, sg, nents, i) {
 		ptr = sg_virt(sg);
-		len = msc_data_sz((struct msc_block_desc *)ptr) + MSC_BDESC;
+		len = msc_data_sz((struct msc_block_desc *)ptr);
 		if (!len) {
 			mdd_err(mdd, "Zero length block");
-		} else {
-			if (!sg_dest)
-				sg_dest = mdd->tdata.sg_proc;
-			else
-				sg_dest = sg_next(sg_dest);
-			sg_set_buf(sg_dest, ptr, len);
-			out_cnt++;
+			continue;
 		}
+
+		len += MSC_BDESC;
+
+		if (!sg_dest)
+			sg_dest = mdd->tdata.sg_proc;
+		else
+			sg_dest = sg_next(sg_dest);
+		sg_set_buf(sg_dest, ptr, len);
+		out_cnt++;
 	}
-	sg_mark_end(sg_dest);
+	if (sg_dest)
+		sg_mark_end(sg_dest);
+
 	return out_cnt;
 }
 
@@ -713,7 +718,9 @@ static int mdd_proc_stp_only(struct msu_dvc_dev *mdd, int nents)
 			out_cnt++;
 		}
 	}
-	sg_mark_end(sg_dest);
+	if (sg_dest)
+		sg_mark_end(sg_dest);
+
 	return out_cnt;
 }
 
@@ -951,8 +958,10 @@ static struct msu_dvc_dev *mdd_alloc_device(const char *name)
 		return ERR_PTR(-ENOMEM);
 
 	mdd->ddev.name_add = kstrdup(name, GFP_KERNEL);
-	if (!mdd->ddev.name_add)
+	if (!mdd->ddev.name_add) {
+		kfree(mdd);
 		return ERR_PTR(-ENOMEM);
+	}
 
 	/* mdd->ddev.protocol = 0; */
 	/* mdd->ddev.desc = NULL; */
-- 
2.19.1

