From 9bfa3a8379816fdc21e89266f4d24988ca7d322a Mon Sep 17 00:00:00 2001
From: Yu-cheng Yu <yu-cheng.yu@intel.com>
Date: Thu, 6 Aug 2020 13:13:03 -0700
Subject: [PATCH 41/41] Provide back compatibility of ALLOC_SHSTK

Keep arch_prctl numbers unchanged before CET is upstreamed.

Signed-off-by: Yu-cheng Yu <yu-cheng.yu@intel.com>
---
 arch/x86/include/uapi/asm/prctl.h |  3 ++-
 arch/x86/kernel/cet_prctl.c       | 22 ++++++++++++++++++++++
 2 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/arch/x86/include/uapi/asm/prctl.h b/arch/x86/include/uapi/asm/prctl.h
index 3aaac13cdc87..5f11425b656e 100644
--- a/arch/x86/include/uapi/asm/prctl.h
+++ b/arch/x86/include/uapi/asm/prctl.h
@@ -17,6 +17,7 @@
 #define ARCH_X86_CET_STATUS		0x3001
 #define ARCH_X86_CET_DISABLE		0x3002
 #define ARCH_X86_CET_LOCK		0x3003
-#define ARCH_X86_CET_MMAP_SHSTK		0x3004
+#define ARCH_X86_CET_MMAP_SHSTK		0x3005
+#define ARCH_X86_CET_ALLOC_SHSTK	0x3004
 
 #endif /* _ASM_X86_PRCTL_H */
diff --git a/arch/x86/kernel/cet_prctl.c b/arch/x86/kernel/cet_prctl.c
index 2cd089e1542c..c6870efbaa59 100644
--- a/arch/x86/kernel/cet_prctl.c
+++ b/arch/x86/kernel/cet_prctl.c
@@ -28,6 +28,25 @@ static int copy_status_to_user(struct cet_status *cet, u64 arg2)
 	return copy_to_user((u64 __user *)arg2, buf, sizeof(buf));
 }
 
+static int handle_alloc_shstk(u64 arg2)
+{
+	unsigned long addr, size;
+
+	if (get_user(size, (unsigned long __user *)arg2))
+		return -EFAULT;
+
+	addr = cet_alloc_shstk(size, 0);
+	if (IS_ERR_VALUE(addr))
+		return PTR_ERR((void *)addr);
+
+	if (put_user((u64)addr, (u64 __user *)arg2)) {
+		vm_munmap(addr, size);
+		return -EFAULT;
+	}
+
+	return 0;
+}
+
 static int handle_mmap_shstk(u64 arg2)
 {
 	u64 buf[3];
@@ -95,6 +114,9 @@ int prctl_cet(int option, u64 arg2)
 		cet->locked = 1;
 		return 0;
 
+	case ARCH_X86_CET_ALLOC_SHSTK:
+		return handle_alloc_shstk(arg2);
+
 	case ARCH_X86_CET_MMAP_SHSTK:
 		return handle_mmap_shstk(arg2);
 
-- 
2.27.0

