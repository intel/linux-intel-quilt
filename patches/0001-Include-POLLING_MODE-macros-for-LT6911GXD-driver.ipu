From b825f82e1ebdfeaea398d65fd8ae4ade45875cf5 Mon Sep 17 00:00:00 2001
From: "Shahidan, Muhammad Shahmil" <muhammad.shahmil.shahidan@intel.com>
Date: Thu, 5 Jun 2025 22:07:51 +0800
Subject: [PATCH 1/5] Include POLLING_MODE macros for LT6911GXD driver.

Add macros for polling mode instances and part of lt691gxd_probe that
utilise polling mode.

Signed-off-by: Muhammad Shahmil Shahidan <muhammad.shahmil.shahidan@intel.com>
---
 drivers/media/i2c/lt6911gxd.c | 29 +++++++++++++++++++++++++++--
 1 file changed, 27 insertions(+), 2 deletions(-)

diff --git a/drivers/media/i2c/lt6911gxd.c b/drivers/media/i2c/lt6911gxd.c
index 0e79acac7a43..b571eefd07b2 100644
--- a/drivers/media/i2c/lt6911gxd.c
+++ b/drivers/media/i2c/lt6911gxd.c
@@ -86,10 +86,12 @@ struct lt6911gxd {
 	struct regmap *regmap;
 	struct gpio_desc *reset_gpio;
 	struct gpio_desc *irq_gpio;
+#ifdef POLLING_MODE
 /* polling mode add start*/
 	struct task_struct *poll_task;
 	u32 thread_run;
 /* polling mode add start*/
+#endif
 };
 
 static const struct v4l2_event lt6911gxd_ev_source_change = {
@@ -513,6 +515,7 @@ static void lt6911gxd_remove(struct i2c_client *client)
 	pm_runtime_set_suspended(&client->dev);
 }
 
+#ifdef POLLING_MODE
 /* try polling mode start*/
 
 static int lt6911gxd_detect_thread(void *data)
@@ -532,6 +535,7 @@ static int lt6911gxd_detect_thread(void *data)
 	return 0;
 }
 /* try polling mode end*/
+#endif
 
 static int lt6911gxd_probe(struct i2c_client *client)
 {
@@ -602,7 +606,7 @@ static int lt6911gxd_probe(struct i2c_client *client)
 	}
 
 	lt6911gxd_status_update(lt6911gxd);
-
+#ifdef POLLING_MODE
 	lt6911gxd->poll_task = kthread_create(lt6911gxd_detect_thread,
 			lt6911gxd, "lt6911gxd polling thread");
 		if (lt6911gxd->poll_task == NULL) {
@@ -613,7 +617,28 @@ static int lt6911gxd_probe(struct i2c_client *client)
 			wake_up_process(lt6911gxd->poll_task);
 			dev_info(&client->dev, "Started lt6911gxd polling thread.\n");
 		}
-
+#else
+	//lt6911gxd->irq_gpio = 541;
+
+	//lt6911gxd->irq_gpio = gpio_to_desc(541); //C5: GPP_C_6 ; DEV change to intc105D
+	lt6911gxd->irq_gpio = devm_gpiod_get(dev, "power-enable", GPIOD_IN);
+	if (IS_ERR(lt6911gxd->irq_gpio))
+		return dev_err_probe(dev, PTR_ERR(lt6911gxd->irq_gpio),
+				     "failed to get power-en gpio\n");
+	dev_dbg(dev, "lt6911gxd_probe: use power-en irq_gpio!\n");
+
+	/* Setting irq */
+	irq_pin_flags = IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING |
+			IRQF_ONESHOT;
+
+	ret = request_threaded_irq(gpiod_to_irq(lt6911gxd->irq_gpio), NULL,
+				   lt6911gxd_threaded_irq_fn,
+				   irq_pin_flags, NULL, lt6911gxd);
+	if (ret) {
+		dev_err(dev, "failed to request IRQ: %d\n", ret);
+		goto err_subdev_cleanup;
+	}
+#endif
 	ret = v4l2_async_register_subdev_sensor(&lt6911gxd->sd);
 	if (ret) {
 		dev_err(dev, "failed to register V4L2 subdev: %d\n", ret);
-- 
2.43.0

