From 00c8ca03bd224f0d869e1b88965475a0c446e499 Mon Sep 17 00:00:00 2001
From: Rander Wang <rander.wang@linux.intel.com>
Date: Wed, 4 Jul 2018 15:24:21 +0800
Subject: [PATCH 1804/2367] ASoC: SOF: apply IPC changes to hsw

(1) Set DONE bit in cmd_done function which processes msgs,
rather than doing it in IRQ function. But if a msg is not
in the rx list, it can only be done at IRQ function

(2) Check DONE bit in hsw_is_ready function

Signed-off-by: Rander Wang <rander.wang@linux.intel.com>
---
 sound/soc/sof/intel/hsw.c | 49 ++++++++++++++++++++++++++++++-----------------
 1 file changed, 31 insertions(+), 18 deletions(-)

diff --git a/sound/soc/sof/intel/hsw.c b/sound/soc/sof/intel/hsw.c
index d81f8de..42d7fa6 100644
--- a/sound/soc/sof/intel/hsw.c
+++ b/sound/soc/sof/intel/hsw.c
@@ -71,6 +71,8 @@ static const struct snd_sof_debugfs_map hsw_debugfs[] = {
 	{"shim", HSW_DSP_BAR, SHIM_OFFSET, SHIM_SIZE},
 };
 
+static int hsw_cmd_done(struct snd_sof_dev *sdev, int dir);
+
 /*
  * Memory copy.
  */
@@ -363,15 +365,16 @@ static irqreturn_t hsw_irq_thread(int irq, void *context)
 		/* Handle Immediate reply from DSP Core */
 		hsw_mailbox_read(sdev, sdev->host_box.offset, &hdr,
 				 sizeof(hdr));
-		snd_sof_ipc_reply(sdev, hdr);
-
-		/* clear DONE bit - tell DSP we have completed */
-		snd_sof_dsp_update_bits_unlocked(sdev, HSW_DSP_BAR, SHIM_IPCX,
-						 SHIM_IPCX_DONE, 0);
 
-		/* unmask Done interrupt */
-		snd_sof_dsp_update_bits_unlocked(sdev, HSW_DSP_BAR, SHIM_IMRX,
-						 SHIM_IMRX_DONE, 0);
+		/*
+		 * handle immediate reply from DSP core. If the msg is
+		 * found, set done bit in cmd_done which is called at the
+		 * end of message processing function, else set it here
+		 * because the done bit can't be set in cmd_done function
+		 * which is triggered by msg
+		 */
+		if (snd_sof_ipc_reply(sdev, hdr))
+			hsw_cmd_done(sdev, SOF_IPC_DSP_REPLY);
 	}
 
 	ipcd = snd_sof_dsp_read(sdev, HSW_DSP_BAR, SHIM_IPCD);
@@ -528,7 +531,7 @@ static int hsw_is_ready(struct snd_sof_dev *sdev)
 	u32 val;
 
 	val = snd_sof_dsp_read(sdev, HSW_DSP_BAR, SHIM_IPCX);
-	if (val & SHIM_IPCX_BUSY)
+	if ((val & SHIM_IPCX_BUSY) || (val & SHIM_IPCX_DONE))
 		return 0;
 
 	return 1;
@@ -574,16 +577,26 @@ static int hsw_get_reply(struct snd_sof_dev *sdev, struct snd_sof_ipc_msg *msg)
 	return ret;
 }
 
-static int hsw_cmd_done(struct snd_sof_dev *sdev)
+static int hsw_cmd_done(struct snd_sof_dev *sdev, int dir)
 {
-	/* clear BUSY bit and set DONE bit - accept new messages */
-	snd_sof_dsp_update_bits_unlocked(sdev, HSW_DSP_BAR, SHIM_IPCD,
-					 SHIM_IPCD_BUSY | SHIM_IPCD_DONE,
-					 SHIM_IPCD_DONE);
-
-	/* unmask busy interrupt */
-	snd_sof_dsp_update_bits_unlocked(sdev, HSW_DSP_BAR, SHIM_IMRX,
-					 SHIM_IMRX_BUSY, 0);
+	if (dir == SOF_IPC_HOST_REPLY) {
+		/* clear BUSY bit and set DONE bit - accept new messages */
+		snd_sof_dsp_update_bits_unlocked(sdev, HSW_DSP_BAR, SHIM_IPCD,
+						 SHIM_IPCD_BUSY | SHIM_IPCD_DONE,
+						 SHIM_IPCD_DONE);
+
+		/* unmask busy interrupt */
+		snd_sof_dsp_update_bits_unlocked(sdev, HSW_DSP_BAR, SHIM_IMRX,
+						 SHIM_IMRX_BUSY, 0);
+	} else {
+		/* clear DONE bit - tell DSP we have completed */
+		snd_sof_dsp_update_bits_unlocked(sdev, HSW_DSP_BAR, SHIM_IPCX,
+						 SHIM_IPCX_DONE, 0);
+
+		/* unmask Done interrupt */
+		snd_sof_dsp_update_bits_unlocked(sdev, HSW_DSP_BAR, SHIM_IMRX,
+						 SHIM_IMRX_DONE, 0);
+	}
 
 	return 0;
 }
-- 
2.7.4

