From d26a219710302560f05280cd389e79acfb740eff Mon Sep 17 00:00:00 2001
From: linya14x <linx.yang@intel.com>
Date: Wed, 11 Dec 2024 16:14:42 +0800
Subject: [PATCH 5/9] INT3472: Support LT6911GXD

Signed-off-by: linya14x <linx.yang@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
Signed-off-by: hepengpx <pengpengx.he@intel.com>
---
 drivers/platform/x86/intel/int3472/common.h   |  2 ++
 drivers/platform/x86/intel/int3472/discrete.c | 18 ++++++++++++++++--
 2 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/drivers/platform/x86/intel/int3472/common.h b/drivers/platform/x86/intel/int3472/common.h
index 145dec66df64..1d667e1187d2 100644
--- a/drivers/platform/x86/intel/int3472/common.h
+++ b/drivers/platform/x86/intel/int3472/common.h
@@ -22,6 +22,8 @@
 #define INT3472_GPIO_TYPE_POWER_ENABLE				0x0b
 #define INT3472_GPIO_TYPE_CLK_ENABLE				0x0c
 #define INT3472_GPIO_TYPE_PRIVACY_LED				0x0d
+#define INT3472_GPIO_TYPE_READY_STAT                            0x13
+#define INT3472_GPIO_TYPE_HDMI_DETECT                           0x14
 
 #define INT3472_PDEV_MAX_NAME_LEN				23
 #define INT3472_MAX_SENSOR_GPIOS				3
diff --git a/drivers/platform/x86/intel/int3472/discrete.c b/drivers/platform/x86/intel/int3472/discrete.c
index 092252eb95a8..4e2fbf43c2cf 100644
--- a/drivers/platform/x86/intel/int3472/discrete.c
+++ b/drivers/platform/x86/intel/int3472/discrete.c
@@ -190,6 +190,14 @@ static void int3472_get_func_and_polarity(struct acpi_device *adev, u8 *type,
 		*func = "power-enable";
 		*gpio_flags = GPIO_ACTIVE_HIGH;
 		break;
+	case INT3472_GPIO_TYPE_READY_STAT:
+		*func = "readystat";
+		*gpio_flags = GPIO_LOOKUP_FLAGS_DEFAULT;
+		break;
+	case INT3472_GPIO_TYPE_HDMI_DETECT:
+		*func = "hdmidetect";
+		*gpio_flags = GPIO_LOOKUP_FLAGS_DEFAULT;
+		break;
 	default:
 		*func = "unknown";
 		*gpio_flags = GPIO_ACTIVE_HIGH;
@@ -281,9 +289,15 @@ static int skl_int3472_handle_gpio_resources(struct acpi_resource *ares,
 	switch (type) {
 	case INT3472_GPIO_TYPE_RESET:
 	case INT3472_GPIO_TYPE_POWERDOWN:
+	case INT3472_GPIO_TYPE_READY_STAT:
+	case INT3472_GPIO_TYPE_HDMI_DETECT:
 		ret = skl_int3472_map_gpio_to_sensor(int3472, agpio, func, gpio_flags);
-		if (ret)
+		if (ret) {
 			err_msg = "Failed to map GPIO pin to sensor\n";
+			dev_warn(int3472->dev,
+				 "Failed to map GPIO pin to sensor, type %02x, func %s, gpio_flags %u\n",
+				 type, func, gpio_flags);
+		}
 
 		break;
 	case INT3472_GPIO_TYPE_CLK_ENABLE:
@@ -391,7 +405,7 @@ static int skl_int3472_discrete_probe(struct platform_device *pdev)
 		return ret;
 	}
 
-	if (cldb.control_logic_type != 1) {
+	if (cldb.control_logic_type != 1 && cldb.control_logic_type != 5) {
 		dev_err(&pdev->dev, "Unsupported control logic type %u\n",
 			cldb.control_logic_type);
 		return -EINVAL;
-- 
2.34.1

