From 25c0e7d041aeb6c9b828e4dbf127510273ffae1c Mon Sep 17 00:00:00 2001
From: "D, Lakshmi Sowjanya" <lakshmi.sowjanya.d@intel.com>
Date: Fri, 25 Jun 2021 16:32:29 +0800
Subject: [PATCH 2/4] ptp: PSE TGPIO fix

Fixed Oneshot output and input IOCTLS

Signed-off-by: D, Lakshmi Sowjanya <lakshmi.sowjanya.d@intel.com>
---
 drivers/ptp/ptp-intel-tgpio-plat.c | 25 ++++++-------------------
 1 file changed, 6 insertions(+), 19 deletions(-)

diff --git a/drivers/ptp/ptp-intel-tgpio-plat.c b/drivers/ptp/ptp-intel-tgpio-plat.c
index 54c2358db88a..64b2ed8dd88b 100644
--- a/drivers/ptp/ptp-intel-tgpio-plat.c
+++ b/drivers/ptp/ptp-intel-tgpio-plat.c
@@ -401,7 +401,7 @@ static int intel_tgpio_config_output(struct intel_tgpio *tgpio,
 	ctrl &= ~(TGPIOCTL_TS | TGPIOCTL_EP | TGPIOCTL_DIR |
 			TGPIOCTL_PWS  | TGPIOCTL_IEC_EC | TGPIOCTL_ICS);
 
-	if (on) {
+	if (on | (perout->flags & PTP_PEROUT_ONE_SHOT)) {
 		struct ptp_clock_time *period = &perout->period;
 		struct ptp_clock_time *start = &perout->start;
 
@@ -513,11 +513,6 @@ static int intel_tgpio_counttstamp(struct ptp_clock_info *info,
 				   struct ptp_event_count_tstamp *count)
 {
 	struct intel_tgpio *tgpio = to_intel_tgpio(info);
-	u32                 dt_hi_s;
-	u32                 dt_hi_e;
-	u32                 dt_lo;
-	struct timespec64   dt_ts;
-	struct timespec64   tsc_now;
 
 	spin_lock(&tgpio->lock);
 	while (tgpio->busy[count->index]) {
@@ -529,25 +524,17 @@ static int intel_tgpio_counttstamp(struct ptp_clock_info *info,
 	tgpio->busy[count->index] = true;
 	spin_unlock(&tgpio->lock);
 
-	tsc_now = get_tsc_ns_now(NULL);
-	dt_hi_s = convert_tsc_ns_to_art(&tsc_now) >> 32;
-
 	/* Reading lower 32-bit word of Time Capture Value (TCV) loads */
 	/* the event time and event count capture */
-	dt_lo = intel_tgpio_readl(tgpio->base, TGPIOTCV31_0(count->index));
+	count->device_time.nsec = intel_tgpio_readl(tgpio->base,
+						    TGPIOTCV31_0(count->index));
 	count->event_count = intel_tgpio_readl(tgpio->base,
 					       TGPIOECCV63_32(count->index));
 	count->event_count <<= 32;
 	count->event_count |= intel_tgpio_readl(tgpio->base,
 						TGPIOECCV31_0(count->index));
-	dt_hi_e = intel_tgpio_readl(tgpio->base, TGPIOTCV63_32(count->index));
-
-	if (dt_hi_e != dt_hi_s && dt_lo >> 31)
-		dt_ts = convert_art_to_tsc_ns(((u64)dt_hi_s << 32) | dt_lo);
-	else
-		dt_ts = convert_art_to_tsc_ns(((u64)dt_hi_e << 32) | dt_lo);
-
-	count->device_time = ts64_to_ptp_clock_time(dt_ts);
+	count->device_time.sec = intel_tgpio_readl(tgpio->base,
+						   TGPIOTCV63_32(count->index));
 
 	tgpio->busy[count->index] = false;
 
@@ -752,7 +739,7 @@ static int intel_tgpio_resume(struct device *dev)
 #endif
 
 static SIMPLE_DEV_PM_OPS(intel_tgpio_pm_ops, intel_tgpio_suspend,
-			 intel_tgpio_resume);
+			intel_tgpio_resume);
 
 static struct platform_driver intel_tgpio_driver = {
 	.driver = {
-- 
2.17.1

