From 92410fc55aff82665db867366f31bb5d24e2e4b5 Mon Sep 17 00:00:00 2001
From: Pankaj Bharadiya <pankaj.laxminarayan.bharadiya@intel.com>
Date: Thu, 30 Nov 2017 20:18:11 +0530
Subject: [PATCH 1348/2302] ASoC: Intel: Skylake: Ensure dai and dailink
 registration happens in sequence.

Platform registration happens in probe work handler whereas machine
device is registered during skl_probe. This sometimes results in cpu
dais not found if the work handler is sufficiently delayed due to system
load, even with deferred probe of machine driver.

So move machine device registration after registering platform.

Cherry-pick to 4.14/sof branch and fix compile error and typo.

Change-Id: I444a3d823900b7844bc6bb376de58fe873974009
Signed-off-by: Pankaj Bharadiya <pankaj.laxminarayan.bharadiya@intel.com>
Signed-off-by: Subhransu S. Prusty <subhransu.s.prusty@intel.com>
Signed-off-by: Guneshwor Singh <guneshwor.o.singh@intel.com>
Acked-By: Vinod Koul <vinod.koul@intel.com>
Signed-off-by: Mark Brown <broonie@kernel.org>
Signed-off-by: Yifan Li <yifan2.li@intel.com>
---
 sound/soc/intel/skylake/skl.c | 8 ++++----
 sound/soc/intel/skylake/skl.h | 2 +-
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/sound/soc/intel/skylake/skl.c b/sound/soc/intel/skylake/skl.c
index 6978cab..82b0053 100644
--- a/sound/soc/intel/skylake/skl.c
+++ b/sound/soc/intel/skylake/skl.c
@@ -507,9 +507,9 @@ static int skl_free(struct hdac_ext_bus *ebus)
 	return 0;
 }
 
-static int skl_find_mchine(struct skl *skl, void *driver_data)
+static int skl_find_machine(struct skl *skl, void *driver_data)
 {
-	struct sst_acpi_mach *mach = driver_data;
+	struct snd_soc_acpi_mach *mach = driver_data;
 	struct hdac_bus *bus = ebus_to_hbus(&skl->ebus);
 
 	if (IS_ENABLED(CONFIG_SND_SOC_RT700) ||
@@ -537,7 +537,7 @@ static int skl_find_mchine(struct skl *skl, void *driver_data)
 static int skl_machine_device_register(struct skl *skl)
 {
 	struct hdac_bus *bus = ebus_to_hbus(&skl->ebus);
-	struct sst_acpi_mach *mach = skl->mach;
+	struct snd_soc_acpi_mach *mach = skl->mach;
 	struct platform_device *pdev;
 	int ret;
 
@@ -915,7 +915,7 @@ static int skl_probe(struct pci_dev *pci,
 
 	/* check if dsp is there */
 	if (bus->ppcap) {
-		err = skl_find_mchine(skl, (void *)pci_id->driver_data);
+		err = skl_find_machine(skl, (void *)pci_id->driver_data);
 		if (err < 0)
 			goto out_nhlt_free;
 
diff --git a/sound/soc/intel/skylake/skl.h b/sound/soc/intel/skylake/skl.h
index db94ae1..245b213 100644
--- a/sound/soc/intel/skylake/skl.h
+++ b/sound/soc/intel/skylake/skl.h
@@ -137,7 +137,7 @@ struct skl {
 	bool mod_set_get_status;
 	struct ep_group_cnt grp_cnt;
 	struct skl_fw_cfg_info cfg;
-	struct sst_acpi_mach *mach;
+	struct snd_soc_acpi_mach *mach;
 	bool use_tplg_pcm;
 };
 
-- 
2.7.4

