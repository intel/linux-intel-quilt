From 6a530447c6cf0da1f11cb4548a84cf47058f1200 Mon Sep 17 00:00:00 2001
From: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date: Fri, 8 May 2020 14:02:29 +0300
Subject: [PATCH 38/55] pwm: pwm-dwc: Take care of calculated duty and period
 overflow

PWM core uses 32-bit duty cycle and period variables. Cap here
calculated values to 2^32-1 ns since HW can do longer.

Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
---
 drivers/pwm/pwm-dwc.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/pwm/pwm-dwc.c b/drivers/pwm/pwm-dwc.c
index 27868bc4f34c..e7ef34fd00c9 100644
--- a/drivers/pwm/pwm-dwc.c
+++ b/drivers/pwm/pwm-dwc.c
@@ -150,13 +150,15 @@ static void dwc_pwm_get_state(struct pwm_chip *chip, struct pwm_device *pwm,
 	duty = dwc_pwm_readl(dwc->base, DWC_TIM_LD_CNT2(pwm->hwpwm));
 	duty += 1;
 	duty *= dwc->clk_period_ns;
-	state->duty_cycle = duty;
+	/* Cap the value to 2^32-1 ns */
+	state->duty_cycle = min(duty, (u64)(u32)-1);
 
 	period = dwc_pwm_readl(dwc->base, DWC_TIM_LD_CNT(pwm->hwpwm));
 	period += 1;
 	period *= dwc->clk_period_ns;
 	period += duty;
-	state->period = period;
+	/* Cap the value to 2^32-1 ns */
+	state->period = min(period, (u64)(u32)-1);
 
 	state->polarity = PWM_POLARITY_NORMAL;
 
-- 
2.27.0

