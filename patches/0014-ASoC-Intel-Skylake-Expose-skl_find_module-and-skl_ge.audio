From 35af8d2337c62604739125692df09cc46f938981 Mon Sep 17 00:00:00 2001
From: Cezary Rojewski <cezary.rojewski@intel.com>
Date: Wed, 6 Mar 2019 14:05:44 +0100
Subject: [PATCH 014/163] ASoC: Intel: Skylake: Expose skl_find_module and
 skl_get_module_id

Add simple search method for obtaining Skylake modules in form of
skl_find_module. While at it, expose skl_get_module_id so function can
be used freely as module id is one of the most commonly used attributes
in IPCs.

Change-Id: Id1209bad938a08b2693d8f6040709dae96dc50ea
Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
---
 sound/soc/intel/skylake/skl-sst-dsp.h   |  4 +++-
 sound/soc/intel/skylake/skl-sst-utils.c | 20 ++++++++++++++++++++
 sound/soc/intel/skylake/skl-topology.c  | 12 ------------
 3 files changed, 23 insertions(+), 13 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-sst-dsp.h b/sound/soc/intel/skylake/skl-sst-dsp.h
index 1295ca1cc5c3..2103a2efe562 100644
--- a/sound/soc/intel/skylake/skl-sst-dsp.h
+++ b/sound/soc/intel/skylake/skl-sst-dsp.h
@@ -245,7 +245,9 @@ void skl_sst_dsp_cleanup(struct device *dev, struct skl_dev *skl);
 void bxt_sst_dsp_cleanup(struct device *dev, struct skl_dev *skl);
 
 int snd_skl_parse_manifest(struct sst_dsp *ctx, const struct firmware *fw,
-				unsigned int offset, int index);
+			      unsigned int offset, int index);
+struct uuid_module *skl_find_module(struct skl_dev *skl, const guid_t *uuid);
+int skl_get_module_id(struct skl_dev *skl, const guid_t *uuid);
 int skl_get_pvt_id(struct skl_dev *skl, guid_t *uuid_mod, int instance_id);
 int skl_put_pvt_id(struct skl_dev *skl, guid_t *uuid_mod, int *pvt_id);
 int skl_get_pvt_instance_id_map(struct skl_dev *skl,
diff --git a/sound/soc/intel/skylake/skl-sst-utils.c b/sound/soc/intel/skylake/skl-sst-utils.c
index 24004b754e0e..84954bbc5170 100644
--- a/sound/soc/intel/skylake/skl-sst-utils.c
+++ b/sound/soc/intel/skylake/skl-sst-utils.c
@@ -342,6 +342,26 @@ int snd_skl_parse_manifest(struct sst_dsp *ctx, const struct firmware *fw,
 }
 EXPORT_SYMBOL(snd_skl_parse_manifest);
 
+struct uuid_module *skl_find_module(struct skl_dev *skl, const guid_t *uuid)
+{
+	struct uuid_module *module;
+
+	list_for_each_entry(module, &skl->module_list, list)
+		if (guid_equal(&module->uuid, uuid))
+			return module;
+
+	return NULL;
+}
+EXPORT_SYMBOL(skl_find_module);
+
+int skl_get_module_id(struct skl_dev *skl, const guid_t *uuid)
+{
+	struct uuid_module *module = skl_find_module(skl, uuid);
+
+	return module ? module->id : -ENOENT;
+}
+EXPORT_SYMBOL(skl_get_module_id);
+
 /*
  * some firmware binary contains some extended manifest. This needs
  * to be stripped in that case before we load and use that image.
diff --git a/sound/soc/intel/skylake/skl-topology.c b/sound/soc/intel/skylake/skl-topology.c
index 18f1130b9fc2..d2b30ba3eb51 100644
--- a/sound/soc/intel/skylake/skl-topology.c
+++ b/sound/soc/intel/skylake/skl-topology.c
@@ -796,18 +796,6 @@ static int skl_tplg_set_module_bind_params(struct snd_soc_dapm_widget *w,
 	return 0;
 }
 
-static int skl_get_module_id(struct skl_dev *skl, guid_t *uuid)
-{
-	struct uuid_module *module;
-
-	list_for_each_entry(module, &skl->module_list, list) {
-		if (guid_equal(uuid, &module->uuid))
-			return module->id;
-	}
-
-	return -EINVAL;
-}
-
 static int skl_tplg_find_moduleid_from_uuid(struct skl_dev *skl,
 					const struct snd_kcontrol_new *k)
 {
-- 
2.22.0.545.g9c9b961d7e

