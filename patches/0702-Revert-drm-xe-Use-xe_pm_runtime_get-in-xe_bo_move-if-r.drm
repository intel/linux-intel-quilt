From d16cc5a7353753f93f9d3ff8ca6d0b762b720be0 Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Wed, 8 Jan 2025 09:32:37 +0800
Subject: [PATCH 702/708] Revert "drm/xe: Use xe_pm_runtime_get in xe_bo_move()
 if reclaim-safe."

This reverts commit 34bb7b813ab398106f700b0a6b218509bb0b904c.
---
 drivers/gpu/drm/xe/xe_bo.c | 11 +----------
 drivers/gpu/drm/xe/xe_pm.c |  9 +--------
 drivers/gpu/drm/xe/xe_pm.h |  1 -
 3 files changed, 2 insertions(+), 19 deletions(-)

diff --git a/drivers/gpu/drm/xe/xe_bo.c b/drivers/gpu/drm/xe/xe_bo.c
index 283cd0294570..0da6277cb3d0 100644
--- a/drivers/gpu/drm/xe/xe_bo.c
+++ b/drivers/gpu/drm/xe/xe_bo.c
@@ -769,16 +769,7 @@ static int xe_bo_move(struct ttm_buffer_object *ttm_bo, bool evict,
 
 	xe_assert(xe, migrate);
 	trace_xe_bo_move(bo, new_mem->mem_type, old_mem_type, move_lacks_source);
-	if (xe_rpm_reclaim_safe(xe)) {
-		/*
-		 * We might be called through swapout in the validation path of
-		 * another TTM device, so acquire rpm here.
-		 */
-		xe_pm_runtime_get(xe);
-	} else {
-		drm_WARN_ON(&xe->drm, handle_system_ccs);
-		xe_pm_runtime_get_noresume(xe);
-	}
+	xe_pm_runtime_get_noresume(xe);
 
 	if (xe_bo_is_pinned(bo) && !xe_bo_is_user(bo)) {
 		/*
diff --git a/drivers/gpu/drm/xe/xe_pm.c b/drivers/gpu/drm/xe/xe_pm.c
index a6761cb769b2..2b133f185f7d 100644
--- a/drivers/gpu/drm/xe/xe_pm.c
+++ b/drivers/gpu/drm/xe/xe_pm.c
@@ -80,14 +80,7 @@ static struct lockdep_map xe_pm_runtime_nod3cold_map = {
 };
 #endif
 
-/**
- * xe_rpm_reclaim_safe() - Whether runtime resume can be done from reclaim context
- * @xe: The xe device.
- *
- * Return: true if it is safe to runtime resume from reclaim context.
- * false otherwise.
- */
-bool xe_rpm_reclaim_safe(const struct xe_device *xe)
+static bool __maybe_unused xe_rpm_reclaim_safe(const struct xe_device *xe)
 {
 	return !xe->d3cold.capable && !xe->info.has_sriov;
 }
diff --git a/drivers/gpu/drm/xe/xe_pm.h b/drivers/gpu/drm/xe/xe_pm.h
index 998d1ed64556..9aef673b1c8a 100644
--- a/drivers/gpu/drm/xe/xe_pm.h
+++ b/drivers/gpu/drm/xe/xe_pm.h
@@ -31,7 +31,6 @@ bool xe_pm_runtime_resume_and_get(struct xe_device *xe);
 void xe_pm_assert_unbounded_bridge(struct xe_device *xe);
 int xe_pm_set_vram_threshold(struct xe_device *xe, u32 threshold);
 void xe_pm_d3cold_allowed_toggle(struct xe_device *xe);
-bool xe_rpm_reclaim_safe(const struct xe_device *xe);
 struct task_struct *xe_pm_read_callback_task(struct xe_device *xe);
 int xe_pm_module_init(void);
 
-- 
2.25.1

