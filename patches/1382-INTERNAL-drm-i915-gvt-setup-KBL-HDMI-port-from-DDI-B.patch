From bf47fbf70391c5f3abc3d9487c32a0ad26f8e2ee Mon Sep 17 00:00:00 2001
From: Fei Jiang <fei.jiang@intel.com>
Date: Tue, 27 Mar 2018 22:34:21 +0800
Subject: [PATCH 1382/2367] [INTERNAL]drm/i915/gvt: setup KBL HDMI port from
 DDI B

BXT only has three ports, so we have to let DDI A also support HDMI
to support 3 HDMI monitor output. While for KBL, it has more DDIs, then
don't need such hack.
Add a parameter to switch between DP and HDMI port emulation.

Signed-off-by: Fei Jiang <fei.jiang@intel.com>
Change-Id: I3fe127ed95d467821ec9ec0dc616a3e6d3164aa0
---
 drivers/gpu/drm/i915/gvt/display.c | 14 +++++++++++---
 drivers/gpu/drm/i915/i915_params.c |  4 +++-
 drivers/gpu/drm/i915/i915_params.h |  3 ++-
 3 files changed, 16 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/i915/gvt/display.c b/drivers/gpu/drm/i915/gvt/display.c
index 5eaa48d..1f9a2c2 100644
--- a/drivers/gpu/drm/i915/gvt/display.c
+++ b/drivers/gpu/drm/i915/gvt/display.c
@@ -481,9 +481,15 @@ int setup_virtual_monitors(struct intel_vgpu *vgpu)
 {
 	struct intel_connector *connector = NULL;
 	struct drm_connector_list_iter conn_iter;
+	struct drm_i915_private *dev_priv = vgpu->gvt->dev_priv;
 	int pipe = 0;
 	int ret = 0;
-	int port = 0;
+	int type = i915_modparams.gvt_emulate_hdmi ? GVT_HDMI_A : GVT_DP_A;
+	int port = PORT_B;
+
+	/* BXT have to use port A for HDMI to support 3 HDMI monitors */
+	if (IS_BROXTON(dev_priv))
+		port = PORT_A;
 
 	drm_connector_list_iter_begin(&vgpu->gvt->dev_priv->drm, &conn_iter);
 	for_each_intel_connector_iter(connector, &conn_iter) {
@@ -497,10 +503,12 @@ int setup_virtual_monitors(struct intel_vgpu *vgpu)
 			port = enc_to_dig_port(
 					&(connector->encoder->base))->port;
 			ret = setup_virtual_monitor(vgpu, port,
-				GVT_HDMI_A + port, 0,
-				connector->detect_edid, false);
+				type, 0, connector->detect_edid,
+				!i915_modparams.gvt_emulate_hdmi);
 			if (ret)
 				return ret;
+			type++;
+			port++;
 		}
 	}
 	return 0;
diff --git a/drivers/gpu/drm/i915/i915_params.c b/drivers/gpu/drm/i915/i915_params.c
index 7f7dcda..e9a2647 100644
--- a/drivers/gpu/drm/i915/i915_params.c
+++ b/drivers/gpu/drm/i915/i915_params.c
@@ -82,6 +82,7 @@ struct i915_params i915_modparams __read_mostly = {
 	.avail_planes_per_pipe = 0,
 	.domain_plane_owners = 0,
 	.bg_color = 0x00000000,
+	.gvt_emulate_hdmi = true,
 };
 
 i915_param_named(modeset, int, 0400,
@@ -318,4 +319,5 @@ MODULE_PARM_DESC(domain_plane_owners, "plane owners for each domain and for each
 module_param_named_unsafe(bg_color, i915_modparams.bg_color, uint, 0400);
 MODULE_PARM_DESC(bg_color, "Set the background (canvas) color");
 
-
+module_param_named(gvt_emulate_hdmi, i915_modparams.gvt_emulate_hdmi, bool, 0400);
+MODULE_PARM_DESC(gvt_emulate_hdmi, "GVT-g emulate HDMI or DP port for Guest OS.");
diff --git a/drivers/gpu/drm/i915/i915_params.h b/drivers/gpu/drm/i915/i915_params.h
index c5bdc87..4e1654e 100644
--- a/drivers/gpu/drm/i915/i915_params.h
+++ b/drivers/gpu/drm/i915/i915_params.h
@@ -78,7 +78,8 @@
 	func(bool, enable_conformance_check); \
 	func(bool, disable_gvt_fw_loading); \
 	func(int, gvt_workload_priority); \
-	func(bool, enable_initial_modeset);
+	func(bool, enable_initial_modeset); \
+	func(bool, gvt_emulate_hdmi);
 
 #define MEMBER(T, member) T member
 struct i915_params {
-- 
2.7.4

