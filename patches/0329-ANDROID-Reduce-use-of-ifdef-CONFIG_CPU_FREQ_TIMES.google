From 1bad95a32deb9e991cb6ada1462fa6f6e0cdcd82 Mon Sep 17 00:00:00 2001
From: Connor O'Brien <connoro@google.com>
Date: Fri, 13 Jul 2018 14:31:40 -0700
Subject: [PATCH 329/430] ANDROID: Reduce use of #ifdef CONFIG_CPU_FREQ_TIMES

Add empty versions of functions to cpufreq_times.h to cut down on use
of #ifdef in .c files.

Test: kernel builds with and without CONFIG_CPU_FREQ_TIMES=y
Change-Id: I49ac364fac3d42bba0ca1801e23b15081094fb12
Signed-off-by: Connor O'Brien <connoro@google.com>
---
 include/linux/cpufreq_times.h | 4 ++++
 kernel/exit.c                 | 3 +--
 kernel/sched/core.c           | 2 --
 kernel/sched/cputime.c        | 5 +----
 4 files changed, 6 insertions(+), 8 deletions(-)

diff --git a/include/linux/cpufreq_times.h b/include/linux/cpufreq_times.h
index e84b576a20d5..54419522a53c 100644
--- a/include/linux/cpufreq_times.h
+++ b/include/linux/cpufreq_times.h
@@ -30,6 +30,10 @@ void cpufreq_times_record_transition(struct cpufreq_freqs *freq);
 void cpufreq_task_times_remove_uids(uid_t uid_start, uid_t uid_end);
 int single_uid_time_in_state_open(struct inode *inode, struct file *file);
 #else
+static inline void cpufreq_task_times_init(struct task_struct *p) {}
+static inline void cpufreq_task_times_exit(struct task_struct *p) {}
+static inline void cpufreq_acct_update_power(struct task_struct *p,
+					     u64 cputime) {}
 static inline void cpufreq_times_create_policy(struct cpufreq_policy *policy) {}
 static inline void cpufreq_times_record_transition(
 	struct cpufreq_freqs *freq) {}
diff --git a/kernel/exit.c b/kernel/exit.c
index 07eceecc6402..2d95762343af 100644
--- a/kernel/exit.c
+++ b/kernel/exit.c
@@ -187,9 +187,8 @@ void release_task(struct task_struct *p)
 {
 	struct task_struct *leader;
 	int zap_leader;
-#ifdef CONFIG_CPU_FREQ_TIMES
+
 	cpufreq_task_times_exit(p);
-#endif
 repeat:
 	/* don't need to get the RCU readlock here - the process is dead and
 	 * can't be modifying its own credentials. But shut RCU-lockdep up */
diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 6b2a27bd29bc..623c6c5c941a 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -2157,9 +2157,7 @@ static void __sched_fork(unsigned long clone_flags, struct task_struct *p)
 	memset(&p->se.statistics, 0, sizeof(p->se.statistics));
 #endif
 
-#ifdef CONFIG_CPU_FREQ_TIMES
 	cpufreq_task_times_init(p);
-#endif
 
 	RB_CLEAR_NODE(&p->dl.rb_node);
 	init_dl_task_timer(&p->dl);
diff --git a/kernel/sched/cputime.c b/kernel/sched/cputime.c
index ab9b6ff7117a..ca4208d46872 100644
--- a/kernel/sched/cputime.c
+++ b/kernel/sched/cputime.c
@@ -130,10 +130,8 @@ void account_user_time(struct task_struct *p, u64 cputime)
 	/* Account for user time used */
 	acct_account_cputime(p);
 
-#ifdef CONFIG_CPU_FREQ_TIMES
 	/* Account power usage for user time */
 	cpufreq_acct_update_power(p, cputime);
-#endif
 }
 
 /*
@@ -178,10 +176,9 @@ void account_system_index_time(struct task_struct *p,
 
 	/* Account for system time used */
 	acct_account_cputime(p);
-#ifdef CONFIG_CPU_FREQ_TIMES
+
 	/* Account power usage for system time */
 	cpufreq_acct_update_power(p, cputime);
-#endif
 }
 
 /*
-- 
2.19.1

