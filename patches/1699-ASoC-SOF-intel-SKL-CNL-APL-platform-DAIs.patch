From dfc15397a571345a4a00648c2f1a37ca2c6a80ba Mon Sep 17 00:00:00 2001
From: Liam Girdwood <liam.r.girdwood@linux.intel.com>
Date: Sun, 17 Jun 2018 22:07:51 +0100
Subject: [PATCH 1699/2367] ASoC: SOF: intel: SKL, CNL, APL platform DAIs

Signed-off-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
Signed-off-by: Keyon Jie <yang.jie@linux.intel.com>
---
 sound/soc/sof/intel/Makefile  |   2 +-
 sound/soc/sof/intel/apl.c     |   3 ++
 sound/soc/sof/intel/cnl.c     |   3 ++
 sound/soc/sof/intel/hda-dai.c | 118 ++++++++++++++++++++++++++++++++++++++++++
 sound/soc/sof/intel/hda.h     |   3 ++
 sound/soc/sof/intel/skl.c     |   3 ++
 6 files changed, 131 insertions(+), 1 deletion(-)
 create mode 100644 sound/soc/sof/intel/hda-dai.c

diff --git a/sound/soc/sof/intel/Makefile b/sound/soc/sof/intel/Makefile
index dfeb4fc..7b5784d 100644
--- a/sound/soc/sof/intel/Makefile
+++ b/sound/soc/sof/intel/Makefile
@@ -6,7 +6,7 @@ snd-sof-intel-byt-objs := byt.o
 snd-sof-intel-hsw-objs := hsw.o
 snd-sof-intel-bdw-objs := bdw.o
 snd-sof-intel-hda-common-objs := hda.o hda-loader.o hda-stream.o hda-trace.o \
-				 hda-dsp.o hda-ipc.o hda-ctrl.o hda-pcm.o \
+				 hda-dsp.o hda-ipc.o hda-ctrl.o hda-pcm.o hda-dai.o\
 				 skl.o apl.o cnl.o
 
 obj-$(CONFIG_SND_SOC_SOF_BAYTRAIL) += snd-sof-intel-byt.o
diff --git a/sound/soc/sof/intel/apl.c b/sound/soc/sof/intel/apl.c
index d36e30d..9db5a24 100644
--- a/sound/soc/sof/intel/apl.c
+++ b/sound/soc/sof/intel/apl.c
@@ -92,5 +92,8 @@ struct snd_sof_dsp_ops sof_apl_ops = {
 	.trace_init = hda_dsp_trace_init,
 	.trace_release = hda_dsp_trace_release,
 	.trace_trigger = hda_dsp_trace_trigger,
+
+	/* DAI drivers */
+	.dai_drv		= &hda_dai_drv,
 };
 EXPORT_SYMBOL(sof_apl_ops);
diff --git a/sound/soc/sof/intel/cnl.c b/sound/soc/sof/intel/cnl.c
index 80d6cc7..99c80d7 100644
--- a/sound/soc/sof/intel/cnl.c
+++ b/sound/soc/sof/intel/cnl.c
@@ -220,5 +220,8 @@ struct snd_sof_dsp_ops sof_cnl_ops = {
 	.trace_init = hda_dsp_trace_init,
 	.trace_release = hda_dsp_trace_release,
 	.trace_trigger = hda_dsp_trace_trigger,
+
+	/* DAI drivers */
+	.dai_drv		= &hda_dai_drv,
 };
 EXPORT_SYMBOL(sof_cnl_ops);
diff --git a/sound/soc/sof/intel/hda-dai.c b/sound/soc/sof/intel/hda-dai.c
new file mode 100644
index 00000000..091fcc1
--- /dev/null
+++ b/sound/soc/sof/intel/hda-dai.c
@@ -0,0 +1,118 @@
+// SPDX-License-Identifier: (GPL-2.0 OR BSD-3-Clause)
+/*
+ * This file is provided under a dual BSD/GPLv2 license.  When using or
+ * redistributing this file, you may do so under either license.
+ *
+ * Copyright(c) 2018 Intel Corporation. All rights reserved.
+ *
+ * Authors: Keyon Jie <yang.jie@linux.intel.com>
+ */
+
+#include <sound/pcm_params.h>
+#include "../sof-priv.h"
+
+#define SKL_FORMATS (SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S24_LE | \
+	SNDRV_PCM_FMTBIT_S32_LE)
+
+/*
+ * common dai driver for skl+ platforms.
+ * some products who use this DAI array only physically have a subset of
+ * the DAIs, but no harm is done here by adding the whole set.
+ */
+static struct snd_soc_dai_driver skl_dai[] = {
+{
+	.name = "SSP0 Pin",
+	.playback = SOF_DAI_STREAM("ssp0 Tx", 1, 8,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+	.capture = SOF_DAI_STREAM("ssp0 Rx", 1, 8,
+				  SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+{
+	.name = "SSP1 Pin",
+	.playback = SOF_DAI_STREAM("ssp1 Tx", 1, 8,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+	.capture = SOF_DAI_STREAM("ssp1 Rx", 1, 8,
+				  SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+{
+	.name = "SSP2 Pin",
+	.playback = SOF_DAI_STREAM("ssp2 Tx", 1, 8,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+	.capture = SOF_DAI_STREAM("ssp2 Rx", 1, 16,
+				  SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+{
+	.name = "SSP3 Pin",
+	.playback = SOF_DAI_STREAM("ssp3 Tx", 1, 8,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+	.capture = SOF_DAI_STREAM("ssp3 Rx", 1, 8,
+				  SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+{
+	.name = "SSP4 Pin",
+	.playback = SOF_DAI_STREAM("ssp4 Tx", 1, 8,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+	.capture = SOF_DAI_STREAM("ssp4 Rx", 1, 8,
+				  SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+{
+	.name = "SSP5 Pin",
+	.playback = SOF_DAI_STREAM("ssp5 Tx", 1, 8,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+	.capture = SOF_DAI_STREAM("ssp5 Rx", 1, 8,
+				  SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+{
+	.name = "DMIC01 Pin",
+	.capture = SOF_DAI_STREAM("DMIC01 Rx", 1, 4,
+				  SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+{
+	.name = "DMIC16k Pin",
+	.capture = SOF_DAI_STREAM("DMIC16k Rx", 1, 4,
+				  SNDRV_PCM_RATE_16000, SKL_FORMATS),
+},
+{
+	.name = "iDisp1 Pin",
+	.playback = SOF_DAI_STREAM("iDisp1 Tx", 1, 8,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+{
+	.name = "iDisp2 Pin",
+	.playback = SOF_DAI_STREAM("iDisp2 Tx", 1, 8,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+{
+	.name = "iDisp3 Pin",
+	.playback = SOF_DAI_STREAM("iDisp3 Tx", 1, 8,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+{
+	.name = "Analog Codec DAI",
+	.playback = SOF_DAI_STREAM("Analog Codec Playback", 1, 16,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+	.capture = SOF_DAI_STREAM("Analog Codec Capture", 1, 16,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+{
+	.name = "Digital Codec DAI",
+	.playback = SOF_DAI_STREAM("Digital Codec Playback", 1, 16,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+	.capture = SOF_DAI_STREAM("Digital Codec Capture", 1, 16,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+{
+	.name = "Alt Analog Codec DAI",
+	.playback = SOF_DAI_STREAM("Alt Analog Codec Playback", 1, 16,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+	.capture = SOF_DAI_STREAM("Alt Analog Codec Capture", 1, 16,
+				   SNDRV_PCM_RATE_8000_192000, SKL_FORMATS),
+},
+};
+
+struct snd_sof_dai_drv hda_dai_drv = {
+	.drv = skl_dai,
+	.num_drv = ARRAY_SIZE(skl_dai)
+};
+EXPORT_SYMBOL(hda_dai_drv);
+
diff --git a/sound/soc/sof/intel/hda.h b/sound/soc/sof/intel/hda.h
index 5eb677c..75f5b40 100644
--- a/sound/soc/sof/intel/hda.h
+++ b/sound/soc/sof/intel/hda.h
@@ -494,6 +494,9 @@ int hda_dsp_trace_init(struct snd_sof_dev *sdev, u32 *stream_tag);
 int hda_dsp_trace_release(struct snd_sof_dev *sdev);
 int hda_dsp_trace_trigger(struct snd_sof_dev *sdev, int cmd);
 
+/* common dai driver */
+extern struct snd_sof_dai_drv hda_dai_drv;
+
 /*
  * Platform Specific HW abstraction Ops.
  */
diff --git a/sound/soc/sof/intel/skl.c b/sound/soc/sof/intel/skl.c
index d4b6de6..adb85a5 100644
--- a/sound/soc/sof/intel/skl.c
+++ b/sound/soc/sof/intel/skl.c
@@ -97,5 +97,8 @@ struct snd_sof_dsp_ops sof_skl_ops = {
 	.trace_init = hda_dsp_trace_init,
 	.trace_release = hda_dsp_trace_release,
 	.trace_trigger = hda_dsp_trace_trigger,
+
+	/* DAI drivers */
+	.dai_drv		= &hda_dai_drv,
 };
 EXPORT_SYMBOL(sof_skl_ops);
-- 
2.7.4

