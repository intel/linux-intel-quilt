From 34184f3283b8378250c1c30d96b47c9d4bef20e5 Mon Sep 17 00:00:00 2001
From: Manisha Chinthapally <manisha.chinthapally@intel.com>
Date: Tue, 25 Feb 2020 12:17:48 -0800
Subject: [PATCH 32/32] SEP/SOCWATCH resolve build errors after rebasing to
 linux v5.6-rc3

Signed-off-by: Manisha Chinthapally <manisha.chinthapally@intel.com>
---
 drivers/platform/x86/sepdk/pax/pax.c           | 15 +++++++--------
 drivers/platform/x86/sepdk/sep/chap.c          |  6 +++---
 drivers/platform/x86/sepdk/sep/pci.c           |  6 +++---
 drivers/platform/x86/sepdk/sep/utility.c       |  6 ++++--
 drivers/platform/x86/socperf/haswellunc_sa.c   |  2 +-
 drivers/platform/x86/socperf/npk_uncore.c      |  2 +-
 drivers/platform/x86/socperf/pci.c             |  4 ++--
 drivers/platform/x86/socperf/soc_uncore.c      |  2 +-
 .../platform/x86/socwatch/sw_ops_provider.c    | 16 ++++++++--------
 drivers/platform/x86/socwatch/sw_telem.c       | 18 +++++++++---------
 .../x86/socwatch/sw_trace_notifier_provider.c  |  6 +++---
 11 files changed, 42 insertions(+), 41 deletions(-)

diff --git a/drivers/platform/x86/sepdk/pax/pax.c b/drivers/platform/x86/sepdk/pax/pax.c
index f8eebf989b0e..64e8a478b56e 100755
--- a/drivers/platform/x86/sepdk/pax/pax.c
+++ b/drivers/platform/x86/sepdk/pax/pax.c
@@ -85,12 +85,11 @@ static struct proc_dir_entry *pax_version_file;
 
 static int pax_version_proc_read(struct seq_file *, void *);
 static int pax_version_proc_open(struct inode *, struct file *);
-static struct file_operations pax_version_ops = {
-	.owner = THIS_MODULE,
-	.open = pax_version_proc_open,
-	.read = seq_read,
-	.llseek = seq_lseek,
-	.release = single_release,
+static struct proc_ops pax_version_ops = {
+	.proc_open = pax_version_proc_open,
+	.proc_read = seq_read,
+	.proc_lseek = seq_lseek,
+	.proc_release = single_release,
 };
 
 // Print macros for kernel debugging
@@ -772,7 +771,7 @@ static IOCTL_OP_TYPE pax_Device_Control_Compat(struct file *filp,
  * First one is for pax, the control functions
  */
 static struct file_operations pax_Fops = {
-	.owner = THIS_MODULE,
+        .owner = THIS_MODULE,
 	IOCTL_OP = pax_Device_Control,
 #if defined(CONFIG_COMPAT) && defined(DRV_EM64T)
 	.compat_ioctl = pax_Device_Control_Compat,
@@ -791,7 +790,7 @@ static struct file_operations pax_Fops = {
  * @param  dev    - pointer to the device object
  * @param  devnum - major/minor device number
  * @param  fops   - point to file operations struct
- *
+ *n
  * @return int
  *
  * @brief  Set up functions to be handled by PAX device
diff --git a/drivers/platform/x86/sepdk/sep/chap.c b/drivers/platform/x86/sepdk/sep/chap.c
index 434e9aeb658e..edd0005737d3 100755
--- a/drivers/platform/x86/sepdk/sep/chap.c
+++ b/drivers/platform/x86/sepdk/sep/chap.c
@@ -75,7 +75,7 @@ static U32 chap_Init_Chipset(void)
 			// Map virtual address of PCI CHAP interface
 			CHIPSET_SEGMENT_virtual_address(
 				mch_chipset_seg) =
-				(U64)(UIOP)ioremap_nocache(
+				(U64)(UIOP)ioremap_cache(
 					CHIPSET_SEGMENT_physical_address(
 						mch_chipset_seg),
 					CHIPSET_SEGMENT_size(
@@ -87,7 +87,7 @@ static U32 chap_Init_Chipset(void)
 			// Map the virtual address of PCI CHAP interface
 			CHIPSET_SEGMENT_virtual_address(
 				ich_chipset_seg) =
-				(U64)(UIOP)ioremap_nocache(
+				(U64)(UIOP)ioremap_cache(
 					CHIPSET_SEGMENT_physical_address(
 						ich_chipset_seg),
 					CHIPSET_SEGMENT_size(
@@ -100,7 +100,7 @@ static U32 chap_Init_Chipset(void)
 			// Map the virtual address of PCI CHAP interface
 			CHIPSET_SEGMENT_virtual_address(
 				noa_chipset_seg) =
-				(U64)(UIOP)ioremap_nocache(
+				(U64)(UIOP)ioremap_cache(
 					CHIPSET_SEGMENT_physical_address(
 						noa_chipset_seg),
 					CHIPSET_SEGMENT_size(
diff --git a/drivers/platform/x86/sepdk/sep/pci.c b/drivers/platform/x86/sepdk/sep/pci.c
index b830372cc9f6..57f928b238dc 100755
--- a/drivers/platform/x86/sepdk/sep/pci.c
+++ b/drivers/platform/x86/sepdk/sep/pci.c
@@ -362,7 +362,7 @@ int PCI_Read_From_Memory_Address(U32 addr, U32 *val)
 	SEP_DRV_LOG_TRACE("Aligned physical address: %x, offset: %x.",
 			  aligned_addr, offset);
 
-	base = (PVOID)ioremap_nocache(aligned_addr, PAGE_SIZE);
+	base = (PVOID)ioremap_cache(aligned_addr, PAGE_SIZE);
 	if (base == NULL) {
 		SEP_DRV_LOG_ERROR_TRACE_OUT("OS_INVALID (mapping failed!).");
 		return OS_INVALID;
@@ -414,7 +414,7 @@ int PCI_Write_To_Memory_Address(U32 addr, U32 val)
 	SEP_DRV_LOG_TRACE("Aligned physical address: %x, offset: %x (val: %x).",
 			  aligned_addr, offset, val);
 
-	base = (PVOID)ioremap_nocache(aligned_addr, PAGE_SIZE);
+	base = (PVOID)ioremap_cache(aligned_addr, PAGE_SIZE);
 	if (base == NULL) {
 		SEP_DRV_LOG_ERROR_TRACE_OUT("OS_INVALID (mapping failed!).");
 		return OS_INVALID;
@@ -459,7 +459,7 @@ OS_STATUS PCI_Map_Memory(SEP_MMIO_NODE *node, U64 phy_address,
 		return OS_INVALID;
 	}
 
-	res = (U8 *)ioremap_nocache(phy_address, map_size);
+	res = (U8 *)ioremap_cache(phy_address, map_size);
 	if (!res) {
 		SEP_DRV_LOG_ERROR_INIT_OUT("Map operation failed!");
 		return OS_INVALID;
diff --git a/drivers/platform/x86/sepdk/sep/utility.c b/drivers/platform/x86/sepdk/sep/utility.c
index 65fa379ff0a8..79548e04e4d6 100755
--- a/drivers/platform/x86/sepdk/sep/utility.c
+++ b/drivers/platform/x86/sepdk/sep/utility.c
@@ -872,7 +872,7 @@ VOID UTILITY_Log(U8 category, U8 in_notification, U8 secondary,
  */
 DRV_STATUS UTILITY_Driver_Log_Init(void)
 {
-	struct timespec cur_time;
+	struct timespec64  cur_time;
 	U32 size = sizeof(*driver_log_buffer);
 	U8 using_contiguous_physical_memory;
 	U32 bitness;
@@ -949,7 +949,9 @@ DRV_STATUS UTILITY_Driver_Log_Init(void)
 		DRV_LOG_MAX_NB_PRI_ENTRIES;
 	DRV_LOG_BUFFER_max_nb_aux_entries(driver_log_buffer) =
 		DRV_LOG_MAX_NB_AUX_ENTRIES;
-	getnstimeofday(&cur_time);
+	ktime_get_real_ts64(&cur_time);
+	timespec64_to_ns(&cur_time);
+
 	DRV_LOG_BUFFER_init_time(driver_log_buffer) = cur_time.tv_sec;
 	DRV_LOG_BUFFER_disambiguator(driver_log_buffer) = 0;
 	DRV_LOG_BUFFER_log_version(driver_log_buffer) = DRV_LOG_VERSION;
diff --git a/drivers/platform/x86/socperf/haswellunc_sa.c b/drivers/platform/x86/socperf/haswellunc_sa.c
index 9b487b25f101..96353a42d2cb 100644
--- a/drivers/platform/x86/socperf/haswellunc_sa.c
+++ b/drivers/platform/x86/socperf/haswellunc_sa.c
@@ -200,7 +200,7 @@ static VOID hswunc_sa_Write_PMU(VOID *param)
 				map_size = HSWUNC_SA_OTHER_BAR_MMIO_PAGE_SIZE;
 			}
 			DRV_PCI_DEVICE_ENTRY_virtual_address(curr_pci_entry) =
-				(U64)(UIOP)ioremap_nocache(physical_address,
+				(U64)(UIOP)ioremap_cache(physical_address,
 							   map_size);
 			virtual_address = DRV_PCI_DEVICE_ENTRY_virtual_address(
 				curr_pci_entry);
diff --git a/drivers/platform/x86/socperf/npk_uncore.c b/drivers/platform/x86/socperf/npk_uncore.c
index 39847c22550c..6e0cb8d19288 100644
--- a/drivers/platform/x86/socperf/npk_uncore.c
+++ b/drivers/platform/x86/socperf/npk_uncore.c
@@ -289,7 +289,7 @@ static VOID uncore_Write_PMU(VOID *param)
 
 		if (physical_address) {
 			DRV_PCI_DEVICE_ENTRY_virtual_address(curr_pci_entry) =
-				(U64)(UIOP)ioremap_nocache(physical_address,
+				(U64)(UIOP)ioremap_cache(physical_address,
 							   map_size);
 			virtual_address = DRV_PCI_DEVICE_ENTRY_virtual_address(
 				curr_pci_entry);
diff --git a/drivers/platform/x86/socperf/pci.c b/drivers/platform/x86/socperf/pci.c
index c41fc4cfc20a..ded8c5ac2848 100644
--- a/drivers/platform/x86/socperf/pci.c
+++ b/drivers/platform/x86/socperf/pci.c
@@ -90,7 +90,7 @@ int SOCPERF_PCI_Read_From_Memory_Address(U32 addr, U32 *val)
 		"SOCPERF_PCI_Read_From_Memory_Address: aligned physical address:%x,offset:%x\n",
 		aligned_addr, offset);
 
-	base = (PVOID)ioremap_nocache(aligned_addr, PAGE_SIZE);
+	base = (PVOID)ioremap_cache(aligned_addr, PAGE_SIZE);
 	if (base == NULL) {
 		return OS_INVALID;
 	}
@@ -136,7 +136,7 @@ int SOCPERF_PCI_Write_To_Memory_Address(U32 addr, U32 val)
 		"SOCPERF_PCI_Write_To_Memory_Address: aligned physical address:%x,offset:%x\n",
 		aligned_addr, offset);
 
-	base = (PVOID)ioremap_nocache(aligned_addr, PAGE_SIZE);
+	base = (PVOID)ioremap_cache(aligned_addr, PAGE_SIZE);
 	if (base == NULL) {
 		return OS_INVALID;
 	}
diff --git a/drivers/platform/x86/socperf/soc_uncore.c b/drivers/platform/x86/socperf/soc_uncore.c
index 75272bc7f5e6..347523c9c702 100644
--- a/drivers/platform/x86/socperf/soc_uncore.c
+++ b/drivers/platform/x86/socperf/soc_uncore.c
@@ -753,7 +753,7 @@ static VOID uncore_Create_Mem(U32 memory_size, U64 *trace_buffer)
 	}
 	SOCPERF_PRINT_DEBUG("Physical Address=%llx\n", odla_physical_address);
 	if (odla_physical_address) {
-		trace_virtual_address = (U64)(UIOP)ioremap_nocache(
+		trace_virtual_address = (U64)(UIOP)ioremap_cache(
 			odla_physical_address, SOC_UNCORE_PAGE_SIZE);
 		SOCPERF_PRINT_DEBUG("PHY=%llx ODLA VIRTUAL ADDRESS=%llx\n",
 				    odla_physical_address,
diff --git a/drivers/platform/x86/socwatch/sw_ops_provider.c b/drivers/platform/x86/socwatch/sw_ops_provider.c
index 22d8bf24ac0d..2dce905729b6 100644
--- a/drivers/platform/x86/socwatch/sw_ops_provider.c
+++ b/drivers/platform/x86/socwatch/sw_ops_provider.c
@@ -336,7 +336,7 @@ int sw_ipc_mmio_descriptor_init_func_i(
 		return PW_SUCCESS;
 
 	__ipc_mmio->data_remapped_address =
-		(pw_u64_t)(unsigned long)ioremap_nocache(
+		(pw_u64_t)(unsigned long)ioremap_cache(
 			(unsigned long)data_address,
 			descriptor->counter_size_in_bytes);
 	if ((void *)(unsigned long)__ipc_mmio->data_remapped_address == NULL)
@@ -353,11 +353,11 @@ int sw_ipc_mmio_descriptor_init_func_i(
 		pw_pr_debug("Initializing GBE semaphore\n");
 
 		s_gbe_semaphore.hw_semaphore =
-			ioremap_nocache(
+			ioremap_cache(
 				(unsigned long)hw_addr,
 				descriptor->counter_size_in_bytes);
 		s_gbe_semaphore.fw_semaphore =
-			ioremap_nocache(
+			ioremap_cache(
 				(unsigned long)fw_addr,
 				descriptor->counter_size_in_bytes);
 		if (s_gbe_semaphore.hw_semaphore == NULL ||
@@ -390,7 +390,7 @@ int sw_pch_mailbox_descriptor_init_func_i(
 		(unsigned long long)__pch_mailbox->data_address);
 	if (__pch_mailbox->mtpmc_address) {
 		__pch_mailbox->mtpmc_remapped_address =
-			(pw_u64_t)(unsigned long)ioremap_nocache(
+			(pw_u64_t)(unsigned long)ioremap_cache(
 				(unsigned long)__pch_mailbox->mtpmc_address,
 				descriptor->counter_size_in_bytes);
 		if ((void *)(unsigned long)
@@ -402,7 +402,7 @@ int sw_pch_mailbox_descriptor_init_func_i(
 	}
 	if (__pch_mailbox->msg_full_sts_address) {
 		__pch_mailbox->msg_full_sts_remapped_address =
-			(pw_u64_t)(unsigned long)ioremap_nocache(
+			(pw_u64_t)(unsigned long)ioremap_cache(
 				(unsigned long)
 					__pch_mailbox->msg_full_sts_address,
 				descriptor->counter_size_in_bytes);
@@ -415,7 +415,7 @@ int sw_pch_mailbox_descriptor_init_func_i(
 	}
 	if (__pch_mailbox->mfpmc_address) {
 		__pch_mailbox->mfpmc_remapped_address =
-			(pw_u64_t)(unsigned long)ioremap_nocache(
+			(pw_u64_t)(unsigned long)ioremap_cache(
 				(unsigned long)__pch_mailbox->mfpmc_address,
 				descriptor->counter_size_in_bytes);
 		if ((void *)(unsigned long)
@@ -447,7 +447,7 @@ int sw_mailbox_descriptor_init_func_i(
 	if (!__mailbox->is_msr_type) {
 		if (__mailbox->interface_address) {
 			__mailbox->interface_remapped_address =
-				(pw_u64_t)(unsigned long)ioremap_nocache(
+				(pw_u64_t)(unsigned long)ioremap_cache(
 					(unsigned long)__mailbox->interface_address,
 					descriptor->counter_size_in_bytes);
 			if ((void *)(unsigned long)
@@ -460,7 +460,7 @@ int sw_mailbox_descriptor_init_func_i(
 		}
 		if (__mailbox->data_address) {
 			__mailbox->data_remapped_address =
-				(pw_u64_t)(unsigned long)ioremap_nocache(
+				(pw_u64_t)(unsigned long)ioremap_cache(
 					(unsigned long)__mailbox->data_address,
 					descriptor->counter_size_in_bytes);
 			if ((void *)(unsigned long)
diff --git a/drivers/platform/x86/socwatch/sw_telem.c b/drivers/platform/x86/socwatch/sw_telem.c
index eb162b1b28e3..129530b17ae9 100644
--- a/drivers/platform/x86/socwatch/sw_telem.c
+++ b/drivers/platform/x86/socwatch/sw_telem.c
@@ -58,7 +58,7 @@
 #include <linux/compiler.h>     /* Definition of __weak */
 #include <linux/version.h>      /* LINUX_VERSION_CODE */
 #include <linux/delay.h>        /* 'udelay' */
-#include <linux/io.h>           /* Definition of ioremap_nocache and iounmap */
+#include <linux/io.h>           /* Definition of ioremap_cache and iounmap */
 #include "sw_kernel_defines.h"  /* pw_pr_debug */
 #include "sw_mem.h"             /* sw_kmalloc/free */
 #include "sw_lock_defs.h"       /* Various lock-related definitions */
@@ -236,13 +236,13 @@ static volatile u64 *s_pmcIPCRBufAddr;
  */
 static bool setup_punit_mbox(void)
 {
-	s_punitInterfaceAddr = (u64 *)ioremap_nocache(
+	s_punitInterfaceAddr = (u64 *)ioremap_cache(
 				(unsigned long)s_mchBarAddrs[TELEM_MCHBAR_CFG] +
 				PUNIT_MAILBOX_INTERFACE_OFFSET, 0x4);
-	s_punitDataAddr = (u64 *)ioremap_nocache(
+	s_punitDataAddr = (u64 *)ioremap_cache(
 				(unsigned long)s_mchBarAddrs[TELEM_MCHBAR_CFG] +
 				PUNIT_MAILBOX_DATA_OFFSET, 0x4);
-	s_telemEventInfo[TELEM_PUNIT].ssram_virt_addr = (u64 *)ioremap_nocache(
+	s_telemEventInfo[TELEM_PUNIT].ssram_virt_addr = (u64 *)ioremap_cache(
 				(unsigned long)
 					s_mchBarAddrs[TELEM_SSRAMBAR_CFG] +
 				PSS_TELEM_SSRAM_OFFSET, TELEM_SSRAM_SIZE);
@@ -277,19 +277,19 @@ static void destroy_punit_mbox(void)
  */
 static bool setup_pmc_mbox(void)
 {
-	s_pmcIPCCmdAddr = (u64 *)ioremap_nocache(
+	s_pmcIPCCmdAddr = (u64 *)ioremap_cache(
 			(unsigned long)s_mchBarAddrs[TELEM_IPC1BAR_CFG] +
 			PMC_IPC_CMD, 0x4);
-	s_pmcIPCStsAddr = (u64 *)ioremap_nocache(
+	s_pmcIPCStsAddr = (u64 *)ioremap_cache(
 			(unsigned long)s_mchBarAddrs[TELEM_IPC1BAR_CFG] +
 			PMC_IPC_STATUS, 0x4);
-	s_pmcIPCWBufAddr = (u64 *)ioremap_nocache(
+	s_pmcIPCWBufAddr = (u64 *)ioremap_cache(
 			(unsigned long)s_mchBarAddrs[TELEM_IPC1BAR_CFG] +
 			PMC_IPC_WRITE_BUFFER, 0x4);
-	s_pmcIPCRBufAddr = (u64 *)ioremap_nocache(
+	s_pmcIPCRBufAddr = (u64 *)ioremap_cache(
 			(unsigned long)s_mchBarAddrs[TELEM_IPC1BAR_CFG] +
 			PMC_IPC_READ_BUFFER, 0x4);
-	s_telemEventInfo[TELEM_PMC].ssram_virt_addr = (u64 *)ioremap_nocache(
+	s_telemEventInfo[TELEM_PMC].ssram_virt_addr = (u64 *)ioremap_cache(
 			(unsigned long)s_mchBarAddrs[TELEM_SSRAMBAR_CFG] +
 			IOSS_TELEM_SSRAM_OFFSET, TELEM_SSRAM_SIZE);
 
diff --git a/drivers/platform/x86/socwatch/sw_trace_notifier_provider.c b/drivers/platform/x86/socwatch/sw_trace_notifier_provider.c
index f9eb4ff2703d..ec421ecee162 100644
--- a/drivers/platform/x86/socwatch/sw_trace_notifier_provider.c
+++ b/drivers/platform/x86/socwatch/sw_trace_notifier_provider.c
@@ -707,9 +707,9 @@ static inline u64 sw_tscval(void)
 
 u64 sw_timestamp(void)
 {
-	struct timespec ts;
-
-	getnstimeofday(&ts);
+	struct timespec64 ts;
+	ktime_get_real_ts64(&ts);
+	timespec64_to_ns(&ts);
 	return (ts.tv_sec * 1000000000ULL + ts.tv_nsec);
 }
 
-- 
2.17.1

