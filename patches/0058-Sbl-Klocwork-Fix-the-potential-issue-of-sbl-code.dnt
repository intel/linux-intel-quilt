From 3a26298175e48d8161cbbf6aa7af10bf11132948 Mon Sep 17 00:00:00 2001
From: "Duan, YayongX" <yayongx.duan@intel.com>
Date: Mon, 23 Jul 2018 09:03:57 +0000
Subject: [PATCH 58/63] Sbl: Klocwork: Fix the potential issue of sbl code

- 'buf' is passed from a interface, which result in
we cannot ensure what is involved in it. But there is
not a security checking for copying 'buf' to 'name'.
And this issue may cause a memory overflow of 'name'.

- This patch add a checking for 'buf+3'(something will
be copied to 'name' buffer) to keep no overflow occur
in 'name' buffer.

Change-Id: I9c57ba19bb5cec1849bd6b11aa87bd4e4e09ed52
Signed-off-by: Duan, YayongX <yayongx.duan@intel.com>
---
 drivers/staging/android/sbl/sblbc.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/drivers/staging/android/sbl/sblbc.c b/drivers/staging/android/sbl/sblbc.c
index d77700b70e25..85865eb5d281 100644
--- a/drivers/staging/android/sbl/sblbc.c
+++ b/drivers/staging/android/sbl/sblbc.c
@@ -202,6 +202,11 @@ static ssize_t capsule_store(struct kobject *kobj, struct kobj_attribute *attr,
 
 	device = (buf[0] == 'm' ? EMMC : SDCARD);
 	partition = buf[1] - '0';
+	if (strlen(buf+3) >= sizeof(name)) {
+		pr_err(MODULE_NAME " buf+3: %d is too long\n", strlen(buf+3));
+		return -ENOMEM;
+	}
+
 	ret = sscanf(buf+3, "%s", name);
 	pr_info(MODULE_NAME " capsule parameters (%d): DEVICE=%d PARTITION=%d NAME=%s\n",
 				ret, device, partition, name);
-- 
2.17.1

