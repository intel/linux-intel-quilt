From 50e6a3462b2ddc0ba6e841ddc27d89ae0fd0e0a7 Mon Sep 17 00:00:00 2001
From: "Song, Yoong Siang" <yoong.siang.song@intel.com>
Date: Mon, 1 Jun 2020 21:21:05 +0800
Subject: [PATCH 11/27] net: phy: Enable wake on PHY activity for Marvell GPY
 PHY

This commit add support to "wake on PHY activity" WoL feature by
enabling link state change interrupt.

Signed-off-by: Song, Yoong Siang <yoong.siang.song@intel.com>
---
 drivers/net/phy/intel-gpy.c | 21 ++++++++++++++++++++-
 1 file changed, 20 insertions(+), 1 deletion(-)

diff --git a/drivers/net/phy/intel-gpy.c b/drivers/net/phy/intel-gpy.c
index 19ed08a3091b..778c51322a2a 100644
--- a/drivers/net/phy/intel-gpy.c
+++ b/drivers/net/phy/intel-gpy.c
@@ -191,13 +191,18 @@ static void gpy_get_wol(struct phy_device *phydev,
 {
 	int ret = 0;
 
-	wol->supported = WAKE_MAGIC;
+	wol->supported = WAKE_MAGIC | WAKE_PHY;
 	wol->wolopts = 0;
 
 	ret = phy_read_mmd(phydev, MDIO_MMD_VEND2, GPY_VSPEC2_WOL_CTL);
 
 	if (ret & GPY_WOL_EN)
 		wol->wolopts |= WAKE_MAGIC;
+
+	ret = phy_read(phydev, GPY_IMASK);
+
+	if (ret & GPY_INTR_LSTC)
+		wol->wolopts |= WAKE_PHY;
 }
 
 static int gpy_set_wol(struct phy_device *phydev,
@@ -262,6 +267,20 @@ static int gpy_set_wol(struct phy_device *phydev,
 			return ret;
 	}
 
+	if (wol->wolopts & WAKE_PHY) {
+		/* Enable the link state change interrupt */
+		ret = phy_set_bits(phydev, GPY_IMASK, GPY_INTR_LSTC);
+
+		if (ret < 0)
+			return ret;
+	} else {
+		/* Disable the link state change interrupt */
+		ret = phy_clear_bits(phydev, GPY_IMASK, GPY_INTR_LSTC);
+
+		if (ret < 0)
+			return ret;
+	}
+
 	return ret;
 }
 
-- 
2.17.1

