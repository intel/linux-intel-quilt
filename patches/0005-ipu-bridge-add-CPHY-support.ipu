From 9c7744f1489c6c1f4be1ac2b59ad08b059d633aa Mon Sep 17 00:00:00 2001
From: Chen Meng J <meng.j.chen@intel.com>
Date: Wed, 20 Nov 2024 17:56:07 +0800
Subject: [PATCH 05/11] ipu-bridge: add CPHY support

get DPHY or CPHY mode when parse ssdb

Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/pci/intel/ipu-bridge.c | 23 ++++++++++++++++++++++-
 include/media/ipu-bridge.h           |  7 +++++--
 2 files changed, 27 insertions(+), 3 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-bridge.c b/drivers/media/pci/intel/ipu-bridge.c
index e58b354ad9e6..3c947d1a487c 100644
--- a/drivers/media/pci/intel/ipu-bridge.c
+++ b/drivers/media/pci/intel/ipu-bridge.c
@@ -35,6 +35,9 @@
  */
 #define IVSC_DEV_NAME "intel_vsc"
 
+#define PHY_MODE_DPHY  0
+#define PHY_MODE_CPHY  1
+
 /*
  * Extend this array with ACPI Hardware IDs of devices known to be working
  * plus the number of link-frequencies expected by their drivers, along with
@@ -314,6 +317,7 @@ int ipu_bridge_parse_ssdb(struct acpi_device *adev, struct ipu_sensor *sensor)
 
 	sensor->link = ssdb.link;
 	sensor->lanes = ssdb.lanes;
+	sensor->phyconfig = ssdb.phyconfig;
 	sensor->mclkspeed = ssdb.mclkspeed;
 	sensor->rotation = ipu_bridge_parse_rotation(adev, &ssdb);
 	sensor->orientation = ipu_bridge_parse_orientation(adev);
@@ -332,6 +336,7 @@ static void ipu_bridge_create_fwnode_properties(
 {
 	struct ipu_property_names *names = &sensor->prop_names;
 	struct software_node *nodes = sensor->swnodes;
+	u8 bus_type;
 
 	sensor->prop_names = prop_names;
 
@@ -389,9 +394,16 @@ static void ipu_bridge_create_fwnode_properties(
 			PROPERTY_ENTRY_REF_ARRAY("lens-focus", sensor->vcm_ref);
 	}
 
+	if (sensor->phyconfig == PHY_MODE_DPHY)
+		bus_type = V4L2_FWNODE_BUS_TYPE_CSI2_DPHY;
+	else if (sensor->phyconfig == PHY_MODE_CPHY)
+		bus_type = V4L2_FWNODE_BUS_TYPE_CSI2_CPHY;
+	else
+		bus_type = V4L2_FWNODE_BUS_TYPE_GUESS;
+
 	sensor->ep_properties[0] = PROPERTY_ENTRY_U32(
 					sensor->prop_names.bus_type,
-					V4L2_FWNODE_BUS_TYPE_CSI2_DPHY);
+					bus_type);
 	sensor->ep_properties[1] = PROPERTY_ENTRY_U32_ARRAY_LEN(
 					sensor->prop_names.data_lanes,
 					bridge->data_lanes, sensor->lanes);
@@ -411,6 +423,15 @@ static void ipu_bridge_create_fwnode_properties(
 	sensor->ipu_properties[1] = PROPERTY_ENTRY_REF_ARRAY(
 					sensor->prop_names.remote_endpoint,
 					sensor->remote_ref);
+
+	/*
+	 * TODO: Remove the bus_type property for IPU
+	 * 1. keep fwnode property list no change.
+	 * 2. IPU driver needs to get bus_type from remote sensor ep.
+	 */
+	sensor->ipu_properties[2] = PROPERTY_ENTRY_U32
+					(sensor->prop_names.bus_type,
+					bus_type);
 }
 
 static void ipu_bridge_init_swnode_names(struct ipu_sensor *sensor)
diff --git a/include/media/ipu-bridge.h b/include/media/ipu-bridge.h
index 16fac765456e..f8642d09968d 100644
--- a/include/media/ipu-bridge.h
+++ b/include/media/ipu-bridge.h
@@ -91,7 +91,9 @@ struct ipu_sensor_ssdb {
 	u8 controllogicid;
 	u8 reserved1[3];
 	u8 mclkport;
-	u8 reserved2[13];
+	u8 reserved2[5];
+	u8 phyconfig;
+	u8 reserved3[7];
 } __packed;
 
 struct ipu_property_names {
@@ -139,11 +141,12 @@ struct ipu_sensor {
 	u32 rotation;
 	enum v4l2_fwnode_orientation orientation;
 	const char *vcm_type;
+	u8 phyconfig;
 
 	struct ipu_property_names prop_names;
 	struct property_entry ep_properties[5];
 	struct property_entry dev_properties[5];
-	struct property_entry ipu_properties[3];
+	struct property_entry ipu_properties[4];
 	struct property_entry ivsc_properties[1];
 	struct property_entry ivsc_sensor_ep_properties[4];
 	struct property_entry ivsc_ipu_ep_properties[4];
-- 
2.43.0

