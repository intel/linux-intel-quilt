From 60c6f8218645d1f1da71b31ea6b4730d188e3b33 Mon Sep 17 00:00:00 2001
From: "Song, Yoong Siang" <yoong.siang.song@intel.com>
Date: Tue, 8 Dec 2020 23:27:46 +0800
Subject: [PATCH 08/13] net: network_proxy: Add IPv4 subnet mask configuration

Send IPv4 subnet mask to Network Proxy Agent after sending
the IPv4 address.

Signed-off-by: Song, Yoong Siang <yoong.siang.song@intel.com>
---
 drivers/net/networkproxy/network_proxy.c | 10 ++++++++++
 include/linux/network_proxy_common.h     |  2 ++
 2 files changed, 12 insertions(+)

diff --git a/drivers/net/networkproxy/network_proxy.c b/drivers/net/networkproxy/network_proxy.c
index d840fa60caa2..33ea1f4c00ff 100644
--- a/drivers/net/networkproxy/network_proxy.c
+++ b/drivers/net/networkproxy/network_proxy.c
@@ -234,6 +234,7 @@ static int netprox_process_mib_rule_read(struct np_rules *rule, void *content,
 	case NP_RL_T_IPV6:
 	case NP_RL_T_SNMP_COMMUNITY_STR:
 	case NP_RL_T_TCP_WAKE_PORT:
+	case NP_RL_T_IPV4_SUBNET:
 		ret = netprox_read_from_agent(rule, content, size);
 		break;
 	default:
@@ -382,6 +383,7 @@ static int netprox_send_netdev_mib(int rule_type)
 	case NP_RL_T_MAC_ADDR:
 		size = sizeof(struct np_rules) + NP_MAC_ADDR_BYTES;
 		break;
+	case NP_RL_T_IPV4_SUBNET:
 	case NP_RL_T_IPV4:
 		indevice = ndev->ip_ptr;
 		if (indevice) {
@@ -452,6 +454,11 @@ static int netprox_send_netdev_mib(int rule_type)
 			ptr += NP_IPV6_ADDR_BYTES;
 		}
 		break;
+	case NP_RL_T_IPV4_SUBNET:
+		indevice = ndev->ip_ptr;
+		inifaddr = indevice->ifa_list;
+		memcpy(ptr, (void *)&inifaddr->ifa_mask, NP_IPV4_ADDR_BYTES);
+		break;
 	default:
 		ret = -EPERM;
 		pr_err("unknown MIB type\n");
@@ -486,6 +493,9 @@ static int netprox_process_classifier_rule_write(struct np_rules *rule,
 			ret = netprox_send_netdev_mib(NP_RL_T_MAC_ADDR);
 			if (ret == 0)
 				ret = netprox_send_netdev_mib(NP_RL_T_IPV4);
+			if (ret == 0)
+				ret =
+				netprox_send_netdev_mib(NP_RL_T_IPV4_SUBNET);
 		}
 		break;
 	case NP_RL_T_IPV6:
diff --git a/include/linux/network_proxy_common.h b/include/linux/network_proxy_common.h
index 667069468bbf..bf16cc8ecb7e 100644
--- a/include/linux/network_proxy_common.h
+++ b/include/linux/network_proxy_common.h
@@ -54,6 +54,7 @@
 #define NP_RL_T_MDNS			11
 #define NP_RL_T_MDNS_WRITE_RR		12
 #define NP_RL_T_MDNS_READ_RR		13
+#define NP_RL_T_IPV4_SUBNET		14
 
 /* Network Proxy Fixed Classifier Value (2 bytes) */
 #define NP_RL_CLS_ENABLE		BIT(15)
@@ -102,6 +103,7 @@ struct np_mib {
 	unsigned short tcp_port[NP_TCP_PORT_ARRAY];
 	unsigned int ipv6_addr_sz;
 	unsigned int tcp_port_sz;
+	unsigned char ipv4_subnet[NP_IPV4_ADDR_BYTES];
 };
 
 /* Network Proxy Agent Info */
-- 
2.17.1

