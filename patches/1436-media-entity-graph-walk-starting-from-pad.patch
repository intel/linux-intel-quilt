From 1aec997d3e587d096bc6b685577b3be877a2348b Mon Sep 17 00:00:00 2001
From: wu xia <xia.wu@intel.com>
Date: Thu, 14 Jul 2016 22:33:33 +0800
Subject: [PATCH 1436/2345] media:entity: graph walk starting from pad

Add new parameter in media_entity_graph_walk_start()
Start walking the media graph at a given entity and pad

This function initializes the graph traversal structure to walk
the entities graph starting at the given entity and pad.
As some entity may be on the cross node on pipeline, so add one
parameter to start the graph traverse.

Signed-off-by: Jianxu Zheng <jian.xu.zheng@intel.com>
Signed-off-by: wu xia <xia.wu@intel.com>
---
 drivers/media/media-entity.c      | 19 +++++++++----------
 drivers/media/v4l2-core/v4l2-mc.c |  6 +++---
 include/media/media-entity.h      |  2 +-
 3 files changed, 13 insertions(+), 14 deletions(-)

diff --git a/drivers/media/media-entity.c b/drivers/media/media-entity.c
index 6549c9e..baf615d 100644
--- a/drivers/media/media-entity.c
+++ b/drivers/media/media-entity.c
@@ -336,16 +336,16 @@ void media_graph_walk_cleanup(struct media_graph *graph)
 EXPORT_SYMBOL_GPL(media_graph_walk_cleanup);
 
 void media_graph_walk_start(struct media_graph *graph,
-			    struct media_entity *entity)
+			    struct media_pad *pad)
 {
 	media_entity_enum_zero(&graph->ent_enum);
-	media_entity_enum_set(&graph->ent_enum, entity);
+	media_entity_enum_set(&graph->ent_enum, pad->entity);
 
 	graph->top = 0;
 	graph->stack[graph->top].entity = NULL;
-	stack_push(graph, entity, -1);
-	dev_dbg(entity->graph_obj.mdev->dev,
-		"begin graph walk at '%s'\n", entity->name);
+	stack_push(graph, pad->entity, pad->index);
+	dev_dbg(pad->entity->graph_obj.mdev->dev,
+		"begin graph walk at '%s'\n", pad->entity->name);
 }
 EXPORT_SYMBOL_GPL(media_graph_walk_start);
 
@@ -388,8 +388,7 @@ static void media_graph_walk_iter(struct media_graph *graph)
 	 * Are the local pad and the pad we came from connected
 	 * internally in the entity ?
 	 */
-	if (from_pad != -1 &&
-	    !media_entity_has_route(entity, from_pad, local->index)) {
+	if (!media_entity_has_route(entity, from_pad, local->index)) {
 		link_top(graph) = link_top(graph)->next;
 		return;
 	}
@@ -487,7 +486,7 @@ __must_check int __media_pipeline_start(struct media_entity *entity,
 			goto error_graph_walk_start;
 	}
 
-	media_graph_walk_start(&pipe->graph, entity);
+	media_graph_walk_start(graph, &entity->pads[0]);
 
 	while ((entity = media_graph_walk_next(graph))) {
 		DECLARE_BITMAP(active, MEDIA_ENTITY_MAX_PADS);
@@ -559,7 +558,7 @@ __must_check int __media_pipeline_start(struct media_entity *entity,
 	 * Link validation on graph failed. We revert what we did and
 	 * return the error.
 	 */
-	media_graph_walk_start(graph, entity_err);
+	media_graph_walk_start(graph, &entity_err->pads[0]);
 
 	while ((entity_err = media_graph_walk_next(graph))) {
 		/* Sanity check for negative stream_count */
@@ -610,7 +609,7 @@ void __media_pipeline_stop(struct media_entity *entity)
 	if (WARN_ON(!pipe))
 		return;
 
-	media_graph_walk_start(graph, entity);
+	media_graph_walk_start(graph, &entity->pads[0]);
 
 	while ((entity = media_graph_walk_next(graph))) {
 		/* Sanity check for negative stream_count */
diff --git a/drivers/media/v4l2-core/v4l2-mc.c b/drivers/media/v4l2-core/v4l2-mc.c
index 303980b..3d1ad93e 100644
--- a/drivers/media/v4l2-core/v4l2-mc.c
+++ b/drivers/media/v4l2-core/v4l2-mc.c
@@ -270,7 +270,7 @@ static int pipeline_pm_use_count(struct media_entity *entity,
 {
 	int use = 0;
 
-	media_graph_walk_start(graph, entity);
+	media_graph_walk_start(graph, &entity->pads[0]);
 
 	while ((entity = media_graph_walk_next(graph))) {
 		if (is_media_entity_v4l2_video_device(entity))
@@ -333,7 +333,7 @@ static int pipeline_pm_power(struct media_entity *entity, int change,
 	if (!change)
 		return 0;
 
-	media_graph_walk_start(graph, entity);
+	media_graph_walk_start(graph, &entity->pads[0]);
 
 	while (!ret && (entity = media_graph_walk_next(graph)))
 		if (is_media_entity_v4l2_subdev(entity))
@@ -342,7 +342,7 @@ static int pipeline_pm_power(struct media_entity *entity, int change,
 	if (!ret)
 		return ret;
 
-	media_graph_walk_start(graph, first);
+	media_graph_walk_start(graph, &first->pads[0]);
 
 	while ((first = media_graph_walk_next(graph))
 	       && first != entity)
diff --git a/include/media/media-entity.h b/include/media/media-entity.h
index 188b9b5..35ef2cf 100644
--- a/include/media/media-entity.h
+++ b/include/media/media-entity.h
@@ -895,7 +895,7 @@ bool media_entity_has_route(struct media_entity *entity, unsigned int sink,
  * using media_graph_walk_cleanup().
  */
 void media_graph_walk_start(struct media_graph *graph,
-			    struct media_entity *entity);
+			    struct media_pad *pad);
 
 /**
  * media_graph_walk_next - Get the next entity in the graph
-- 
2.7.4

