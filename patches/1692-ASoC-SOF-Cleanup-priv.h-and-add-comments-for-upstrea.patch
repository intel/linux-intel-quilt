From 1a8158d321cbc17050e95d9a55bdd6d1dab66a9e Mon Sep 17 00:00:00 2001
From: Liam Girdwood <liam.r.girdwood@linux.intel.com>
Date: Fri, 15 Jun 2018 20:36:21 +0100
Subject: [PATCH 1692/2345] ASoC: SOF: Cleanup priv.h and add comments for
 upstreaming.

Signed-off-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
---
 sound/soc/sof/sof-priv.h | 52 ++++++++++++++++++++++++++++++------------------
 1 file changed, 33 insertions(+), 19 deletions(-)

diff --git a/sound/soc/sof/sof-priv.h b/sound/soc/sof/sof-priv.h
index 6cc8513..fabfcb2 100644
--- a/sound/soc/sof/sof-priv.h
+++ b/sound/soc/sof/sof-priv.h
@@ -49,7 +49,14 @@ struct snd_sof_ipc;
 struct snd_sof_debugfs_map;
 struct snd_soc_tplg_ops;
 struct snd_soc_component;
+struct sof_intel_hda_dev;
+struct snd_sof_pdata;
 
+/*
+ * SOF DSP HW abstraction operations.
+ * Used to abstract DSP HW architecture and any IO busses between host CPU
+ * and DSP device(s).
+ */
 struct snd_sof_dsp_ops {
 	/* probe and remove */
 	int (*remove)(struct snd_sof_dev *sof_dev);
@@ -134,20 +141,21 @@ struct snd_sof_dsp_ops {
 	int (*trace_trigger)(struct snd_sof_dev *sdev, int cmd);
 };
 
+/* DSP architecture specific callbacks for oops and stack dumps */
 struct sof_arch_ops {
 	void (*dsp_oops)(struct snd_sof_dev *sdev, void *oops);
 	void (*dsp_stack)(struct snd_sof_dev *sdev, void *oops,
 			  u32 *stack, u32 stack_words);
 };
 
-struct snd_sof_pdata;
-
+/* DSP device HW descriptor mapping between bus ID and ops */
 struct sof_ops_table {
 	const struct sof_dev_desc *desc;
 	struct snd_sof_dsp_ops *ops;
 	struct platform_device *(*new_data)(struct snd_sof_pdata *pdata);
 };
 
+/* FS entry for debug files that can expose DSP memories, registers */
 struct snd_sof_dfsentry {
 	struct dentry *dfsentry;
 	size_t size;
@@ -155,6 +163,7 @@ struct snd_sof_dfsentry {
 	struct snd_sof_dev *sdev;
 };
 
+/* Debug mapping for any DSP memory or registers that can used for debug */
 struct snd_sof_debugfs_map {
 	const char *name;
 	u32 bar;
@@ -162,11 +171,28 @@ struct snd_sof_debugfs_map {
 	u32 size;
 };
 
+/* mailbox descriptor, used for host <-> DSP IPC */
 struct snd_sof_mailbox {
 	u32 offset;
 	size_t size;
 };
 
+/* IPC message descriptor for host <-> DSP IO */
+struct snd_sof_ipc_msg {
+	struct list_head list;
+
+	/* message data */
+	u32 header;
+	void *msg_data;
+	void *reply_data;
+	size_t msg_size;
+	size_t reply_size;
+
+	wait_queue_head_t waitq;
+	bool complete;
+};
+
+/* PCM stream, mapped to FW component  */
 struct snd_sof_pcm_stream {
 	u32 comp_id;
 	struct snd_dma_buffer page_table;
@@ -174,6 +200,7 @@ struct snd_sof_pcm_stream {
 	struct snd_pcm_substream *substream;
 };
 
+/* ASLA SOF PCM device */
 struct snd_sof_pcm {
 	struct snd_sof_dev *sdev;
 	struct snd_soc_tplg_pcm pcm;
@@ -183,6 +210,7 @@ struct snd_sof_pcm {
 	struct list_head list;	/* list in sdev pcm list */
 };
 
+/* ALSA SOF Kcontrol device */
 struct snd_sof_control {
 	struct snd_sof_dev *sdev;
 	int comp_id;
@@ -197,6 +225,7 @@ struct snd_sof_control {
 	struct list_head list;	/* list in sdev control list */
 };
 
+/* ASoC SOF DAPM widget */
 struct snd_sof_widget {
 	struct snd_sof_dev *sdev;
 	int comp_id;
@@ -208,9 +237,10 @@ struct snd_sof_widget {
 	struct mutex mutex;
 	struct list_head list;	/* list in sdev widget list */
 
-	void *private;			/* core does not touch this */
+	void *private;		/* core does not touch this */
 };
 
+/* ASoC DAI device */
 struct snd_sof_dai {
 	struct snd_sof_dev *sdev;
 	const char *name;
@@ -220,22 +250,6 @@ struct snd_sof_dai {
 	struct list_head list;	/* list in sdev dai list */
 };
 
-struct snd_sof_ipc_msg {
-	struct list_head list;
-
-	/* message data */
-	u32 header;
-	void *msg_data;
-	void *reply_data;
-	size_t msg_size;
-	size_t reply_size;
-
-	wait_queue_head_t waitq;
-	bool complete;
-};
-
-struct sof_intel_hda_dev;
-
 /*
  * SOF Device Level.
  */
-- 
2.7.4

