From 37f75cb64e4d208828177650aacffa3b13cba956 Mon Sep 17 00:00:00 2001
From: Hao Li <hao.l.li@intel.com>
Date: Tue, 27 Feb 2018 06:40:32 -0500
Subject: [PATCH 1116/2328] cwp cleanup: CONFIG_CWP_VIRTIO_DEVICES ->
 CONFIG_ACRN_VIRTIO_DEVICES

Change-Id: I22f1812c178a3797b5320a14ec9a8550a26118bb
Signed-off-by: Hao Li <hao.l.li@intel.com>
---
 drivers/virtio/Kconfig             |  8 ++++----
 drivers/virtio/virtio_pci_common.c | 38 +++++++++++++++++++-------------------
 drivers/virtio/virtio_pci_legacy.c |  6 +++---
 drivers/virtio/virtio_pci_modern.c |  6 +++---
 include/uapi/linux/virtio_ids.h    |  6 +++---
 5 files changed, 32 insertions(+), 32 deletions(-)

diff --git a/drivers/virtio/Kconfig b/drivers/virtio/Kconfig
index 8a453fa..6001202 100644
--- a/drivers/virtio/Kconfig
+++ b/drivers/virtio/Kconfig
@@ -79,14 +79,14 @@ config VIRTIO_MMIO_CMDLINE_DEVICES
 
 	 If unsure, say 'N'.
 
-config CWP_VIRTIO_DEVICES
-	bool "Support for CWP virtio devices drivers in frontend/guest"
+config ACRN_VIRTIO_DEVICES
+	bool "Support for ACRN virtio devices drivers in frontend/guest"
 	default n
 	depends on VIRTIO_PCI
 	---help---
-          CWP virtio devices support in frontend/guest.
+          ACRN virtio devices support in frontend/guest.
 
-	  This option enables support for CWP virtio devices which use Intel
+	  This option enables support for ACRN virtio devices which use Intel
 	  vendor ID and device IDs, by extending virtio frontend framework
 	  a little bit so that virtio PCI driver could be loaded for these
 	  devices.
diff --git a/drivers/virtio/virtio_pci_common.c b/drivers/virtio/virtio_pci_common.c
index d169d0c..ec653ac 100644
--- a/drivers/virtio/virtio_pci_common.c
+++ b/drivers/virtio/virtio_pci_common.c
@@ -496,35 +496,35 @@ static const struct dev_pm_ops virtio_pci_pm_ops = {
 /* Qumranet donated their vendor ID for devices 0x1000 thru 0x10FF. */
 static const struct pci_device_id virtio_pci_id_table[] = {
 	{ PCI_DEVICE(PCI_VENDOR_ID_REDHAT_QUMRANET, PCI_ANY_ID) },
-#ifdef CONFIG_CWP_VIRTIO_DEVICES
+#ifdef CONFIG_ACRN_VIRTIO_DEVICES
 	/*
-	 * To support CWP virtio devices which haven't obtained valid
+	 * To support ACRN virtio devices which haven't obtained valid
 	 * virtio VID:DID in time, we relax the probing conditions a little.
 	 */
-#define CWP_VIRTIO_DEVICE_ID_RPMB 0x8601
-	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, CWP_VIRTIO_DEVICE_ID_RPMB) },
+#define ACRN_VIRTIO_DEVICE_ID_RPMB 0x8601
+	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, ACRN_VIRTIO_DEVICE_ID_RPMB) },
 
-#define CWP_VIRTIO_DEVICE_ID_HECI 0x8602
-	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, CWP_VIRTIO_DEVICE_ID_HECI) },
+#define ACRN_VIRTIO_DEVICE_ID_HECI 0x8602
+	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, ACRN_VIRTIO_DEVICE_ID_HECI) },
 
-#define CWP_VIRTIO_DEVICE_ID_AUDIO 0x8603
-	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, CWP_VIRTIO_DEVICE_ID_AUDIO) },
+#define ACRN_VIRTIO_DEVICE_ID_AUDIO 0x8603
+	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, ACRN_VIRTIO_DEVICE_ID_AUDIO) },
 
-#define CWP_VIRTIO_DEVICE_ID_IPU 0x8604
-	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, CWP_VIRTIO_DEVICE_ID_IPU) },
+#define ACRN_VIRTIO_DEVICE_ID_IPU 0x8604
+	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, ACRN_VIRTIO_DEVICE_ID_IPU) },
 
-#define CWP_VIRTIO_DEVICE_ID_TSN 0x8605
-	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, CWP_VIRTIO_DEVICE_ID_TSN) },
+#define ACRN_VIRTIO_DEVICE_ID_TSN 0x8605
+	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, ACRN_VIRTIO_DEVICE_ID_TSN) },
 
-#define CWP_VIRTIO_DEVICE_ID_HYPERDMABUF 0x8606
-	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, CWP_VIRTIO_DEVICE_ID_HYPERDMABUF) },
+#define ACRN_VIRTIO_DEVICE_ID_HYPERDMABUF 0x8606
+	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, ACRN_VIRTIO_DEVICE_ID_HYPERDMABUF) },
 
-#define CWP_VIRTIO_DEVICE_ID_HDCP 0x8607
-	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, CWP_VIRTIO_DEVICE_ID_HDCP) },
+#define ACRN_VIRTIO_DEVICE_ID_HDCP 0x8607
+	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, ACRN_VIRTIO_DEVICE_ID_HDCP) },
 
-#define CWP_VIRTIO_DEVICE_ID_COREU 0x8608
-	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, CWP_VIRTIO_DEVICE_ID_COREU) },
-#endif /* CONFIG_CWP_VIRTIO_DEVICES */
+#define ACRN_VIRTIO_DEVICE_ID_COREU 0x8608
+	{ PCI_DEVICE(PCI_VENDOR_ID_INTEL, ACRN_VIRTIO_DEVICE_ID_COREU) },
+#endif /* CONFIG_ACRN_VIRTIO_DEVICES */
 	{ 0 }
 };
 
diff --git a/drivers/virtio/virtio_pci_legacy.c b/drivers/virtio/virtio_pci_legacy.c
index 6d92ba2..b21f103 100644
--- a/drivers/virtio/virtio_pci_legacy.c
+++ b/drivers/virtio/virtio_pci_legacy.c
@@ -215,9 +215,9 @@ int virtio_pci_legacy_probe(struct virtio_pci_device *vp_dev)
 	struct pci_dev *pci_dev = vp_dev->pci_dev;
 	int rc;
 
-#ifdef CONFIG_CWP_VIRTIO_DEVICES
+#ifdef CONFIG_ACRN_VIRTIO_DEVICES
 	/*
-	 * To support CWP virtio devices which haven't obtained valid
+	 * To support ACRN virtio devices which haven't obtained valid
 	 * virtio VID:DID in time, we relax the probing conditions a little.
 	 */
 	if (pci_dev->vendor == PCI_VENDOR_ID_REDHAT_QUMRANET &&
@@ -227,7 +227,7 @@ int virtio_pci_legacy_probe(struct virtio_pci_device *vp_dev)
 	/* We only own devices >= 0x1000 and <= 0x103f: leave the rest. */
 	if (pci_dev->device < 0x1000 || pci_dev->device > 0x103f)
 		return -ENODEV;
-#endif /* CONFIG_CWP_VIRTIO_DEVICES */
+#endif /* CONFIG_ACRN_VIRTIO_DEVICES */
 
 	if (pci_dev->revision != VIRTIO_PCI_ABI_VERSION) {
 		printk(KERN_ERR "virtio_pci: expected ABI version %d, got %d\n",
diff --git a/drivers/virtio/virtio_pci_modern.c b/drivers/virtio/virtio_pci_modern.c
index 8f023f0..4f7cc32 100644
--- a/drivers/virtio/virtio_pci_modern.c
+++ b/drivers/virtio/virtio_pci_modern.c
@@ -576,9 +576,9 @@ int virtio_pci_modern_probe(struct virtio_pci_device *vp_dev)
 
 	check_offsets();
 
-#ifdef CONFIG_CWP_VIRTIO_DEVICES
+#ifdef CONFIG_ACRN_VIRTIO_DEVICES
 	/*
-	 * To support CWP virtio devices which haven't obtained valid
+	 * To support ACRN virtio devices which haven't obtained valid
 	 * virtio VID:DID in time, we relax the probing conditions a little.
 	 */
 	if (pci_dev->vendor == PCI_VENDOR_ID_REDHAT_QUMRANET &&
@@ -595,7 +595,7 @@ int virtio_pci_modern_probe(struct virtio_pci_device *vp_dev)
 		return -ENODEV;
 
 	if (pci_dev->device < 0x1040) {
-#endif /* CONFIG_CWP_VIRTIO_DEVICES */
+#endif /* CONFIG_ACRN_VIRTIO_DEVICES */
 		/* Transitional devices: use the PCI subsystem device id as
 		 * virtio device id, same as legacy driver always did.
 		 */
diff --git a/include/uapi/linux/virtio_ids.h b/include/uapi/linux/virtio_ids.h
index 9925f28..a950196 100644
--- a/include/uapi/linux/virtio_ids.h
+++ b/include/uapi/linux/virtio_ids.h
@@ -44,8 +44,8 @@
 #define VIRTIO_ID_VSOCK        19 /* virtio vsock transport */
 #define VIRTIO_ID_CRYPTO       20 /* virtio crypto */
 
-#ifdef CONFIG_CWP_VIRTIO_DEVICES
-/* CWP virtio device types */
+#ifdef CONFIG_ACRN_VIRTIO_DEVICES
+/* ACRN virtio device types */
 #define	VIRTIO_ID_RPMB		0xFFFF
 #define	VIRTIO_ID_HECI		0xFFFE
 #define	VIRTIO_ID_AUDIO		0xFFFD
@@ -55,6 +55,6 @@
 #define	VIRTIO_ID_HDCP		0xFFF9
 #define	VIRTIO_ID_COREU		0xFFF8
 
-#endif /* CONFIG_CWP_VIRTIO_DEVICES */
+#endif /* CONFIG_ACRN_VIRTIO_DEVICES */
 
 #endif /* _LINUX_VIRTIO_IDS_H */
-- 
2.7.4

