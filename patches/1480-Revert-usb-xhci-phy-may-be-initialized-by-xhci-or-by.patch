From 2cb346e5f5829a066393eda578ff3f9573127271 Mon Sep 17 00:00:00 2001
From: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
Date: Mon, 21 May 2018 14:50:18 -0700
Subject: [PATCH 1480/2367] Revert "usb: xhci: phy may be initialized by xhci
 or by dwc3"

This reverts commit f2f18fd05ccdae5b55d7f69d54474a153a5f0f53.

Tracked-On: PKT-679
Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
---
 drivers/usb/dwc3/dwc3-pci.c | 32 ++++++++++----------------------
 drivers/usb/host/xhci-pci.c | 32 --------------------------------
 drivers/usb/host/xhci.h     |  1 -
 3 files changed, 10 insertions(+), 55 deletions(-)

diff --git a/drivers/usb/dwc3/dwc3-pci.c b/drivers/usb/dwc3/dwc3-pci.c
index f7e78e3..4ca7cdb 100644
--- a/drivers/usb/dwc3/dwc3-pci.c
+++ b/drivers/usb/dwc3/dwc3-pci.c
@@ -25,7 +25,6 @@
 #include <linux/gpio/consumer.h>
 #include <linux/acpi.h>
 #include <linux/delay.h>
-#include <linux/usb/phy.h>
 
 #define PCI_DEVICE_ID_SYNOPSYS_HAPSUSB3		0xabcd
 #define PCI_DEVICE_ID_SYNOPSYS_HAPSUSB3_AXI	0xabce
@@ -131,27 +130,16 @@ static int dwc3_pci_quirks(struct dwc3_pci *dwc)
 		    pdev->device == PCI_DEVICE_ID_INTEL_BXT_M ||
 		    pdev->device == PCI_DEVICE_ID_INTEL_APL ) {
 
-			if (IS_ERR_OR_NULL(usb_get_phy(USB_PHY_TYPE_USB2))) {
-				/* Unable to get phy, very likely intel_usb_dr_phy
-				 * platform device not yet allocated. Possible
-				 * race with another drivers.
-				 */
-				dwc->usb2_phy = platform_device_alloc(
-								"intel_usb_dr_phy", 0);
-				if (dwc->usb2_phy) {
-					dwc->usb2_phy->dev.parent = &pdev->dev;
-					ret = platform_device_add(dwc->usb2_phy);
-					if (ret) {
-						platform_device_put(dwc->usb2_phy);
-						return ret;
-					}
-				} else if (IS_ERR_OR_NULL(usb_get_phy(USB_PHY_TYPE_USB2))) {
-					/* In case of a race and another driver allocate
-					 * intel_usb_dr_phy platform device earlier, check
-					 * whether phy is already available. If not return error.
-					 */
-					return -ENOMEM;
-				}
+			dwc->usb2_phy = platform_device_alloc(
+							"intel_usb_dr_phy", 0);
+			if (!dwc->usb2_phy)
+				return -ENOMEM;
+
+			dwc->usb2_phy->dev.parent = &pdev->dev;
+	                ret = platform_device_add(dwc->usb2_phy);
+		        if (ret) {
+			        platform_device_put(dwc->usb2_phy);
+				return ret;
 			}
 		}
 
diff --git a/drivers/usb/host/xhci-pci.c b/drivers/usb/host/xhci-pci.c
index b36dd53..b50172a 100644
--- a/drivers/usb/host/xhci-pci.c
+++ b/drivers/usb/host/xhci-pci.c
@@ -26,7 +26,6 @@
 #include <linux/acpi.h>
 #include <linux/usb/phy.h>
 #include <linux/usb/otg.h>
-#include <linux/platform_device.h>
 
 #include "xhci.h"
 #include "xhci-trace.h"
@@ -93,35 +92,6 @@ static int xhci_pci_reinit(struct xhci_hcd *xhci, struct pci_dev *pdev)
 	/* If This capbility is found, register host on PHY for OTG purpose */
 	if (pdev->vendor == PCI_VENDOR_ID_INTEL && retval) {
 		hcd = xhci_to_hcd(xhci);
-
-		hcd->usb_phy = usb_get_phy(USB_PHY_TYPE_USB2);
-
-		if (IS_ERR_OR_NULL(hcd->usb_phy)) {
-			/* Unable to get phy, very likely intel_usb_dr_phy
-			 * platform device not yet allocated. Possible
-			 * race with another drivers.
-			 */
-			int ret;
-			xhci->usb2_phy = platform_device_alloc(
-								"intel_usb_dr_phy", 0);
-			if (xhci->usb2_phy) {
-				xhci->usb2_phy->dev.parent = &pdev->dev;
-					ret = platform_device_add(xhci->usb2_phy);
-				if (ret) {
-					platform_device_put(xhci->usb2_phy);
-					return ret;
-				}
-			} else {
-				/* In case of a race and another driver allocate
-				 * intel_usb_dr_phy platform device earlier, check
-				 * whether phy is already available. If not return error.
-				 */
-				hcd->usb_phy = usb_get_phy(USB_PHY_TYPE_USB2);
-				if (IS_ERR_OR_NULL(hcd->usb_phy))
-					return -ENOMEM;
-			}
-		}
-
 		hcd->usb_phy = usb_get_phy(USB_PHY_TYPE_USB2);
 
 		if (!IS_ERR_OR_NULL(hcd->usb_phy)) {
@@ -423,8 +393,6 @@ static void xhci_pci_remove(struct pci_dev *dev)
 
 	xhci = hcd_to_xhci(pci_get_drvdata(dev));
 	xhci->xhc_state |= XHCI_STATE_REMOVING;
-	if(xhci->usb2_phy)
-		platform_device_unregister(xhci->usb2_phy);
 	if (xhci->shared_hcd) {
 		usb_remove_hcd(xhci->shared_hcd);
 		usb_put_hcd(xhci->shared_hcd);
diff --git a/drivers/usb/host/xhci.h b/drivers/usb/host/xhci.h
index 4d22087..db1af99 100644
--- a/drivers/usb/host/xhci.h
+++ b/drivers/usb/host/xhci.h
@@ -1868,7 +1868,6 @@ struct xhci_hcd {
 	struct timer_list	comp_mode_recovery_timer;
 	u32			port_status_u0;
 	u16			test_mode;
-	struct platform_device	*usb2_phy;
 /* Compliance Mode Timer Triggered every 2 seconds */
 #define COMP_MODE_RCVRY_MSECS 2000
 
-- 
2.7.4

