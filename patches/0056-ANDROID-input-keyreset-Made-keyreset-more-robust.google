From bac1811f93d3de5bddcfc8175690f043cc3c57c8 Mon Sep 17 00:00:00 2001
From: Daniel Rosenberg <drosen@google.com>
Date: Fri, 27 Jun 2014 16:39:35 -0700
Subject: [PATCH 056/430] ANDROID: input: keyreset: Made keyreset more robust

Switched do_restart to run in a seperate workqueue to  handle
cases where kernel_restart hangs.

Change-Id: I1ecd61f8d0859f1a86d37c692351d644b5db9c69
Signed-off-by: Daniel Rosenberg <drosen@google.com>
---
 drivers/input/keyreset.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/input/keyreset.c b/drivers/input/keyreset.c
index eaaccde82210..7fbf7247e65f 100644
--- a/drivers/input/keyreset.c
+++ b/drivers/input/keyreset.c
@@ -27,9 +27,10 @@ struct keyreset_state {
 	int restart_requested;
 	int (*reset_fn)(void);
 	struct platform_device *pdev_child;
+	struct work_struct restart_work;
 };
 
-static void do_restart(void)
+static void do_restart(struct work_struct *unused)
 {
 	sys_sync();
 	kernel_restart(NULL);
@@ -44,7 +45,7 @@ static void do_reset_fn(void *priv)
 		state->restart_requested = state->reset_fn();
 	} else {
 		pr_info("keyboard reset\n");
-		do_restart();
+		schedule_work(&state->restart_work);
 		state->restart_requested = 1;
 	}
 }
@@ -69,6 +70,7 @@ static int keyreset_probe(struct platform_device *pdev)
 	if (!state->pdev_child)
 		return -ENOMEM;
 	state->pdev_child->dev.parent = &pdev->dev;
+	INIT_WORK(&state->restart_work, do_restart);
 
 	keyp = pdata->keys_down;
 	while ((key = *keyp++)) {
-- 
2.19.1

