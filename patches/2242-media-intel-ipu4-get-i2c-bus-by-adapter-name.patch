From ba0633adc3467240fa9cccda33be9227b38e1518 Mon Sep 17 00:00:00 2001
From: Ding Yunliang <yunliang.ding@intel.com>
Date: Mon, 16 Jul 2018 13:23:17 +0800
Subject: [PATCH 2242/2328] media: intel-ipu4: get i2c bus by adapter name

Message for Open Source:
The LPSS I2C would be loaded asynchronously, which caused camera
dectection fail as the camera i2c adapter was fixed inside.

Try to get the correct i2c adapter by its parent name, this was
fixed to camera device.

Message for Internal:
[Issue/Feature] This is just a WA for quick solution.
[Root Cause/Changes]

Change-Id: I368ca00d6d2b9fab47eb6134a2da3a89aeb50024
Signed-off-by: Ding Yunliang <yunliang.ding@intel.com>
Reviewed-on: ICG #342913
Reviewed-by: Coding Style
Reviewed-by: Tian Shu Qiu <tian.shu.qiu@intel.com>
Approver: Wei Meng <wei.meng@intel.com>
Reviewed-by: Wei Meng <wei.meng@intel.com>
Integrator: Wei Meng <wei.meng@intel.com>
Signed-off-by: Meng Wei <wei.meng@intel.com>
---
 drivers/media/i2c/max9286.c            |  7 +++---
 drivers/media/i2c/ti964.c              |  7 +++---
 drivers/media/pci/intel/ipu-buttress.c | 43 ++++++++++++++++++++++++++++++++++
 drivers/media/pci/intel/ipu-buttress.h |  4 +++-
 drivers/media/pci/intel/ipu-isys.c     | 30 +++++++++++++++++-------
 drivers/media/pci/intel/ipu4/Makefile  |  2 +-
 6 files changed, 74 insertions(+), 19 deletions(-)

diff --git a/drivers/media/i2c/max9286.c b/drivers/media/i2c/max9286.c
index 06bbba3..343616a 100644
--- a/drivers/media/i2c/max9286.c
+++ b/drivers/media/i2c/max9286.c
@@ -562,6 +562,7 @@ static int max9286_open(struct v4l2_subdev *subdev,
 static int max9286_registered(struct v4l2_subdev *subdev)
 {
 	struct max9286 *max = to_max_9286(subdev);
+	struct i2c_client *client = v4l2_get_subdevdata(subdev);
 	int i, j, k, l, rval, num, nsinks;
 
 	num = max->pdata->subdev_num;
@@ -569,13 +570,11 @@ static int max9286_registered(struct v4l2_subdev *subdev)
 	for (i = 0, k = 0; (i < num) && (k < nsinks); i++, k++) {
 		struct max9286_subdev_i2c_info *info =
 			&max->pdata->subdev_info[i];
-		struct i2c_adapter *adapter;
 
-		adapter = i2c_get_adapter(info->i2c_adapter_id);
+		/* aggre and subdves share the same i2c bus */
 		max->sub_devs[k] = v4l2_i2c_new_subdev_board(
-			max->v4l2_sd.v4l2_dev, adapter,
+			max->v4l2_sd.v4l2_dev, client->adapter,
 			&info->board_info, 0);
-		i2c_put_adapter(adapter);
 		if (!max->sub_devs[k]) {
 			dev_err(max->v4l2_sd.dev,
 				"can't create new i2c subdev %d-%04x\n",
diff --git a/drivers/media/i2c/ti964.c b/drivers/media/i2c/ti964.c
index 7f97cd4..30e4424 100644
--- a/drivers/media/i2c/ti964.c
+++ b/drivers/media/i2c/ti964.c
@@ -457,6 +457,7 @@ static int ti964_open(struct v4l2_subdev *subdev,
 static int ti964_registered(struct v4l2_subdev *subdev)
 {
 	struct ti964 *va = to_ti964(subdev);
+	struct i2c_client *client = v4l2_get_subdevdata(subdev);
 	int i, j, k, l, rval;
 
 	for (i = 0, k = 0; i < va->pdata->subdev_num; i++) {
@@ -465,7 +466,6 @@ static int ti964_registered(struct v4l2_subdev *subdev)
 		struct crlmodule_platform_data *pdata =
 			(struct crlmodule_platform_data *)
 			info->board_info.platform_data;
-		struct i2c_adapter *adapter;
 
 		if (k >= va->nsinks)
 			break;
@@ -511,11 +511,10 @@ static int ti964_registered(struct v4l2_subdev *subdev)
 		if (rval)
 			return rval;
 
-		adapter = i2c_get_adapter(info->i2c_adapter_id);
+		/* aggre and subdves share the same i2c bus */
 		va->sub_devs[k].sd = v4l2_i2c_new_subdev_board(
-			va->sd.v4l2_dev, adapter,
+			va->sd.v4l2_dev, client->adapter,
 			&info->board_info, 0);
-		i2c_put_adapter(adapter);
 		if (!va->sub_devs[k].sd) {
 			dev_err(va->sd.dev,
 				"can't create new i2c subdev %d-%04x\n",
diff --git a/drivers/media/pci/intel/ipu-buttress.c b/drivers/media/pci/intel/ipu-buttress.c
index fc81338..b823c0f 100644
--- a/drivers/media/pci/intel/ipu-buttress.c
+++ b/drivers/media/pci/intel/ipu-buttress.c
@@ -1260,6 +1260,37 @@ static void ipu_buttress_read_psys_fused_freqs(struct ipu_device *isp)
 	fused_freq->efficient_freq = efficient_ratio * BUTTRESS_PS_FREQ_STEP;
 }
 
+#ifdef I2C_WA
+/*
+ * The dev_id was hard code in platform data, as i2c bus number
+ * may change dynamiclly, we need to update this bus id
+ * accordingly.
+ *
+ * @adapter_id: hardware i2c adapter id, this was fixed in platform data
+ * return: i2c bus id registered in system
+ */
+int ipu_get_i2c_bus_id(int adapter_id)
+{
+	struct i2c_adapter *adapter;
+	char name[32];
+	int i = 0;
+
+	snprintf(name, sizeof(name), "i2c_designware.%d", adapter_id);
+	while ((adapter = i2c_get_adapter(i)) != NULL) {
+		struct device *parent = adapter->dev.parent;
+
+		if (parent && !strncmp(name, dev_name(parent), sizeof(name)))
+			return i;
+		i++;
+	}
+
+	/* Not found, should never happen! */
+	WARN_ON_ONCE(1);
+	return -1;
+}
+EXPORT_SYMBOL_GPL(ipu_get_i2c_bus_id);
+#endif
+
 static int ipu_buttress_clk_init(struct ipu_device *isp)
 {
 	struct ipu_buttress *b = &isp->buttress;
@@ -1342,6 +1373,15 @@ static int ipu_buttress_clk_init(struct ipu_device *isp)
 		return 0;
 
 	while (clkmap->clkdev_data.dev_id) {
+#ifdef I2C_WA
+		char *dev_id = kstrdup(clkmap->clkdev_data.dev_id, GFP_KERNEL);
+		int adapter_id = clkmap->clkdev_data.dev_id[0] - '0';
+		char *addr = strpbrk(clkmap->clkdev_data.dev_id, "-");
+		int bus_id = ipu_get_i2c_bus_id(adapter_id);
+
+		snprintf(dev_id, PAGE_SIZE, "%d-%s", bus_id, addr + 1);
+#endif
+
 		/*
 		 * Lookup table must be NULL terminated
 		 * CLKDEV_INIT(NULL, NULL, NULL)
@@ -1350,6 +1390,9 @@ static int ipu_buttress_clk_init(struct ipu_device *isp)
 			if (!strcmp(clkmap->platform_clock_name,
 				    clk_data[i].name)) {
 				clkmap->clkdev_data.clk = b->clk_sensor[i];
+#ifdef I2C_WA
+				clkmap->clkdev_data.dev_id = dev_id;
+#endif
 				clkdev_add(&clkmap->clkdev_data);
 				break;
 			}
diff --git a/drivers/media/pci/intel/ipu-buttress.h b/drivers/media/pci/intel/ipu-buttress.h
index 7c29db5..2c5e93a 100644
--- a/drivers/media/pci/intel/ipu-buttress.h
+++ b/drivers/media/pci/intel/ipu-buttress.h
@@ -132,5 +132,7 @@ ipu_buttress_ipc_send_bulk(struct ipu_device *isp,
 			   struct ipu_ipc_buttress_bulk_msg *msgs, u32 size);
 int ipu_buttress_psys_freq_get(void *data, u64 *val);
 int ipu_buttress_isys_freq_get(void *data, u64 *val);
-
+#ifdef I2C_WA
+int ipu_get_i2c_bus_id(int adapter_id);
+#endif /* I2C_WA */
 #endif /* IPU_BUTTRESS_H */
diff --git a/drivers/media/pci/intel/ipu-isys.c b/drivers/media/pci/intel/ipu-isys.c
index 6ce6bab..081d503 100644
--- a/drivers/media/pci/intel/ipu-isys.c
+++ b/drivers/media/pci/intel/ipu-isys.c
@@ -407,21 +407,32 @@ static int isys_register_ext_subdev(struct ipu_isys *isys,
 				    struct ipu_isys_subdev_info *sd_info,
 				    bool acpi_only)
 {
-	struct i2c_adapter *adapter =
-	    i2c_get_adapter(sd_info->i2c.i2c_adapter_id);
+	struct i2c_adapter *adapter;
 	struct v4l2_subdev *sd;
 	struct i2c_client *client;
 	int rval;
-
-	dev_info(&isys->adev->dev,
-		 "creating new i2c subdev for %s (address %2.2x, bus %d)",
-		 sd_info->i2c.board_info.type, sd_info->i2c.board_info.addr,
-		 sd_info->i2c.i2c_adapter_id);
-
-	if (!adapter) {
+       int bus;
+
+#ifdef I2C_WA
+       bus = ipu_get_i2c_bus_id(sd_info->i2c.i2c_adapter_id);
+       if (bus < 0) {
+               dev_err(&isys->adev->dev, "Failed to find adapter!");
+               return -ENOENT;
+       
+#else
+        bus = sd_info->i2c.i2c_adapter_id;
+#endif
+        adapter = i2c_get_adapter(bus);
+        if (!adapter) {
 		dev_warn(&isys->adev->dev, "can't find adapter\n");
 		return -ENOENT;
 	}
+
+        dev_info(&isys->adev->dev,
+                 "creating new i2c subdev for %s (address %2.2x, bus %d)",
+                 sd_info->i2c.board_info.type, sd_info->i2c.board_info.addr,
+                 bus);
+
 	if (sd_info->csi2) {
 		dev_info(&isys->adev->dev, "sensor device on CSI port: %d\n",
 			 sd_info->csi2->port);
@@ -483,6 +494,7 @@ static int isys_register_ext_subdev(struct ipu_isys *isys,
 		rval = -EINVAL;
 		goto skip_put_adapter;
 	}
+
 	if (!sd_info->csi2)
 		return 0;
 
diff --git a/drivers/media/pci/intel/ipu4/Makefile b/drivers/media/pci/intel/ipu4/Makefile
index 1278146..4545438 100644
--- a/drivers/media/pci/intel/ipu4/Makefile
+++ b/drivers/media/pci/intel/ipu4/Makefile
@@ -7,7 +7,7 @@ endif
 
 ifdef CONFIG_VIDEO_INTEL_IPU4
 ccflags-y += -DHAS_DUAL_CMD_CTX_SUPPORT=0
-ccflags-y += -DIPU_META_DATA_SUPPORT
+ccflags-y += -DIPU_META_DATA_SUPPORT -DI2C_WA
 
 intel-ipu4-objs				+= ../ipu.o \
 					   ../ipu-bus.o \
-- 
2.7.4

