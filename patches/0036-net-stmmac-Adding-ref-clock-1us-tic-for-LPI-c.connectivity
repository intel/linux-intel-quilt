From fde5add2259cdbcfb8b52932639e5ac3eb5d7568 Mon Sep 17 00:00:00 2001
From: Rusaimi Amira Ruslan <rusaimi.amira.rusaimi@intel.com>
Date: Fri, 9 Aug 2019 01:19:19 +0800
Subject: [PATCH 036/104] net: stmmac: Adding ref clock 1us tic for LPI cntr

Adding reference clock (1us tic) for all LPI timer.
This also enables all LPI counter.

Signed-off-by: Rusaimi Amira Ruslan <rusaimi.amira.rusaimi@intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/dwmac-generic.c |  9 +++++++++
 drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c    | 10 +++++++++-
 include/linux/stmmac.h                              |  1 +
 3 files changed, 19 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/dwmac-generic.c b/drivers/net/ethernet/stmicro/stmmac/dwmac-generic.c
index fad503820e04..620e4169ed50 100644
--- a/drivers/net/ethernet/stmicro/stmmac/dwmac-generic.c
+++ b/drivers/net/ethernet/stmicro/stmmac/dwmac-generic.c
@@ -15,6 +15,7 @@
 
 #include "stmmac.h"
 #include "stmmac_platform.h"
+#include "dwmac4.h"
 
 static int dwmac_generic_probe(struct platform_device *pdev)
 {
@@ -44,6 +45,7 @@ static int dwmac_generic_probe(struct platform_device *pdev)
 
 		/* Set default value for unicast filter entries */
 		plat_dat->unicast_filter_entries = 1;
+		plat_dat->eee_usecs_rate = plat_dat->clk_ptp_rate;
 	}
 
 	/* Custom initialisation (if needed) */
@@ -53,6 +55,13 @@ static int dwmac_generic_probe(struct platform_device *pdev)
 			goto err_remove_config_dt;
 	}
 
+	if (plat_dat->eee_usecs_rate > 0) {
+		u32 tx_lpi_usec;
+
+		tx_lpi_usec = (plat_dat->eee_usecs_rate / 1000000) - 1;
+		writel(tx_lpi_usec, stmmac_res.addr + GMAC_1US_TIC_COUNTER);
+	}
+
 	ret = stmmac_dvr_probe(&pdev->dev, plat_dat, &stmmac_res);
 	if (ret)
 		goto err_exit;
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c
index c78edfe334bb..60d8e4ef98a7 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_pci.c
@@ -15,6 +15,7 @@
 #include <linux/dmi.h>
 #include <linux/dwxpcs.h>
 #include "stmmac.h"
+#include "dwmac4.h"
 
 /*
  * This struct is used to associate PCI Function of MAC controller on a board,
@@ -215,7 +216,7 @@ static int intel_mgbe_common_data(struct pci_dev *pdev,
 	plat->axi->axi_blen[2] = 16;
 
 	plat->ptp_max_adj = plat->clk_ptp_rate;
-
+	plat->eee_usecs_rate = plat->clk_ptp_rate;
 	/* Set system clock */
 	plat->stmmac_clk = clk_register_fixed_rate(&pdev->dev,
 						   "stmmac-clk", NULL, 0,
@@ -646,6 +647,13 @@ static int stmmac_pci_probe(struct pci_dev *pdev,
 	memset(&res, 0, sizeof(res));
 	res.addr = pcim_iomap_table(pdev)[i];
 
+	if (plat->eee_usecs_rate > 0) {
+		u32 tx_lpi_usec;
+
+		tx_lpi_usec = (plat->eee_usecs_rate / 1000000) - 1;
+		writel(tx_lpi_usec, res.addr + GMAC_1US_TIC_COUNTER);
+	}
+
 	ret = stmmac_config_multi_msi(pdev, plat, &res);
 	if (!ret)
 		goto msi_done;
diff --git a/include/linux/stmmac.h b/include/linux/stmmac.h
index b2b7ff0491e7..870a6ba7e387 100644
--- a/include/linux/stmmac.h
+++ b/include/linux/stmmac.h
@@ -171,6 +171,7 @@ struct plat_stmmacenet_data {
 	struct clk *stmmac_clk;
 	struct clk *pclk;
 	struct clk *clk_ptp_ref;
+	unsigned int eee_usecs_rate;
 	unsigned int clk_ptp_rate;
 	unsigned int clk_ref_rate;
 	s32 ptp_max_adj;
-- 
2.17.1

