From ffd1b913eded646dae6411118d6f824cd3cdd1a7 Mon Sep 17 00:00:00 2001
From: "Tan, Raymond" <raymond.tan@intel.com>
Date: Mon, 25 Nov 2019 15:13:48 +0800
Subject: [PATCH 28/29] NET: m_can: m_can_pci: Program interrupt enable bit for
 CAN wrapper IP

Elkhart Lake CAN implementation involves a wrapper IP which has additional
registers to be programmed in order to enable interrupt, on top of
m_ttcan registers.

Signed-off-by: Tan, Raymond
---
 drivers/net/can/m_can/m_can_pci.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/drivers/net/can/m_can/m_can_pci.c b/drivers/net/can/m_can/m_can_pci.c
index 64147ec17694..d44b0ac19d6b 100644
--- a/drivers/net/can/m_can/m_can_pci.c
+++ b/drivers/net/can/m_can/m_can_pci.c
@@ -26,6 +26,7 @@
 #define M_CAN_MRAM_OFFSET		0x800
 
 #define M_CAN_CLOCK_FREQ_EHL		100000000
+#define CTL_CSR_INT_CTL_OFFSET		0x508
 
 struct m_can_pci_priv {
 	void __iomem *base;
@@ -139,6 +140,9 @@ static int m_can_pci_probe(struct pci_dev *pci,
 	if (ret)
 		goto err;
 
+	/* Enable interrupt control at CAN wrapper IP */
+	writel(0x1, base + CTL_CSR_INT_CTL_OFFSET);
+
 	pm_runtime_set_autosuspend_delay(dev, 1000);
 	pm_runtime_use_autosuspend(dev);
 	pm_runtime_put_noidle(dev);
@@ -156,10 +160,14 @@ static void m_can_pci_remove(struct pci_dev *pci)
 {
 	struct net_device *dev = pci_get_drvdata(pci);
 	struct m_can_classdev *mcan_class = netdev_priv(dev);
+	struct m_can_pci_priv *priv = mcan_class->device_data;
 
 	pm_runtime_forbid(&pci->dev);
 	pm_runtime_get_noresume(&pci->dev);
 
+	/* Disable interrupt control at CAN wrapper IP */
+	writel(0x0, priv->base + CTL_CSR_INT_CTL_OFFSET);
+
 	pci_free_irq_vectors(pci);
 	m_can_class_unregister(mcan_class);
 }
-- 
2.17.1

