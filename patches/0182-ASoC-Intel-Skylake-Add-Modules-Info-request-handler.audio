From aa6d07b023432e9e84b5d20f69e55e260f37423e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Amadeusz=20S=C5=82awi=C5=84ski?=
 <amadeuszx.slawinski@linux.intel.com>
Date: Wed, 7 Aug 2019 16:35:16 +0200
Subject: [PATCH 182/193] ASoC: Intel: Skylake: Add Modules Info request
 handler
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Module Info IPC allows to get module information from FW. It returns
count of modules from FW and external libraries, as well as information
about each of modules.

This will allow for further code refactors in order to remove code which
parses binary files, as there is no guarantee, that data will be kept in
positions we expect it to be.

Change-Id: I33628e6fe979554db84da9f6d30157434ce07c3d
Signed-off-by: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
Reviewed-on:
Tested-by: gkblditp <gkblditp@intel.com>
Reviewed-by: Rojewski, Cezary <cezary.rojewski@intel.com>
---
 sound/soc/intel/skylake/skl-sst-ipc.c | 23 ++++++++++++
 sound/soc/intel/skylake/skl-sst-ipc.h | 53 +++++++++++++++++++++++++++
 2 files changed, 76 insertions(+)

diff --git a/sound/soc/intel/skylake/skl-sst-ipc.c b/sound/soc/intel/skylake/skl-sst-ipc.c
index b12fe4e669e5..6678033c7e3d 100644
--- a/sound/soc/intel/skylake/skl-sst-ipc.c
+++ b/sound/soc/intel/skylake/skl-sst-ipc.c
@@ -1475,6 +1475,29 @@ int skl_ipc_hw_cfg_get(struct sst_generic_ipc *ipc, struct skl_hw_cfg *cfg)
 }
 EXPORT_SYMBOL_GPL(skl_ipc_hw_cfg_get);
 
+int skl_ipc_modules_info_get(struct sst_generic_ipc *ipc,
+		struct skl_modules_info **modules_info)
+{
+	struct skl_ipc_large_config_msg msg = {0};
+	size_t bytes = 0;
+	u32 *payload = NULL;
+	int ret;
+
+	msg.module_id = 0;
+	msg.instance_id = 0;
+	msg.large_param_id = SKL_BASEFW_MODULES_INFO;
+
+	ret = skl_ipc_get_large_config(ipc, &msg, &payload, &bytes);
+	if (ret)
+		goto exit;
+
+	*modules_info = (struct skl_modules_info *)payload;
+
+exit:
+	return ret;
+}
+EXPORT_SYMBOL_GPL(skl_ipc_modules_info_get);
+
 unsigned int __kfifo_fromio_locked(struct kfifo *fifo,
 		const void __iomem *src,
 		unsigned int len, spinlock_t *lock)
diff --git a/sound/soc/intel/skylake/skl-sst-ipc.h b/sound/soc/intel/skylake/skl-sst-ipc.h
index 9136417919d6..846a99c9d3f1 100644
--- a/sound/soc/intel/skylake/skl-sst-ipc.h
+++ b/sound/soc/intel/skylake/skl-sst-ipc.h
@@ -438,6 +438,7 @@ enum skl_basefw_runtime_param {
 	SKL_BASEFW_ENABLE_LOGS = 6,
 	SKL_BASEFW_FIRMWARE_CONFIG = 7,
 	SKL_BASEFW_HARDWARE_CONFIG = 8,
+	SKL_BASEFW_MODULES_INFO = 9,
 	SKL_BASEFW_SYSTEM_TIME = 20,
 };
 
@@ -547,6 +548,55 @@ struct skl_hw_cfg {
 	u32 ebb_size_bytes;
 };
 
+struct _skl_module_type {
+	u32 load_type:4;
+	u32 auto_start:1;
+	u32 domain_ll:1;
+	u32 domain_dp:1;
+	u32 lib_code:1;
+	u32 rsvd:24;
+} __packed;
+
+struct skl_segment_flags {
+	u32 contents:1;
+	u32 alloc:1;
+	u32 load:1;
+	u32 readonly:1;
+	u32 code:1;
+	u32 data:1;
+	u32 rsvd_1:2;
+	u32 type:4;
+	u32 rsvd_2:4;
+	u32 length:16;
+} __packed;
+
+struct skl_segment_desc {
+	struct skl_segment_flags flags;
+	u32 v_base_addr;
+	u32 file_offset;
+} __packed;
+
+struct skl_module_entry {
+	u16 module_id;
+	u16 state_flags;
+	u8 name[8];
+	guid_t uuid;
+	struct _skl_module_type type;
+	u8 hash[32];
+	u32 entry_point;
+	u16 cfg_offset;
+	u16 cfg_count;
+	u32 affinity_mask;
+	u16 instance_max_count;
+	u16 instance_bss_size;
+	struct skl_segment_desc segments[3];
+} __packed;
+
+struct skl_modules_info {
+	u32 count;
+	struct skl_module_entry module_entry[0];
+} __packed;
+
 struct skl_sys_time {
 	u32 val_l;
 	u32 val_u;
@@ -724,6 +774,9 @@ void skl_ipc_set_fw_cfg(struct sst_generic_ipc *ipc, u8 instance_id,
 int skl_ipc_fw_cfg_get(struct sst_generic_ipc *ipc, struct skl_fw_cfg *cfg);
 int skl_ipc_hw_cfg_get(struct sst_generic_ipc *ipc, struct skl_hw_cfg *cfg);
 
+int skl_ipc_modules_info_get(struct sst_generic_ipc *ipc,
+		struct skl_modules_info **modules_info);
+
 int skl_probe_init_module(struct skl_dev *skl, size_t buffer_size);
 int skl_probe_delete_module(struct skl_dev *skl);
 int skl_probe_get_dma(struct skl_dev *skl,
-- 
2.17.1

