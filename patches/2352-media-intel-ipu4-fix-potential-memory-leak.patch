From 0690fd11fc382c847ce4ac3444bf7748dcac4865 Mon Sep 17 00:00:00 2001
From: Chen Meng J <meng.j.chen@intel.com>
Date: Mon, 26 Aug 2019 17:38:48 +0800
Subject: [PATCH 2352/2367] media: intel-ipu4: fix potential memory leak

Message for Open Source:
fix potential memory leak

Change-Id: If560bc7e241577ec3f1d4f872f655377625db75d
Tracked-On: #PKT-2935
Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
Signed-off-by: Meng Wei <wei.meng@intel.com>
Signed-off-by: Ong Yang Yang <yang.yangx.ong@intel.com>
---
 drivers/media/pci/intel/ipu-buttress.c | 98 ++++++++++++++++------------------
 drivers/media/pci/intel/ipu-buttress.h |  4 +-
 drivers/media/pci/intel/ipu4/Makefile  |  2 +-
 3 files changed, 48 insertions(+), 56 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-buttress.c b/drivers/media/pci/intel/ipu-buttress.c
index aad5681..5dd6507 100644
--- a/drivers/media/pci/intel/ipu-buttress.c
+++ b/drivers/media/pci/intel/ipu-buttress.c
@@ -1260,25 +1260,13 @@ static void ipu_buttress_read_psys_fused_freqs(struct ipu_device *isp)
 	fused_freq->efficient_freq = efficient_ratio * BUTTRESS_PS_FREQ_STEP;
 }
 
-#ifdef I2C_WA
+#ifdef I2C_DYNAMIC
+static LIST_HEAD(clkmap_dynamic);
 
-static struct ipu_isys_clk_mapping *clkmap_dynamic;
-
-static int ipu_clk_mapping_num(struct ipu_isys_clk_mapping *clkmap)
-{
-	int num = 0;
-
-	if (!clkmap)
-		return 0;
-
-	while (clkmap->clkdev_data.dev_id) {
-		num++;
-		clkmap++;
-	}
-
-	/* include the NULL terminated */
-	return num + 1;
-}
+struct clk_dynamic {
+	struct list_head node;
+	struct clk_lookup *clk_data;
+};
 
 /*
  * The dev_id was hard code in platform data, as i2c bus number
@@ -1391,21 +1379,8 @@ static int ipu_buttress_clk_init(struct ipu_device *isp)
 	if (!clkmap)
 		return 0;
 
-#ifdef I2C_WA
-	clkmap_dynamic = devm_kzalloc(&isp->pdev->dev,
-		ipu_clk_mapping_num(clkmap) * sizeof(*clkmap_dynamic), GFP_KERNEL);
-	if (!clkmap_dynamic) {
-		rval = -ENOMEM;
-		goto err;
-	}
-	memcpy(clkmap_dynamic, clkmap,
-	       ipu_clk_mapping_num(clkmap) * sizeof(*clkmap_dynamic));
-
-	clkmap = clkmap_dynamic;
-#endif
-
 	while (clkmap->clkdev_data.dev_id) {
-#ifdef I2C_WA
+#ifdef I2C_DYNAMIC
 		char *dev_id = kstrdup(clkmap->clkdev_data.dev_id, GFP_KERNEL);
 		int adapter_id = clkmap->clkdev_data.dev_id[0] - '0';
 		char *addr = strpbrk(clkmap->clkdev_data.dev_id, "-");
@@ -1421,11 +1396,32 @@ static int ipu_buttress_clk_init(struct ipu_device *isp)
 		for (i = 0; i < IPU_BUTTRESS_NUM_OF_SENS_CKS; i++) {
 			if (!strcmp(clkmap->platform_clock_name,
 				    clk_data[i].name)) {
+#ifdef I2C_DYNAMIC
+				struct clk_dynamic *clk = NULL;
+				struct clk_lookup *clk_data = NULL;
+
+				clk = kzalloc(sizeof(*clk), GFP_KERNEL);
+				if (!clk) {
+					rval = -ENOMEM;
+					goto err;
+				}
+				clk_data = kzalloc(sizeof(*clk_data), GFP_KERNEL);
+				if (!clk_data) {
+					kfree(clk);
+					rval = -ENOMEM;
+					goto err;
+				}
+
+				clk_data->dev_id = dev_id;
+				clk_data->clk = b->clk_sensor[i];
+				clk->clk_data = clk_data;
+				clkdev_add(clk_data);
+
+				list_add_tail(&clk->node, &clkmap_dynamic);
+#else
 				clkmap->clkdev_data.clk = b->clk_sensor[i];
-#ifdef I2C_WA
-				clkmap->clkdev_data.dev_id = dev_id;
-#endif
 				clkdev_add(&clkmap->clkdev_data);
+#endif
 				break;
 			}
 		}
@@ -1449,8 +1445,20 @@ static void ipu_buttress_clk_exit(struct ipu_device *isp)
 {
 	struct ipu_buttress *b = &isp->buttress;
 	int i;
-#ifdef I2C_WA
-	struct ipu_isys_clk_mapping *clkmap;
+#ifdef I2C_DYNAMIC
+	struct clk_dynamic *clk = NULL;
+	const char *dev_id = NULL;
+#endif
+
+#ifdef I2C_DYNAMIC
+	while (!list_empty(&clkmap_dynamic)) {
+		clk = list_last_entry(&clkmap_dynamic, struct clk_dynamic, node);
+		dev_id = clk->clk_data->dev_id;
+		clkdev_drop(clk->clk_data);
+		kfree(dev_id);
+		list_del(&clk->node);
+		kfree(clk);
+	}
 #endif
 
 	/* It is safe to call clk_unregister with null pointer */
@@ -1459,22 +1467,6 @@ static void ipu_buttress_clk_exit(struct ipu_device *isp)
 
 	for (i = 0; i < ARRAY_SIZE(ipu_buttress_sensor_pll_data); i++)
 		clk_unregister(b->pll_sensor[i]);
-
-#ifdef I2C_WA
-	if (!clkmap_dynamic)
-		return;
-
-	clkmap = clkmap_dynamic;
-	while (clkmap->clkdev_data.dev_id) {
-		clkdev_drop(&clkmap->clkdev_data);
-		kfree(clkmap->clkdev_data.dev_id);
-		clkmap->clkdev_data.dev_id = NULL;
-		clkmap++;
-	}
-
-	devm_kfree(&isp->pdev->dev, clkmap_dynamic);
-	clkmap_dynamic = NULL;
-#endif
 }
 
 int ipu_buttress_tsc_read(struct ipu_device *isp, u64 *val)
diff --git a/drivers/media/pci/intel/ipu-buttress.h b/drivers/media/pci/intel/ipu-buttress.h
index 2c5e93a..f798881 100644
--- a/drivers/media/pci/intel/ipu-buttress.h
+++ b/drivers/media/pci/intel/ipu-buttress.h
@@ -132,7 +132,7 @@ ipu_buttress_ipc_send_bulk(struct ipu_device *isp,
 			   struct ipu_ipc_buttress_bulk_msg *msgs, u32 size);
 int ipu_buttress_psys_freq_get(void *data, u64 *val);
 int ipu_buttress_isys_freq_get(void *data, u64 *val);
-#ifdef I2C_WA
+#ifdef I2C_DYNAMIC
 int ipu_get_i2c_bus_id(int adapter_id);
-#endif /* I2C_WA */
+#endif /* I2C_DYNAMIC */
 #endif /* IPU_BUTTRESS_H */
diff --git a/drivers/media/pci/intel/ipu4/Makefile b/drivers/media/pci/intel/ipu4/Makefile
index 4545438..a0e41f9 100644
--- a/drivers/media/pci/intel/ipu4/Makefile
+++ b/drivers/media/pci/intel/ipu4/Makefile
@@ -7,7 +7,7 @@ endif
 
 ifdef CONFIG_VIDEO_INTEL_IPU4
 ccflags-y += -DHAS_DUAL_CMD_CTX_SUPPORT=0
-ccflags-y += -DIPU_META_DATA_SUPPORT -DI2C_WA
+ccflags-y += -DIPU_META_DATA_SUPPORT -DI2C_DYNAMIC
 
 intel-ipu4-objs				+= ../ipu.o \
 					   ../ipu-bus.o \
-- 
2.7.4

