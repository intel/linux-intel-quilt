From d10739647289ba040854a2336eeaba311f475aa9 Mon Sep 17 00:00:00 2001
From: Quentin Perret <quentin.perret@arm.com>
Date: Tue, 10 Jul 2018 15:44:09 +0100
Subject: [PATCH 411/429] ANDROID: cpufreq/schedutil: Select frequency using
 util_avg for RT

Schedutil always requests max frequency whenever a RT task is running.
Now that we have a better estimate of the utilization of RT runqueues,
it is possible to make a less conservative decision and scale frequency
according to the needs of the RT tasks.

To do so, protect the RT-go-to-max code with a new sched_feature.
The sched_feature is disabled by default, hence favoring energy savings
as required in mobile environments.

Signed-off-by: Quentin Perret <quentin.perret@arm.com>
Change-Id: Ic9f01c8703d4f843addaa0d684012a422fe9f3b8
---
 kernel/sched/cpufreq_schedutil.c | 3 ++-
 kernel/sched/features.h          | 5 +++++
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/kernel/sched/cpufreq_schedutil.c b/kernel/sched/cpufreq_schedutil.c
index 645f54a0c2dc..b7bc4fe481fe 100644
--- a/kernel/sched/cpufreq_schedutil.c
+++ b/kernel/sched/cpufreq_schedutil.c
@@ -206,7 +206,8 @@ unsigned long schedutil_freq_util(int cpu, unsigned long util_cfs,
 
 	max = arch_scale_cpu_capacity(NULL, cpu);
 
-	if (type == FREQUENCY_UTIL && rt_rq_is_runnable(&rq->rt))
+	if (sched_feat(SUGOV_RT_MAX_FREQ) && type == FREQUENCY_UTIL &&
+						rt_rq_is_runnable(&rq->rt))
 		return max;
 
 	/*
diff --git a/kernel/sched/features.h b/kernel/sched/features.h
index 2c33917b2067..fb995c5f69ba 100644
--- a/kernel/sched/features.h
+++ b/kernel/sched/features.h
@@ -111,3 +111,8 @@ SCHED_FEAT(FIND_BEST_TARGET, true)
  *   those tasks through the mainline slow path.
  */
 SCHED_FEAT(EAS_PREFER_IDLE, true)
+
+/*
+ * Request max frequency from schedutil whenever a RT task is running.
+ */
+SCHED_FEAT(SUGOV_RT_MAX_FREQ, false)
-- 
2.19.1

