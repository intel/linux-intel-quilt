From 2a9fc94ed5cd0f8d8f54e7537337bdc1567cf4e9 Mon Sep 17 00:00:00 2001
From: "Shahidan, Muhammad Shahmil" <muhammad.shahmil.shahidan@intel.com>
Date: Mon, 6 Oct 2025 10:01:19 +0800
Subject: [PATCH 11/11] ipu7: media: Fix allyesconfig & allmodconfig

Remove IPU6 config in Kconfig & Makefile. Remove declared but
unused functions. Update Kconfig to block arm64 build.

Signed-off-by: Shahidan, Muhammad Shahmil<muhammad.shahmil.shahidan@intel.com>
---
 drivers/media/i2c/Kconfig                |   1 +
 drivers/media/i2c/isx031.c               |   4 +-
 drivers/media/i2c/max9x/max96724.c       | 192 -----------------------
 drivers/media/pci/intel/Kconfig          |   1 -
 drivers/media/pci/intel/Makefile         |   1 -
 drivers/media/pci/intel/ipu7/ipu7-isys.c |   3 +-
 drivers/media/platform/intel/ipu-acpi.c  |   1 -
 7 files changed, 5 insertions(+), 198 deletions(-)

diff --git a/drivers/media/i2c/Kconfig b/drivers/media/i2c/Kconfig
index f65a2f6118ea..d7e8a0b986a3 100644
--- a/drivers/media/i2c/Kconfig
+++ b/drivers/media/i2c/Kconfig
@@ -289,6 +289,7 @@ config VIDEO_ISX031
 config VIDEO_MAX9X
 	tristate "MAX9X serdes support"
 	depends on VIDEO_DEV && I2C
+	depends on VIDEO_INTEL_IPU7 && VIDEO_INTEL_IPU_USE_PLATFORMDATA
 	select VIDEO_V4L2_SUBDEV_API
 	depends on MEDIA_CAMERA_SUPPORT
 	help
diff --git a/drivers/media/i2c/isx031.c b/drivers/media/i2c/isx031.c
index e7d9e417745a..ddc3e512efa4 100644
--- a/drivers/media/i2c/isx031.c
+++ b/drivers/media/i2c/isx031.c
@@ -769,11 +769,11 @@ static int isx031_probe(struct i2c_client *client)
 		return ret;
 	}
 
-	if (isx031->platform_data && isx031->platform_data->suffix)
+	if (isx031->platform_data)
 		snprintf(isx031->sd.name, sizeof(isx031->sd.name), "isx031 %s",
 			 isx031->platform_data->suffix);
 
-	if (isx031->platform_data && isx031->platform_data->lanes)
+	if (isx031->platform_data)
 		isx031->lanes = isx031->platform_data->lanes;
 
 	mutex_init(&isx031->mutex);
diff --git a/drivers/media/i2c/max9x/max96724.c b/drivers/media/i2c/max9x/max96724.c
index 1c1059c0c9de..b214e1176963 100644
--- a/drivers/media/i2c/max9x/max96724.c
+++ b/drivers/media/i2c/max9x/max96724.c
@@ -64,8 +64,6 @@ static int max96724_enable_serial_link(struct max9x_common *common, unsigned int
 static int max96724_set_remote_control_channel_enabled(struct max9x_common *common, unsigned int link_id, bool enabled);
 static int max96724_select_serial_link(struct max9x_common *common, unsigned int link);
 static int max96724_deselect_serial_link(struct max9x_common *common, unsigned int link);
-static int max96724_enable_native_frame_sync(struct max9x_common *common);
-static int max96724_enable_gpio_frame_sync(struct max9x_common *common);
 static int max96724_disable_line_fault(struct max9x_common *common, unsigned int line);
 static int max96724_enable_line_fault(struct max9x_common *common, unsigned int line);
 static int max96724_set_line_fault(struct max9x_common *common, unsigned int line, bool enable);
@@ -877,196 +875,6 @@ static struct max9x_serial_link_ops max96724_serial_link_ops = {
 	.get_locked = max96724_get_serial_link_lock,
 };
 
-static int max96724_enable_native_frame_sync(struct max9x_common *common)
-{
-	struct device_node *node = common->dev->of_node;
-	struct device *dev = common->dev;
-	struct regmap *map = common->map;
-	int ret, i;
-	unsigned int val;
-	enum max96724_fsync_pin pin;
-	unsigned int fsync_freq;
-	unsigned int pclk_freq;
-	unsigned int fsync_period;
-	unsigned int fsync_tx_id;
-	bool fsync_master;
-
-	if (!of_property_read_bool(node, "frame-sync-enable")) {
-		dev_info(dev, "Native frame sync not enabled");
-		return regmap_write(map, MAX96724_FSYNC_0,
-				MAX9X_FIELD_PREP(MAX96724_FSYNC_MODE_FIELD,
-					MAX96724_FSYNC_GEN_OFF_GPIO_OFF));
-	}
-
-	fsync_master = of_property_read_bool(node, "frame-sync-master");
-	if (fsync_master)
-		dev_dbg(dev, "Frame sync master mode");
-	else
-		dev_dbg(dev, "Frame sync slave mode");
-
-	ret = of_property_read_u32(node, "frame-sync-pin", &val);
-	if (ret) {
-		dev_err(dev, "Missing property: frame-sync-pin");
-		return ret;
-	}
-
-	// check value of pin
-	switch (val) {
-	case MAX96724_FSYNC_PIN_MFP0:
-	case MAX96724_FSYNC_PIN_MFP7:
-		pin = val;
-		break;
-
-	default:
-		dev_err(dev, "Invalid frame-sync-pin");
-		return -EINVAL;
-	};
-
-	ret = of_property_read_u32(node, "frame-sync-tx-id", &val);
-	if (ret) {
-		dev_err(dev, "Missing property: frame-sync-tx-id");
-		return -EINVAL;
-	}
-
-	// check value of frame-sync-tx-id
-	fsync_tx_id = val & 0x1F;
-	if (fsync_tx_id != val)
-		dev_warn(dev, "Truncated frame-sync-tx-id to 5 bits!");
-
-	ret = of_property_read_u32(node, "pclk-freq", &pclk_freq);
-	if (ret) {
-		dev_err(dev, "Missing property: pclk-freq");
-		return -EINVAL;
-	}
-
-	ret = of_property_read_u32(node, "frame-sync-freq", &fsync_freq);
-	if (ret) {
-		dev_err(dev, "Missing property: frame-sync-freq;");
-		return -EINVAL;
-	}
-
-	// Reset register to known state
-	ret = regmap_write(map, MAX96724_FSYNC_15, 0xDF);
-	if (ret) {
-		dev_dbg(dev, "Failed to reset FSYNC state");
-		return ret;
-	}
-
-	// Disable AUTO FS links
-	val = MAX9X_FIELD_PREP(MAX96724_FS_GPIO_TYPE_FIELD, MAX96724_FS_GPIO_TYPE_GMSL2) |
-		MAX9X_FIELD_PREP(MAX96724_FS_USE_XTAL_FIELD, true) |
-		MAX9X_FIELD_PREP(MAX96724_AUTO_FS_LINKS_FIELD, 0);
-	// Enable all FS links manually
-	for (i = 0; i < 4; ++i)
-		val |= MAX9X_FIELD_PREP(MAX96724_FS_LINK_FIELD(i), 1);
-
-	ret = regmap_write(map, MAX96724_FSYNC_15, val);
-	if (ret) {
-		dev_dbg(dev, "Failed to write FSYNC_15");
-		return ret;
-	}
-
-	// Calculate value of FSYNC_PERIOD registers
-	// FSYNC_PERIOD = number of pclk cycles per fsync period
-	fsync_period = pclk_freq / fsync_freq;
-	dev_dbg(dev, "Calculated FSYNC_PERIOD: 0x%06x", fsync_period);
-
-	for (val = MAX96724_FSYNC_5; val <= MAX96724_FSYNC_7; ++val) {
-		ret = regmap_write(map, val, (uint8_t) fsync_period);
-		if (ret) {
-			dev_err(dev, "Failed to write FSYNC_PERIOD registers to 0x%03x", val);
-			return ret;
-		}
-
-		fsync_period = fsync_period >> 8;
-	}
-
-	ret = regmap_write(map, MAX96724_FSYNC_17,
-			MAX9X_FIELD_PREP(MAX96724_FSYNC_TX_ID_FIELD, fsync_tx_id) |
-			MAX9X_FIELD_PREP(MAX96724_FSYNC_ERR_THR_FIELD, 0));
-	if (ret) {
-		dev_err(dev, "Failed to set FSYNC_17");
-		return ret;
-	}
-
-	ret = regmap_write(map, MAX96724_FSYNC_0,
-			MAX9X_FIELD_PREP(MAX96724_FSYNC_OUT_PIN_FIELD, pin) |
-			MAX9X_FIELD_PREP(MAX96724_EN_VS_GEN_FIELD, 0) |
-			MAX9X_FIELD_PREP(MAX96724_FSYNC_MODE_FIELD,
-			(fsync_master ? MAX96724_FSYNC_GEN_ON_GPIO_OUTPUT : MAX96724_FSYNC_GEN_OFF_GPIO_INPUT)) |
-			MAX9X_FIELD_PREP(MAX96724_FSYNC_METH_FIELD, MAX96724_FSYNC_METHOD_MANUAL));
-
-	return 0;
-}
-
-static int max96724_enable_gpio_frame_sync(struct max9x_common *common)
-{
-	struct device_node *node = common->dev->of_node;
-	struct device *dev = common->dev;
-	struct regmap *map = common->map;
-
-	u32 fsync_gpios[MAX96724_NUM_GPIOS];
-	int num_fsync_gpios;
-	int i, gpio, gpio_tx_val, ret;
-
-	// Clean up any previous values in the event the chip was not reset
-	// or GPIO forwarding needs to be toggled off
-	dev_dbg(dev, "Setting GPIO registers to default value");
-	for (i = 0; i < MAX96724_NUM_GPIOS; i++) {
-		// Default values per the datasheet
-		TRY(ret, regmap_write(map, MAX96724_GPIO_REG(gpio), (BIT(7) | BIT(0))));
-
-		// Link A register has different fields from Links B, C, D
-		TRY(ret, regmap_write(map, MAX96724_GPIO_A_REG(gpio), (BIT(7) | BIT(5) | i)));
-		TRY(ret, regmap_write(map, MAX96724_GPIO_B_REG(gpio), i));
-		TRY(ret, regmap_write(map, MAX96724_GPIO_C_REG(gpio), i));
-		TRY(ret, regmap_write(map, MAX96724_GPIO_D_REG(gpio), i));
-	}
-
-	// Read DT to find fsync GPIOs
-	ret = of_property_read_variable_u32_array(node, "frame-sync-ports",
-			fsync_gpios, 0, MAX96724_NUM_GPIOS);
-
-	if (ret == -ENODATA || ret == -EINVAL) {
-		dev_dbg(dev, "No frame sync GPIOs specified in DT");
-		return 0;
-	}
-
-	if (ret < 0) {
-		dev_err(dev, "Failed to parse DT frame-sync-ports, error %d", ret);
-		return ret;
-	}
-
-	num_fsync_gpios = ret;
-	dev_info(dev, "Enabling %d frame sync GPIOs", num_fsync_gpios);
-
-	// Configure MAX96724 to forward specified GPIOs
-	for (i = 0; i < num_fsync_gpios; i++) {
-		gpio = fsync_gpios[i];
-
-		if (gpio >= MAX96724_NUM_GPIOS) {
-			dev_warn(dev, "Skipping invalid GPIO %d in DT", gpio);
-			continue;
-		}
-
-		// See: MAX96724 Users Guide "Configuring GPIO forwarding"
-
-		// Enable GPIO for transmission
-		TRY(ret, regmap_write(map, MAX96724_GPIO_REG(gpio),
-			MAX96724_GPIO_RES_CFG | MAX96724_GPIO_TX_ENABLE | MAX96724_GPIO_OUTDRV_DISABLE));
-
-		// Configure transmission registers on Links A-D.
-		gpio_tx_val = MAX96724_GPIO_PUSH_PULL | gpio;
-
-		TRY(ret, regmap_write(map, MAX96724_GPIO_A_REG(gpio), gpio_tx_val));
-		TRY(ret, regmap_write(map, MAX96724_GPIO_B_REG(gpio), gpio_tx_val));
-		TRY(ret, regmap_write(map, MAX96724_GPIO_C_REG(gpio), gpio_tx_val));
-		TRY(ret, regmap_write(map, MAX96724_GPIO_D_REG(gpio), gpio_tx_val));
-	}
-
-	return 0;
-}
-
 static int max96724_disable_line_fault(struct max9x_common *common, unsigned int line)
 {
 	return max96724_set_line_fault(common, line, false);
diff --git a/drivers/media/pci/intel/Kconfig b/drivers/media/pci/intel/Kconfig
index 948cda08fff5..a92a7fabeac9 100644
--- a/drivers/media/pci/intel/Kconfig
+++ b/drivers/media/pci/intel/Kconfig
@@ -1,7 +1,6 @@
 # SPDX-License-Identifier: GPL-2.0-only
 
 source "drivers/media/pci/intel/ipu3/Kconfig"
-source "drivers/media/pci/intel/ipu6/Kconfig"
 source "drivers/media/pci/intel/ipu7/Kconfig"
 source "drivers/media/pci/intel/ivsc/Kconfig"
 
diff --git a/drivers/media/pci/intel/Makefile b/drivers/media/pci/intel/Makefile
index ff0fea13422d..b022340db8ba 100644
--- a/drivers/media/pci/intel/Makefile
+++ b/drivers/media/pci/intel/Makefile
@@ -5,5 +5,4 @@
 obj-$(CONFIG_IPU_BRIDGE) += ipu-bridge.o
 obj-y	+= ipu3/
 obj-y	+= ivsc/
-obj-$(CONFIG_VIDEO_INTEL_IPU6)	+= ipu6/
 obj-$(CONFIG_VIDEO_INTEL_IPU7)	+= ipu7/
diff --git a/drivers/media/pci/intel/ipu7/ipu7-isys.c b/drivers/media/pci/intel/ipu7/ipu7-isys.c
index e5ba50142a1a..44e860d3db24 100644
--- a/drivers/media/pci/intel/ipu7/ipu7-isys.c
+++ b/drivers/media/pci/intel/ipu7/ipu7-isys.c
@@ -517,6 +517,7 @@ static void isys_tpg_unregister_subdevices(struct ipu7_isys *isys)
 	isys->tpg = NULL;
 }
 
+/*
 static int isys_tpg_register_subdevices(struct ipu7_isys *isys)
 {
 	const struct ipu7_isys_internal_tpg_pdata *tpg_pdata =
@@ -577,7 +578,7 @@ static int isys_tpg_create_media_links(struct ipu7_isys *isys)
 
 	return 0;
 }
-
+*/
 #endif
 
 #if IS_ENABLED(CONFIG_INTEL_IPU7_ACPI)
diff --git a/drivers/media/platform/intel/ipu-acpi.c b/drivers/media/platform/intel/ipu-acpi.c
index deed3bba52bb..c254c8299930 100644
--- a/drivers/media/platform/intel/ipu-acpi.c
+++ b/drivers/media/platform/intel/ipu-acpi.c
@@ -191,7 +191,6 @@ static int ipu_acpi_test(struct device *dev, void *priv)
 
 int ipu_get_acpi_devices(void **spdata)
 {
-	struct ipu_i2c_helper helper = {0};
 	int rval;
 	struct ipu7_isys_subdev_pdata *ptr = NULL;
 
-- 
2.43.0

