From 9df5257cac2c7f915f47b9c9462cdc1ab91ce07c Mon Sep 17 00:00:00 2001
From: Cezary Rojewski <cezary.rojewski@intel.com>
Date: Sat, 6 Apr 2019 21:20:31 +0200
Subject: [PATCH 157/193] ASoC: Intel: Skylake: Implement debugfs trace
 consumer

Define trace file for SKL debugfs and its file operations which cover FW
logging feature. Once trace file is opened, any incoming logs will be
consumed and copied into provided buffer. Kernel fifo is filled each time
LOG_BUFFER_STATUS notification from FW arrives - notifies driver about
new portion of data being availble for copy from SRAM2.

Change-Id: I98f0fdc36e1b5be1d06410a3a777444f63be2645
Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
Reviewed-on:
Reviewed-by: Slawinski, AmadeuszX <amadeuszx.slawinski@intel.com>
---
 sound/soc/intel/skylake/skl-debug.c    | 76 ++++++++++++++++++++++++++
 sound/soc/intel/skylake/skl-messages.c |  1 +
 sound/soc/intel/skylake/skl.h          |  1 +
 3 files changed, 78 insertions(+)

diff --git a/sound/soc/intel/skylake/skl-debug.c b/sound/soc/intel/skylake/skl-debug.c
index e82d10d11c11..9f1fcd0d16c8 100644
--- a/sound/soc/intel/skylake/skl-debug.c
+++ b/sound/soc/intel/skylake/skl-debug.c
@@ -5,6 +5,7 @@
  *  Copyright (C) 2016-17 Intel Corp
  */
 
+#include <linux/sched/signal.h>
 #include <linux/pci.h>
 #include <linux/debugfs.h>
 #include <uapi/sound/skl-tplg-interface.h>
@@ -461,6 +462,78 @@ static const struct file_operations ppoints_discnt_fops = {
 	.llseek = default_llseek,
 };
 
+static int trace_open(struct inode *inode, struct file *file)
+{
+	struct skl_debug *d = inode->i_private;
+	struct skl_dev *skl = d->skl;
+	int ret;
+
+	ret = kfifo_alloc(&skl->trace_fifo, PAGE_SIZE, GFP_KERNEL);
+	if (ret < 0)
+		return ret;
+
+	pm_runtime_get_sync(skl->dev);
+
+	ret = skl_system_time_set(&skl->ipc);
+	if (ret < 0)
+		goto err;
+
+	file->private_data = d;
+	return 0;
+
+err:
+	kfifo_free(&skl->trace_fifo);
+	pm_runtime_mark_last_busy(skl->dev);
+	pm_runtime_put_autosuspend(skl->dev);
+
+	return ret;
+}
+
+static ssize_t trace_read(struct file *file,
+		char __user *to, size_t count, loff_t *ppos)
+{
+	struct skl_debug *d = file->private_data;
+	struct skl_dev *skl = d->skl;
+	struct kfifo *fifo = &skl->trace_fifo;
+	unsigned int copied;
+
+	count = kfifo_len(fifo);
+	if (!count) {
+		DEFINE_WAIT(wait);
+
+		prepare_to_wait(&skl->trace_waitq, &wait, TASK_INTERRUPTIBLE);
+		if (!signal_pending(current))
+			schedule();
+		finish_wait(&skl->trace_waitq, &wait);
+
+		count = kfifo_len(fifo);
+	}
+
+	if (kfifo_to_user(fifo, to, count, &copied))
+		return -EFAULT;
+	*ppos += count;
+	return count;
+}
+
+static int trace_release(struct inode *inode, struct file *file)
+{
+	struct skl_debug *d = file->private_data;
+	struct skl_dev *skl = d->skl;
+
+	kfifo_free(&skl->trace_fifo);
+	pm_runtime_mark_last_busy(skl->dev);
+	pm_runtime_put_autosuspend(skl->dev);
+
+	return 0;
+}
+
+static const struct file_operations trace_fops = {
+	.open = trace_open,
+	.read = trace_read,
+	.llseek = default_llseek,
+	.release = trace_release,
+};
+
 static int skl_debugfs_init_ipc(struct skl_debug *d)
 {
 	if (!debugfs_create_file("injection_dma", 0444,
@@ -472,6 +545,9 @@ static int skl_debugfs_init_ipc(struct skl_debug *d)
 	if (!debugfs_create_file("probe_points_disconnect", 0200,
 			d->ipc, d, &ppoints_discnt_fops))
 		return -EIO;
+	if (!debugfs_create_file("trace", 0444,
+			d->ipc, d, &trace_fops))
+		return -EIO;
 
 	return 0;
 }
diff --git a/sound/soc/intel/skylake/skl-messages.c b/sound/soc/intel/skylake/skl-messages.c
index 2703914c1e79..bff5c053e5ef 100644
--- a/sound/soc/intel/skylake/skl-messages.c
+++ b/sound/soc/intel/skylake/skl-messages.c
@@ -162,6 +162,7 @@ int skl_init_dsp(struct skl_dev *skl, struct sst_pdata *pdata)
 	INIT_LIST_HEAD(&skl->module_list);
 	INIT_LIST_HEAD(&skl->notify_kctls);
 	INIT_LIST_HEAD(&skl->cfg.dmactrl_list);
+	init_waitqueue_head(&skl->trace_waitq);
 	init_waitqueue_head(&skl->mod_load_wait);
 
 	pdata->id = skl->pci->device;
diff --git a/sound/soc/intel/skylake/skl.h b/sound/soc/intel/skylake/skl.h
index 2022de2180ee..ea9555a23c12 100644
--- a/sound/soc/intel/skylake/skl.h
+++ b/sound/soc/intel/skylake/skl.h
@@ -201,6 +201,7 @@ struct skl_dev {
 	/* firmware logging */
 	struct kfifo trace_fifo;
 	spinlock_t trace_lock;
+	wait_queue_head_t trace_waitq;
 };
 
 #define skl_to_bus(s)  (&(s)->hbus.core)
-- 
2.17.1

