From ff32eeed979b006fd627096533cb3f281e9b566d Mon Sep 17 00:00:00 2001
From: "Li, Fei1" <fei1.li@intel.com>
Date: Sat, 24 Feb 2018 23:49:28 +0800
Subject: [PATCH 1105/2302] Replace CWP with ACRN in file vhm_hypercall.h

Change-Id: I4c82de96c3163ed27d88a826ca668859a7a041ce
Signed-off-by: Li, Fei1 <fei1.li@intel.com>
---
 drivers/char/vhm/vhm_dev.c        |  2 +-
 drivers/vhm/vhm_hypercall.c       | 38 +++++++++++++++++++-------------------
 include/linux/vhm/vhm_hypercall.h | 10 +++++-----
 3 files changed, 25 insertions(+), 25 deletions(-)

diff --git a/drivers/char/vhm/vhm_dev.c b/drivers/char/vhm/vhm_dev.c
index f645df6..4a1f3bd 100644
--- a/drivers/char/vhm/vhm_dev.c
+++ b/drivers/char/vhm/vhm_dev.c
@@ -242,7 +242,7 @@ static long vhm_dev_ioctl(struct file *filep,
 				sizeof(struct acrn_create_vcpu)))
 			return -EFAULT;
 
-		ret = cwp_hypercall2(HC_CREATE_VCPU, vm->vmid,
+		ret = acrn_hypercall2(HC_CREATE_VCPU, vm->vmid,
 				virt_to_phys(&cv));
 		if (ret < 0) {
 			pr_err("vhm: failed to create vcpu %d!\n", cv.vcpu_id);
diff --git a/drivers/vhm/vhm_hypercall.c b/drivers/vhm/vhm_hypercall.c
index 44fd8a2..d0da22f 100644
--- a/drivers/vhm/vhm_hypercall.c
+++ b/drivers/vhm/vhm_hypercall.c
@@ -54,96 +54,96 @@
 
 inline long hcall_get_api_version(unsigned long api_version)
 {
-	return cwp_hypercall1(HC_GET_API_VERSION, api_version);
+	return acrn_hypercall1(HC_GET_API_VERSION, api_version);
 }
 
 inline long hcall_create_vm(unsigned long vminfo)
 {
-	return cwp_hypercall1(HC_CREATE_VM, vminfo);
+	return acrn_hypercall1(HC_CREATE_VM, vminfo);
 }
 
 inline long hcall_start_vm(unsigned long vmid)
 {
-	return  cwp_hypercall1(HC_START_VM, vmid);
+	return  acrn_hypercall1(HC_START_VM, vmid);
 }
 
 inline long hcall_pause_vm(unsigned long vmid)
 {
-	return cwp_hypercall1(HC_PAUSE_VM, vmid);
+	return acrn_hypercall1(HC_PAUSE_VM, vmid);
 }
 
 inline long hcall_destroy_vm(unsigned long vmid)
 {
-	return  cwp_hypercall1(HC_DESTROY_VM, vmid);
+	return  acrn_hypercall1(HC_DESTROY_VM, vmid);
 }
 
 inline long hcall_setup_sbuf(unsigned long sbuf_head)
 {
-	return cwp_hypercall1(HC_SETUP_SBUF, sbuf_head);
+	return acrn_hypercall1(HC_SETUP_SBUF, sbuf_head);
 }
 
 inline long hcall_set_memmap(unsigned long vmid, unsigned long memmap)
 {
-	return cwp_hypercall2(HC_VM_SET_MEMMAP, vmid, memmap);
+	return acrn_hypercall2(HC_VM_SET_MEMMAP, vmid, memmap);
 }
 
 inline long hcall_set_ioreq_buffer(unsigned long vmid, unsigned long buffer)
 {
-	return cwp_hypercall2(HC_SET_IOREQ_BUFFER, vmid, buffer);
+	return acrn_hypercall2(HC_SET_IOREQ_BUFFER, vmid, buffer);
 }
 
 inline long hcall_notify_req_finish(unsigned long vmid, unsigned long vcpu)
 {
-	return cwp_hypercall2(HC_NOTIFY_REQUEST_FINISH, vmid, vcpu);
+	return acrn_hypercall2(HC_NOTIFY_REQUEST_FINISH, vmid, vcpu);
 }
 
 inline long hcall_assert_irqline(unsigned long vmid, unsigned long irq)
 {
-	return cwp_hypercall2(HC_ASSERT_IRQLINE, vmid, irq);
+	return acrn_hypercall2(HC_ASSERT_IRQLINE, vmid, irq);
 }
 
 inline long hcall_deassert_irqline(unsigned long vmid, unsigned long irq)
 {
-	return cwp_hypercall2(HC_DEASSERT_IRQLINE, vmid, irq);
+	return acrn_hypercall2(HC_DEASSERT_IRQLINE, vmid, irq);
 }
 
 inline long hcall_pulse_irqline(unsigned long vmid, unsigned long irq)
 {
-	return cwp_hypercall2(HC_PULSE_IRQLINE, vmid, irq);
+	return acrn_hypercall2(HC_PULSE_IRQLINE, vmid, irq);
 }
 
 inline long hcall_inject_msi(unsigned long vmid, unsigned long msi)
 {
-	return cwp_hypercall2(HC_INJECT_MSI, vmid, msi);
+	return acrn_hypercall2(HC_INJECT_MSI, vmid, msi);
 }
 
 inline long hcall_assign_ptdev(unsigned long vmid, unsigned long bdf)
 {
-	return cwp_hypercall2(HC_ASSIGN_PTDEV, vmid, bdf);
+	return acrn_hypercall2(HC_ASSIGN_PTDEV, vmid, bdf);
 }
 
 inline long hcall_deassign_ptdev(unsigned long vmid, unsigned long bdf)
 {
-	return cwp_hypercall2(HC_DEASSIGN_PTDEV, vmid, bdf);
+	return acrn_hypercall2(HC_DEASSIGN_PTDEV, vmid, bdf);
 }
 
 inline long hcall_set_ptdev_intr_info(unsigned long vmid, unsigned long pt_irq)
 {
-	return cwp_hypercall2(HC_SET_PTDEV_INTR_INFO, vmid, pt_irq);
+	return acrn_hypercall2(HC_SET_PTDEV_INTR_INFO, vmid, pt_irq);
 }
 
 inline long hcall_reset_ptdev_intr_info(unsigned long vmid,
 		unsigned long pt_irq)
 {
-	return cwp_hypercall2(HC_RESET_PTDEV_INTR_INFO, vmid, pt_irq);
+	return acrn_hypercall2(HC_RESET_PTDEV_INTR_INFO, vmid, pt_irq);
 }
 
 inline long hcall_remap_pci_msix(unsigned long vmid, unsigned long msi)
 {
-	return  cwp_hypercall2(HC_VM_PCI_MSIX_REMAP, vmid, msi);
+	return  acrn_hypercall2(HC_VM_PCI_MSIX_REMAP, vmid, msi);
 }
 
 inline long hcall_vm_gpa2hpa(unsigned long vmid, unsigned long addr)
 {
-	return  cwp_hypercall2(HC_VM_GPA2HPA, vmid, addr);
+	return  acrn_hypercall2(HC_VM_GPA2HPA, vmid, addr);
 }
diff --git a/include/linux/vhm/vhm_hypercall.h b/include/linux/vhm/vhm_hypercall.h
index 8c6971a..e56a16c 100644
--- a/include/linux/vhm/vhm_hypercall.h
+++ b/include/linux/vhm/vhm_hypercall.h
@@ -52,7 +52,7 @@
 #ifndef VHM_HYPERCALL_H
 #define VHM_HYPERCALL_H
 
-static inline long cwp_hypercall0(unsigned long hcall_id)
+static inline long acrn_hypercall0(unsigned long hcall_id)
 {
 
 	/* x86-64 System V ABI register usage */
@@ -68,7 +68,7 @@ static inline long cwp_hypercall0(unsigned long hcall_id)
 	return result;
 }
 
-static inline long cwp_hypercall1(unsigned long hcall_id, unsigned long param1)
+static inline long acrn_hypercall1(unsigned long hcall_id, unsigned long param1)
 {
 
 	/* x86-64 System V ABI register usage */
@@ -84,7 +84,7 @@ static inline long cwp_hypercall1(unsigned long hcall_id, unsigned long param1)
 	return result;
 }
 
-static inline long cwp_hypercall2(unsigned long hcall_id, unsigned long param1,
+static inline long acrn_hypercall2(unsigned long hcall_id, unsigned long param1,
 		unsigned long param2)
 {
 
@@ -101,7 +101,7 @@ static inline long cwp_hypercall2(unsigned long hcall_id, unsigned long param1,
 	return result;
 }
 
-static inline long cwp_hypercall3(unsigned long hcall_id, unsigned long param1,
+static inline long acrn_hypercall3(unsigned long hcall_id, unsigned long param1,
 		unsigned long param2, unsigned long param3)
 {
 
@@ -118,7 +118,7 @@ static inline long cwp_hypercall3(unsigned long hcall_id, unsigned long param1,
 	return result;
 }
 
-static inline long cwp_hypercall4(unsigned long hcall_id, unsigned long param1,
+static inline long acrn_hypercall4(unsigned long hcall_id, unsigned long param1,
 		unsigned long param2, unsigned long param3,
 		unsigned long param4)
 {
-- 
2.7.4

