From 46422bb0fecb165fd1a2070f815119f8886c177f Mon Sep 17 00:00:00 2001
From: Tomas Winkler <tomas.winkler@intel.com>
Date: Mon, 4 May 2020 12:28:49 +0300
Subject: [PATCH 41/46] mei: dal: replace zero-length array with flexible-array
 member

link: https://gcc.gnu.org/onlinedocs/gcc/Zero-Length.html
Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
---
 drivers/misc/mei/dal/acp_format.h  |  8 ++++----
 drivers/misc/mei/dal/bh_cmd_defs.h | 14 +++++++-------
 drivers/misc/mei/dal/dal_class.c   |  2 +-
 drivers/misc/mei/dal/dal_dev.h     |  2 +-
 4 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/drivers/misc/mei/dal/acp_format.h b/drivers/misc/mei/dal/acp_format.h
index 8eeab7949024..640a3f6d79d9 100644
--- a/drivers/misc/mei/dal/acp_format.h
+++ b/drivers/misc/mei/dal/acp_format.h
@@ -95,7 +95,7 @@ struct ac_pack_header {
  */
 struct ac_ta_id_list {
 	u32 num;
-	uuid_t list[0];
+	uuid_t list[];
 } __packed;
 
 /**
@@ -109,7 +109,7 @@ struct ac_ta_id_list {
 struct ac_prop_list {
 	u32 num;
 	u32 len;
-	s8 data[0];
+	s8 data[];
 } __packed;
 
 /**
@@ -121,7 +121,7 @@ struct ac_prop_list {
  */
 struct ac_ins_reasons {
 	u32 len;
-	u32 data[0];
+	u32 data[];
 } __packed;
 
 /**
@@ -132,7 +132,7 @@ struct ac_ins_reasons {
  */
 struct ac_pack {
 	struct ac_pack_header *head;
-	char data[0];
+	char data[];
 } __packed;
 
 /**
diff --git a/drivers/misc/mei/dal/bh_cmd_defs.h b/drivers/misc/mei/dal/bh_cmd_defs.h
index 6cbc3e0209e1..7f177f4f2caf 100644
--- a/drivers/misc/mei/dal/bh_cmd_defs.h
+++ b/drivers/misc/mei/dal/bh_cmd_defs.h
@@ -124,7 +124,7 @@ struct  bh_command_header {
 	u64 seq;
 	u32 id;
 	u8 pad[4];
-	s8 cmd[0];
+	s8 cmd[];
 } __packed;
 
 /**
@@ -143,7 +143,7 @@ struct bh_response_header {
 	u64 ta_session_id;
 	s32 code;
 	u8 pad[4];
-	s8 data[0];
+	s8 data[];
 } __packed;
 
 /**
@@ -154,7 +154,7 @@ struct bh_response_header {
  */
 struct bh_download_jta_cmd {
 	uuid_t ta_id;
-	s8 ta_blob[0];
+	s8 ta_blob[];
 } __packed;
 
 /**
@@ -165,7 +165,7 @@ struct bh_download_jta_cmd {
  */
 struct bh_open_jta_session_cmd {
 	uuid_t ta_id;
-	s8 buffer[0];
+	s8 buffer[];
 } __packed;
 
 /**
@@ -189,7 +189,7 @@ struct bh_cmd {
 	u64 ta_session_id;
 	s32 command;
 	u32 outlen;
-	s8 buffer[0];
+	s8 buffer[];
 } __packed;
 
 /**
@@ -210,7 +210,7 @@ struct bh_check_svl_jta_blocked_state_cmd {
  */
 struct bh_resp {
 	__be32 response;
-	s8 buffer[0];
+	s8 buffer[];
 } __packed;
 
 /**
@@ -232,7 +232,7 @@ struct bh_resp_bof {
  */
 struct bh_resp_list_ta_packages {
 	u32 count;
-	uuid_t ta_ids[0];
+	uuid_t ta_ids[];
 } __packed;
 
 #endif /* __BH_DAL_H_*/
diff --git a/drivers/misc/mei/dal/dal_class.c b/drivers/misc/mei/dal/dal_class.c
index 75434cb67b08..6fb41f2f38a8 100644
--- a/drivers/misc/mei/dal/dal_class.c
+++ b/drivers/misc/mei/dal/dal_class.c
@@ -589,7 +589,7 @@ int dal_dc_setup(struct dal_device *ddev, enum dal_intf intf)
 		return  -ENOMEM;
 
 	/* each buffer contains data and length */
-	readq_sz = (DAL_MAX_BUFFER_SIZE + sizeof(ddev->bh_fw_msg->len)) *
+	readq_sz = (DAL_MAX_BUFFER_SIZE + sizeof(ddev->bh_fw_msg)) *
 		   DAL_BUFFERS_PER_CLIENT;
 	ret = kfifo_alloc(&dc->read_queue, readq_sz, GFP_KERNEL);
 	if (ret) {
diff --git a/drivers/misc/mei/dal/dal_dev.h b/drivers/misc/mei/dal/dal_dev.h
index c1d24bf0d046..de6f04a224a3 100644
--- a/drivers/misc/mei/dal/dal_dev.h
+++ b/drivers/misc/mei/dal/dal_dev.h
@@ -90,7 +90,7 @@ struct dal_client {
  */
 struct dal_bh_msg {
 	size_t len;
-	char msg[0];
+	char msg[];
 };
 
 /**
-- 
2.17.1

